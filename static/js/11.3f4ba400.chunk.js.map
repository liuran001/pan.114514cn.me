{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Common/DomainInput.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Task/Aria2Helper.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Setting/Captcha.js","component/Admin/Node/Node.js","component/Admin/Node/Guide/Communication.js","component/Admin/Node/Guide/Aria2RPC.js","component/Admin/Node/Guide/Metainfo.js","component/Admin/Node/Guide/Completed.js","component/Admin/Node/Guide/NodeGuide.js","component/Admin/Node/AddNode.js","component/Admin/Node/EditNode.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","Palette","Image","Category","Storage","Contactless","Group","Person","InsertDriveFile","Share","Assignment","CloudDownload","ListAlt","Dashboard","t","useTranslation","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","current","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","alt","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","relationships","startUser","avatarUrl","Fragment","inline","username","Trans","ns","i18nKey","components","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","keyPrefix","loading","setLoading","siteName","siteTitle","siteDes","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","authn_enabled","groups","setGroups","httpAlert","setHttpAlert","checked","FormControlLabel","control","Switch","ID","toString","Name","buttonMargin","tGlobal","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","SizeInput","max","suffix","unit","setUnit","val","setVal","err","setError","i","base","Math","pow","unitTransform","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","slave_node_retry","slave_ping_interval","slave_recover_interval","slave_transfer_timeout","use_temp_chunk_buffer","handleCheckChange","field","des","input","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","tApp","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","JSON","parse","themeString","stringify","Table","TableHead","TableRow","TableCell","TableBody","scope","helperText","onBlur","length","themeCopy","resStr","deleteTheme","Delete","Alert","severity","Link","href","newTheme","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","office_preview_service","thumb_file_suffix","thumb_max_task_count","thumb_encode_method","thumb_gc_after_gen","thumb_encode_quality","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","tableContainer","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","page","setPage","pageSize","setPageSize","total","setTotal","addDialog","setAddDialog","filter","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","page_size","order_by","conditions","Boolean","TableContainer","column","row","hover","policyTypeMap","Type","toLocaleString","sizeToString","delete","currentTarget","Edit","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","DomainInput","domain","setDomain","protocol","setProtocol","replace","startAdornment","magicVars","example","fileOnly","MagicVar","isFile","isSlave","m","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","viewButtonLabel","textTransform","code","fontFamily","steps","optional","COSGuide","props","activeStep","setActiveStep","Set","skipped","setSkipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","SecretKey","AccessKey","BaseURL","Server","IsPrivate","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","MaxSize","OptionsSerialized","file_type","placeholder_with_size","setPolicy","policyID","setPolicyID","region","setRegion","handleOptionChange","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","pattern","BucketName","RadioGroup","Radio","Collapse","in","getNumber","stepContental","policyCopy","parseInt","chunk_size","split","prevActiveStep","prevSkipped","newSkipped","values","add","LocalGuide","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","httpsAlert","setHttpsAlert","URL","placeholder","OSSGuide","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","submitPolicy","RemoteGuide","mimetype","pre","overflow","randomStr","minlength","server","secret","UpyunGuide","token","regions","S3Guide","alertOpen","setAlertOpen","Autocomplete","freeSolo","onInputChange","_","renderOption","renderInput","params","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","PolicyList","pid","MaxStorage","GroupForm","group","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","aria2_options","compress_size","decompress_size","source_batch","aria2_batch","setGroup","handleOptionCheckChange","groupCopy","one_time_download","aria2","archive_download","archive_task","EditGroupPreload","UserFilter","setSearch","group_id","status","setInput","keywords","setKeywords","nick","email","highlight","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","selected","setSelected","searches","isSelected","indexOf","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","disabledBadge","File","setFiles","deleteBatch","force","DeleteForever","UploadSessionID","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Aria2Helper","RouterLink","Download","downloads","setDownloads","helperOpen","setHelperOpen","Source","NodeID","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ComplexOfNoiseText","captcha_ComplexOfNoiseDot","captcha_IsShowHollowLine","captcha_IsShowNoiseDot","captcha_IsShowNoiseText","captcha_IsShowSlimeLine","captcha_IsShowSineLine","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","disabledCell","verticalAlign","features","Node","nodes","setNodes","isActive","setIsActive","minWidthclassNames","classNames","getStatusBadge","Box","CheckCircle","Cancel","node","feature","desired","PlayArrow","Pause","Communication","SlaveKey","handleTextChange","Aria2RPC","Aria2Enabled","Aria2OptionsSerialized","interval","rpc","onBack","Metainfo","Rank","Completed","slaveOnly","NodeGuide","MasterKey","setNode","usedSteps","useMemo","nodeCopy","nextStep","AddNode","EditNode","createTheme","overrides","MuiButton","MuiTab","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/11.3f4ba400.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Assignment,\n    Category,\n    CloudDownload,\n    Contacts,\n    Group,\n    Home,\n    Image,\n    InsertDriveFile,\n    Language,\n    ListAlt,\n    Mail,\n    Palette,\n    Person,\n    Settings,\n    SettingsEthernet,\n    Share,\n    Storage,\n    Contactless,\n} from \"@material-ui/icons\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary,\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\n        },\n    },\n    activeText: {\n        fontWeight: 500,\n    },\n    activeIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst items = [\n    {\n        title: \"nav.summary\",\n        icon: <Home />,\n        path: \"home\",\n    },\n    {\n        title: \"nav.settings\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"nav.basicSetting\",\n                path: \"basic\",\n                icon: <Language />,\n            },\n            {\n                title: \"nav.publicAccess\",\n                path: \"access\",\n                icon: <Contacts />,\n            },\n            {\n                title: \"nav.email\",\n                path: \"mail\",\n                icon: <Mail />,\n            },\n            {\n                title: \"nav.transportation\",\n                path: \"upload\",\n                icon: <SettingsEthernet />,\n            },\n            {\n                title: \"nav.appearance\",\n                path: \"theme\",\n                icon: <Palette />,\n            },\n            {\n                title: \"nav.image\",\n                path: \"image\",\n                icon: <Image />,\n            },\n            {\n                title: \"nav.captcha\",\n                path: \"captcha\",\n                icon: <Category />,\n            },\n        ],\n    },\n    {\n        title: \"nav.storagePolicy\",\n        icon: <Storage />,\n        path: \"policy\",\n    },\n    {\n        title: \"nav.nodes\",\n        icon: <Contactless />,\n        path: \"node\",\n    },\n    {\n        title: \"nav.groups\",\n        icon: <Group />,\n        path: \"group\",\n    },\n    {\n        title: \"nav.users\",\n        icon: <Person />,\n        path: \"user\",\n    },\n    {\n        title: \"nav.files\",\n        icon: <InsertDriveFile />,\n        path: \"file\",\n    },\n    {\n        title: \"nav.shares\",\n        icon: <Share />,\n        path: \"share\",\n    },\n    {\n        title: \"nav.tasks\",\n        icon: <Assignment />,\n        sub: [\n            {\n                title: \"nav.remoteDownload\",\n                path: \"download\",\n                icon: <CloudDownload />,\n            },\n            {\n                title: \"nav.generalTasks\",\n                path: \"task\",\n                icon: <ListAlt />,\n            },\n        ],\n    },\n];\n\nexport default function Dashboard({ content }) {\n    const { t } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        SetSubTitle(t(\"nav.title\"));\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    const { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        {t(\"nav.dashboard\")}\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map((item) => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]: location.pathname.startsWith(\n                                            \"/admin/\" + item.path\n                                        ),\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon\n                                        className={clsx({\n                                            [classes.activeIcon]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                    >\n                                        {item.icon}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        className={clsx({\n                                            [classes.activeText]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                        primary={t(item.title)}\n                                    />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            <ExpansionPanel\n                                key={item.title}\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={t(item.title)} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map((sub) => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]: location.pathname.startsWith(\n                                                        \"/admin/\" + sub.path\n                                                    ),\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon\n                                                    className={clsx({\n                                                        [classes.activeIcon]: location.pathname.startsWith(\n                                                            \"/admin/\" + sub.path\n                                                        ),\n                                                    })}\n                                                >\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={t(sub.title)}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Description,\n    Favorite,\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram,\n} from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    Tooltip,\n    XAxis,\n    YAxis,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    },\n    logo: {\n        width: 70,\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\",\n    },\n    title: {\n        marginLeft: 16,\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary,\n    },\n    version: {\n        color: theme.palette.text.hint,\n    },\n    links: {\n        padding: theme.spacing(3),\n    },\n    iconRight: {\n        minWidth: 0,\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800],\n    },\n}));\n\nexport default function Index() {\n    const { t } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0,\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\",\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = () => {\n        setOpen(false);\n        API.patch(\"/admin/setting\", {\n            options: [\n                {\n                    key: \"siteURL\",\n                    value: window.location.origin,\n                },\n            ],\n        })\n            .then(() => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", t(\"settings.saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then((response) => {\n                const data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k],\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal,\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (\n                    response.data.siteURL === \"\" ||\n                    response.data.siteURL !== window.location.origin\n                ) {\n                    setOpen(true);\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"https://pan_api.114514cn.me/api/v3/admin/news?tag=\" + t(\"summary.newsTag\"))\n            .then((response) => {\n                setNews(response.data.data);\n                const res = {};\n                response.data.included.forEach((v) => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"summary.newsletterError\"),\n                    \"warning\"\n                );\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {t(\"summary.confirmSiteURLTitle\")}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" &&\n                                t(\"summary.siteURLNotSet\", {\n                                    current: window.location.origin,\n                                })}\n                            {siteURL !== \"\" &&\n                                t(\"summary.siteURLNotMatch\", {\n                                    current: window.location.origin,\n                                })}\n                        </Typography>\n                        <Typography>\n                            {t(\"summary.siteURLDescription\")}\n                        </Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"default\">\n                        {t(\"summary.ignore\")}\n                    </Button>\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\n                        {t(\"summary.changeIt\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        {t(\"summary.trend\")}\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={t(\"nav.files\")}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={t(\"nav.users\")}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            <Line\n                                name={t(\"nav.shares\")}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        {t(\"summary.summary\")}\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary={t(\"summary.totalUsers\")}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary={t(\"summary.totalFiles\")}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary={t(\"summary.publicShares\")}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary={t(\"summary.privateShares\")}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            alt=\"cloudreve\"\n                            className={classes.logo}\n                            src={\"/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Cloudreve\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend}{\" \"}\n                                {version.is_pro === \"true\" && (\n                                    <Chip size=\"small\" label=\"Pro\" />\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"summary.homepage\")} />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://docs.cloudreve.org/\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Description />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"summary.documents\")}\n                                />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(t(\"summary.forumLink\"))\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"summary.forum\")} />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(t(\"summary.telegramGroupLink\"))\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"summary.telegramGroup\")}\n                                />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org/pro\")\n                                }\n                            >\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\n                                    <Favorite />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"summary.buyPro\")} />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news &&\n                            news.map((v) => (\n                                <>\n                                    <ListItem\n                                        button\n                                        alignItems=\"flex-start\"\n                                        onClick={() =>\n                                            window.open(\n                                                \"https://forum.cloudreve.org/d/\" +\n                                                    v.id\n                                            )\n                                        }\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                alt=\"Travis Howard\"\n                                                src={\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ].avatarUrl\n                                                }\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={v.attributes.title}\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.inline\n                                                        }\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        {newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ] &&\n                                                            newsUsers[\n                                                                v.relationships\n                                                                    .startUser\n                                                                    .data.id\n                                                            ].username}{\" \"}\n                                                    </Typography>\n                                                    <Trans\n                                                        ns={\"dashboard\"}\n                                                        i18nKey=\"summary.publishedAt\"\n                                                        components={[\n                                                            <TimeAgo\n                                                                key={0}\n                                                                datetime={\n                                                                    v.attributes\n                                                                        .startTime\n                                                                }\n                                                                locale={t(\n                                                                    \"timeAgoLocaleCode\",\n                                                                    {\n                                                                        ns:\n                                                                            \"common\",\n                                                                    }\n                                                                )}\n                                                            />,\n                                                        ]}\n                                                    />\n                                                </React.Fragment>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                </>\n                            ))}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function SiteInformation() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        siteDes: \"\",\n        siteScript: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"basicInformation\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"mainTitle\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"mainTitleDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"subTitle\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"subTitleDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"siteDescription\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.siteDes}\n                                    onChange={handleChange(\"siteDes\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"siteDescriptionDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"siteURL\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"siteURLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"customFooterHTML\")}\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    value={options.siteScript}\n                                    onChange={handleChange(\"siteScript\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"customFooterHTMLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"pwa\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smallIcon\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smallIconDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"mediumIcon\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"mediumIconDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"largeIcon\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"largeIconDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"displayMode\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"displayModeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"themeColor\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"themeColorDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"backgroundColor\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"backgroundColorDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function AlertDialog({ title, msg, open, onClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>{msg}</Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    知道了\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Access() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tVas } = useTranslation(\"dashboard\", { keyPrefix: \"vas\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        authn_enabled: \"0\",\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleInputChange = (name) => (event) => {\n        const value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"],\n        })\n            .then((response) => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={t(\"hint\")}\n                msg={t(\"webauthnNoHttps\")}\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"accountManagement\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"allowNewRegistrations\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"allowNewRegistrationsDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"emailActivation\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"emailActivationDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"captchaForSignup\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaForSignupDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"captchaForLogin\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaForLoginDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"captchaForReset\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaForResetDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={(e) => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label={t(\"webauthn\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"webauthnDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"defaultGroup\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"defaultGroupDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    buttonMargin: {\n        marginLeft: 8,\n    },\n}));\n\nexport default function Mail() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tVas } = useTranslation(\"dashboard\", { keyPrefix: \"vas\" });\n    const { t: tGlobal } = useTranslation(\"common\");\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        smtpEncryption: \"\",\n        mail_keepalive: \"30\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/mailTest\", {\n            to: tesInput,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"testMailSent\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n                reload();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"testSMTPSettings\")}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>{t(\"testSMTPTooltip\")}</Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label={t(\"recipient\")}\n                        value={tesInput}\n                        onChange={(e) => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        {tGlobal(\"cancel\")}\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        {t(\"send\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"smtp\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"senderName\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"senderNameDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"senderAddress\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"senderAddressDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpServer\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpServerDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpPort\")}\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpPortDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpUsername\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpUsernameDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpPassword\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpPasswordDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"replyToAddress\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"replyToAddressDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.smtpEncryption === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"smtpEncryption\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"enforceSSL\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"enforceSSLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpTTL\")}\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpTTLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"emailTemplates\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"activateNewUser\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"activateNewUserDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"resetPassword\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"resetPasswordDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        {t(\"sendTestEmail\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst unitTransform = (v) => {\n    if (!v || v.toString() === \"0\") {\n        return [0, 1024 * 1024];\n    }\n    for (let i = 4; i >= 0; i--) {\n        const base = Math.pow(1024, i);\n        if (v % base === 0) {\n            return [v / base, base];\n        }\n    }\n};\n\nexport default function SizeInput({\n    onChange,\n    min,\n    value,\n    required,\n    label,\n    max,\n    suffix,\n}) {\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [unit, setUnit] = useState(1);\n    const [val, setVal] = useState(value);\n    const [err, setError] = useState(\"\");\n\n    useEffect(() => {\n        onChange({\n            target: {\n                value: (val * unit).toString(),\n            },\n        });\n        if (val * unit > max || val * unit < min) {\n            setError(\"不符合尺寸限制\");\n        } else {\n            setError(\"\");\n        }\n    }, [val, unit, max, min]);\n\n    useEffect(() => {\n        const res = unitTransform(value);\n        setUnit(res[1]);\n        setVal(res[0]);\n    }, []);\n\n    return (\n        <FormControl error={err !== \"\"}>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                style={{ width: 200 }}\n                value={val}\n                type={\"number\"}\n                inputProps={{ step: 1 }}\n                onChange={(e) => setVal(e.target.value)}\n                required={required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={(e) => setUnit(e.target.value)}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>\n                                KB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024}>\n                                MB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024}>\n                                GB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\n                                TB{suffix && suffix}\n                            </MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {err !== \"\" && <FormHelperText>{err}</FormHelperText>}\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function UploadDownload() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer: \"1\",\n        temp_path: \"\",\n        maxEditSize: \"\",\n        chunk_retries: \"0\",\n        archive_timeout: \"0\",\n        download_timeout: \"0\",\n        preview_timeout: \"0\",\n        doc_preview_timeout: \"0\",\n        upload_credential_timeout: \"0\",\n        upload_session_timeout: \"0\",\n        slave_api_timeout: \"0\",\n        onedrive_monitor_timeout: \"0\",\n        share_download_session_timeout: \"0\",\n        onedrive_callback_check: \"0\",\n        reset_after_upload_failed: \"0\",\n        onedrive_source_timeout: \"0\",\n        slave_node_retry: \"0\",\n        slave_ping_interval: \"0\",\n        slave_recover_interval: \"0\",\n        slave_transfer_timeout: \"0\",\n        use_temp_chunk_buffer: \"1\",\n    });\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"transportation\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"workerNum\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"workerNumDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"transitParallelNum\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\n                                        \"max_parallel_transfer\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"transitParallelNumDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"tempFolder\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"tempFolderDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                {options.maxEditSize !== \"\" && (\n                                    <SizeInput\n                                        value={options.maxEditSize}\n                                        onChange={handleChange(\"maxEditSize\")}\n                                        required\n                                        min={0}\n                                        max={2147483647}\n                                        label={t(\"textEditMaxSize\")}\n                                    />\n                                )}\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"textEditMaxSizeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"failedChunkRetry\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={options.chunk_retries}\n                                    onChange={handleChange(\"chunk_retries\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"failedChunkRetryDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.use_temp_chunk_buffer ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"use_temp_chunk_buffer\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"cacheChunks\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"cacheChunksDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"resetConnection\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"resetConnectionDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"expirationDuration\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        {[\n                            {\n                                name: \"batchDownload\",\n                                field: \"archive_timeout\",\n                            },\n                            {\n                                name: \"downloadSession\",\n                                field: \"download_timeout\",\n                            },\n                            {\n                                name: \"previewURL\",\n                                field: \"preview_timeout\",\n                            },\n                            {\n                                name: \"docPreviewURL\",\n                                field: \"doc_preview_timeout\",\n                            },\n                            {\n                                name: \"uploadSession\",\n                                field: \"upload_session_timeout\",\n                                des: \"uploadSessionDes\",\n                            },\n                            {\n                                name: \"downloadSessionForShared\",\n                                field: \"share_download_session_timeout\",\n                                des: \"downloadSessionForSharedDes\",\n                            },\n                            {\n                                name: \"onedriveMonitorInterval\",\n                                field: \"onedrive_monitor_timeout\",\n                                des: \"onedriveMonitorIntervalDes\",\n                            },\n                            {\n                                name: \"onedriveCallbackTolerance\",\n                                field: \"onedrive_callback_check\",\n                                des: \"onedriveCallbackToleranceDes\",\n                            },\n                            {\n                                name: \"onedriveDownloadURLCache\",\n                                field: \"onedrive_source_timeout\",\n                                des: \"onedriveDownloadURLCacheDes\",\n                            },\n                        ].map((input) => (\n                            <div key={input.name} className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(input.name)}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options[input.field]}\n                                        onChange={handleChange(input.field)}\n                                        required\n                                    />\n                                    {input.des && (\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {t(input.des)}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"nodesCommunication\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        {[\n                            {\n                                name: \"slaveAPIExpiration\",\n                                field: \"slave_api_timeout\",\n                                des: \"slaveAPIExpirationDes\",\n                            },\n                            {\n                                name: \"heartbeatInterval\",\n                                field: \"slave_ping_interval\",\n                                des: \"heartbeatIntervalDes\",\n                            },\n                            {\n                                name: \"heartbeatFailThreshold\",\n                                field: \"slave_node_retry\",\n                                des: \"heartbeatFailThresholdDes\",\n                            },\n                            {\n                                name: \"heartbeatRecoverModeInterval\",\n                                field: \"slave_recover_interval\",\n                                des: \"heartbeatRecoverModeIntervalDes\",\n                            },\n                            {\n                                name: \"slaveTransitExpiration\",\n                                field: \"slave_transfer_timeout\",\n                                des: \"slaveTransitExpirationDes\",\n                            },\n                        ].map((input) => (\n                            <div key={input.name} className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(input.name)}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options[input.field]}\n                                        onChange={handleChange(input.field)}\n                                        required\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(input.des)}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\",\n        },\n        marginTop: theme.spacing(1),\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\",\n        },\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\",\n    },\n    fab: {\n        textAlign: \"right\",\n    },\n}));\n\nexport default function CreateTheme({ open, onClose, onSubmit }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tGlobal } = useTranslation(\"common\");\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\",\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\",\n            },\n        },\n    });\n\n    const subTheme = useCallback(() => {\n        try {\n            return createMuiTheme(theme);\n        } catch (e) {\n            return createMuiTheme({});\n        }\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"primaryColor\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\",\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"secondaryColor\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\",\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"primaryColorText\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"secondaryColorText\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark,\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"Text input\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    {tGlobal(\"cancel\")}\n                </Button>\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\n                    {tGlobal(\"ok\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    colorContainer: {\n        display: \"flex\",\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6,\n    },\n}));\n\nexport default function Theme() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tApp } = useTranslation();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme: \"\",\n        home_view_method: \"icon\",\n        share_view_method: \"list\",\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteTheme = (color) => {\n        if (color === options.defaultTheme) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"cannotDeleteDefaultTheme\"),\n                \"warning\"\n            );\n            return;\n        }\n        if (Object.keys(theme).length <= 1) {\n            ToggleSnackbar(\"top\", \"right\", t(\"keepAtLeastOneTheme\"), \"warning\");\n            return;\n        }\n        const themeCopy = { ...theme };\n        delete themeCopy[color];\n        const resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    const addTheme = (newTheme) => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"duplicatedThemePrimaryColor\"),\n                \"warning\"\n            );\n            return;\n        }\n        const res = {\n            ...theme,\n            [newTheme.palette.primary.main]: newTheme,\n        };\n        const resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    useEffect(() => {\n        const res = JSON.parse(options.themes);\n        const themeString = {};\n\n        Object.keys(res).forEach((k) => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"themes\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>{t(\"colors\")}</TableCell>\n                                        <TableCell>\n                                            {t(\"themeConfig\")}\n                                        </TableCell>\n                                        <TableCell>{t(\"actions\")}</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map((k) => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        t(\"wrongFormat\")\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={(e) => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value,\n                                                        });\n                                                    }}\n                                                    onBlur={(e) => {\n                                                        try {\n                                                            const res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if (\n                                                                !(\n                                                                    \"palette\" in\n                                                                    res\n                                                                ) ||\n                                                                !(\n                                                                    \"primary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .primary\n                                                                ) ||\n                                                                !(\n                                                                    \"secondary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .secondary\n                                                                )\n                                                            ) {\n                                                                throw e;\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res,\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true,\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false,\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton\n                                                    onClick={() =>\n                                                        deleteTheme(k)\n                                                    }\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{ marginTop: 8 }}\n                                    onClick={() => setCreate(true)}\n                                >\n                                    {t(\"createNewTheme\")}\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    <Trans\n                                        i18nKey={\"settings.themeConfigDes\"}\n                                        ns={\"dashboard\"}\n                                        components={[\n                                            <Link\n                                                key={0}\n                                                href={t(\"themeConfigDoc\")}\n                                                target={\"_blank\"}\n                                            />,\n                                        ]}\n                                    />\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"defaultTheme\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map((k) => (\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .primary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .secondary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"defaultThemeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"appearance\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"personalFileListView\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>\n                                        {tApp(\"fileManager.gridViewLarge\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        {tApp(\"fileManager.gridViewSmall\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>\n                                        {tApp(\"fileManager.listView\")}\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"personalFileListViewDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"sharedFileListView\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>\n                                        {tApp(\"fileManager.gridViewLarge\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        {tApp(\"fileManager.gridViewSmall\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>\n                                        {tApp(\"fileManager.listView\")}\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"sharedFileListViewDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme\n                onSubmit={addTheme}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function ImageSetting() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server: \"\",\n        avatar_path: \"\",\n        avatar_size: \"\",\n        avatar_size_l: \"\",\n        avatar_size_m: \"\",\n        avatar_size_s: \"\",\n        thumb_width: \"\",\n        thumb_height: \"\",\n        office_preview_service: \"\",\n        thumb_file_suffix: \"\",\n        thumb_max_task_count: \"\",\n        thumb_encode_method: \"\",\n        thumb_gc_after_gen: \"0\",\n        thumb_encode_quality: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        头像\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Gravatar 服务器\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Gravatar 服务器地址，可选择使用国内镜像\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    头像存储路径\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户上传自定义头像的存储路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                {options.avatar_size !== \"\" && (\n                                    <SizeInput\n                                        value={options.avatar_size}\n                                        onChange={handleChange(\"avatar_size\")}\n                                        required\n                                        min={0}\n                                        max={2147483647}\n                                        label={\"头像文件大小限制\"}\n                                    />\n                                )}\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可上传头像文件的最大大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        文件预览\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Office 文档预览服务\n                                </InputLabel>\n                                <Input\n                                    value={options.office_preview_service}\n                                    onChange={handleChange(\n                                        \"office_preview_service\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    可使用以下替换变量：\n                                    <br />\n                                    <code>{\"{$src}\"}</code> - 文件 URL\n                                    <br />\n                                    <code>{\"{$srcB64}\"}</code> - Base64\n                                    编码后的文件 URL\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        缩略图\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                以下设置只针对本机存储策略有效。\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图文件后缀\n                                </InputLabel>\n                                <Input\n                                    type={\"text\"}\n                                    value={options.thumb_file_suffix}\n                                    onChange={handleChange(\"thumb_file_suffix\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图生成并行数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: -1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_max_task_count}\n                                    onChange={handleChange(\n                                        \"thumb_max_task_count\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    -1 表示自动决定\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图格式\n                                </InputLabel>\n                                <Input\n                                    type={\"test\"}\n                                    value={options.thumb_encode_method}\n                                    onChange={handleChange(\n                                        \"thumb_encode_method\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    可选：png/jpg\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图生成并行数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                        max: 100,\n                                    }}\n                                    value={options.thumb_encode_quality}\n                                    onChange={handleChange(\n                                        \"thumb_encode_quality\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    压缩质量百分比，只针对 jpg 编码有效\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.thumb_gc_after_gen ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"thumb_gc_after_gen\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"生成完成后立即回收内存\"\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        display: \"flex\",\n    },\n    cover: {\n        width: 100,\n        height: 60,\n    },\n    card: {},\n    content: {\n        flex: \"1 0 auto\",\n    },\n    bg: {\n        backgroundColor: theme.palette.background.default,\n        padding: \"24px 24px\",\n    },\n    dialogFooter: {\n        justifyContent: \"space-between\",\n    },\n}));\n\nconst policies = [\n    {\n        name: \"本机存储\",\n        img: \"local.png\",\n        path: \"/admin/policy/add/local\",\n    },\n    {\n        name: \"从机存储\",\n        img: \"remote.png\",\n        path: \"/admin/policy/add/remote\",\n    },\n    {\n        name: \"七牛\",\n        img: \"qiniu.png\",\n        path: \"/admin/policy/add/qiniu\",\n    },\n    {\n        name: \"阿里云 OSS\",\n        img: \"oss.png\",\n        path: \"/admin/policy/add/oss\",\n    },\n    {\n        name: \"又拍云\",\n        img: \"upyun.png\",\n        path: \"/admin/policy/add/upyun\",\n    },\n    {\n        name: \"腾讯云 COS\",\n        img: \"cos.png\",\n        path: \"/admin/policy/add/cos\",\n    },\n    {\n        name: \"OneDrive\",\n        img: \"onedrive.png\",\n        path: \"/admin/policy/add/onedrive\",\n    },\n    {\n        name: \"Amazon S3\",\n        img: \"s3.png\",\n        path: \"/admin/policy/add/s3\",\n    },\n];\n\nexport default function AddPolicy({ open, onClose }) {\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">选择存储方式</DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map((v) => (\n                        <Grid item sm={12} md={6} key={v.path}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={() => {\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"/static/img/\" + v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textSecondary\"\n                                        >\n                                            {v.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions className={classes.dialogFooter}>\n                <Button\n                    onClick={() =>\n                        window.open(\n                            \"https://docs.cloudreve.org/use/policy/compare\"\n                        )\n                    }\n                    color=\"primary\"\n                >\n                    存储策略对比\n                </Button>\n                <Button onClick={onClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport { policyTypeMap } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"类型\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属文件数\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"数据量\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Policy() {\n    const classes = useStyles();\n    // const [loading, setLoading] = useState(false);\n    // const [tab, setTab] = useState(0);\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter },\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, filter]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/policy/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    添加存储策略\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight: 8,\n                        }}\n                        value={filter}\n                        onChange={(e) => setFilter(e.target.value)}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"local\"}>本机</MenuItem>\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\n                        <MenuItem value={\"s3\"}>Amazon S3</MenuItem>\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {policyTypeMap[row.Type] !==\n                                            undefined &&\n                                            policyTypeMap[row.Type]}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={(e) => {\n                                                    setEditID(row.ID);\n                                                    handleClick(e);\n                                                }}\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\n                    }}\n                >\n                    专家模式编辑\n                </MenuItem>\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\n                    }}\n                >\n                    向导模式编辑\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({ onChange, value, required, label }) {\n    const [domain, setDomain] = useState(\"\");\n    const [protocol, setProtocol] = useState(\"https://\");\n    const [error, setError] = useState();\n\n    useState(() => {\n        value = value ? value : \"\";\n        if (value.startsWith(\"https://\")) {\n            setDomain(value.replace(\"https://\", \"\"));\n            setProtocol(\"https://\");\n        } else {\n            if (value !== \"\") {\n                setDomain(value.replace(\"http://\", \"\"));\n                setProtocol(\"http://\");\n            }\n        }\n    }, [value]);\n\n    useEffect(() => {\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\n            setError(\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\n            );\n        } else {\n            setError(\"\");\n        }\n    }, [protocol]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={(e) => {\n                    setDomain(e.target.value);\n                    onChange({\n                        target: {\n                            value: protocol + e.target.value,\n                        },\n                    });\n                }}\n                required={required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={(e) => {\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target: {\n                                        value: e.target.value + domain,\n                                    },\n                                });\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && (\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\n            )}\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\n\nconst magicVars = [\n    {\n        value: \"{randomkey16}\",\n        des: \"16位随机字符\",\n        example: \"N6IimT5XZP324ACK\",\n        fileOnly: false,\n    },\n    {\n        value: \"{randomkey8}\",\n        des: \"8位随机字符\",\n        example: \"gWz78q30\",\n        fileOnly: false,\n    },\n    {\n        value: \"{timestamp}\",\n        des: \"秒级时间戳\",\n        example: \"1582692933\",\n        fileOnly: false,\n    },\n    {\n        value: \"{timestamp_nano}\",\n        des: \"纳秒级时间戳\",\n        example: \"1582692933231834600\",\n        fileOnly: false,\n    },\n    {\n        value: \"{uid}\",\n        des: \"用户ID\",\n        example: \"1\",\n        fileOnly: false,\n    },\n    {\n        value: \"{originname}\",\n        des: \"原始文件名\",\n        example: \"MyPico.mp4\",\n        fileOnly: true,\n    },\n    {\n        value: \"{ext}\",\n        des: \"文件扩展名\",\n        example: \".jpg\",\n        fileOnly: true,\n    },\n    {\n        value: \"{uuid}\",\n        des: \"UUID V4\",\n        example: \"31f0a770-659d-45bf-a5a9-166c06f33281\",\n        fileOnly: true,\n    },\n    {\n        value: \"{date}\",\n        des: \"日期\",\n        example: \"20060102\",\n        fileOnly: false,\n    },\n    {\n        value: \"{datetime}\",\n        des: \"日期时间\",\n        example: \"20060102150405\",\n        fileOnly: false,\n    },\n    {\n        value: \"{year}\",\n        des: \"年份\",\n        example: \"2006\",\n        fileOnly: false,\n    },\n    {\n        value: \"{month}\",\n        des: \"月份\",\n        example: \"01\",\n        fileOnly: false,\n    },\n    {\n        value: \"{day}\",\n        des: \"日\",\n        example: \"02\",\n        fileOnly: false,\n    },\n    {\n        value: \"{hour}\",\n        des: \"小时\",\n        example: \"15\",\n        fileOnly: false,\n    },\n    {\n        value: \"{minute}\",\n        des: \"分钟\",\n        example: \"04\",\n        fileOnly: false,\n    },\n    {\n        value: \"{second}\",\n        des: \"秒\",\n        example: \"05\",\n        fileOnly: false,\n    },\n];\n\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile ? \"文件名魔法变量\" : \"路径魔法变量\"}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>魔法变量</TableCell>\n                                <TableCell>描述</TableCell>\n                                <TableCell>示例</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {magicVars.map((m) => {\n                                if (!m.fileOnly || isFile) {\n                                    return (\n                                        <TableRow>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                {m.value}\n                                            </TableCell>\n                                            <TableCell>{m.des}</TableCell>\n                                            <TableCell>{m.example}</TableCell>\n                                        </TableRow>\n                                    );\n                                }\n                            })}\n                            {!isFile && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{path}\"}\n                                    </TableCell>\n                                    <TableCell>用户上传路径</TableCell>\n                                    <TableCell>/我的文件/学习资料/</TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Select from \"@material-ui/core/Select\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传设置\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"云函数回调\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function COSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"cos\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [region, setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = policy.Server;\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const creatCallback = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region: region,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\n                setActiveStep(6);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cos5\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    COS 管理控制台\n                                </Link>\n                                创建存储桶。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建存储桶的基础配置页面，将\n                                <code>空间名称</code>填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        空间名称\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\n                                            title:\n                                                \"空间名格式不正确, 举例：ccc-1252109809\",\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的访问权限类型，推荐选择\n                                <code>私有读写</code>\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有读写\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读私有写\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的基础配置，填写\n                                <code>基本信息</code>栏目下 给出的{\" \"}\n                                <code>访问域名</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={\"访问域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://console.cloud.tencent.com/cdn/access/guid\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        腾讯云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS\n                                    存储桶。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在腾讯云\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cam/capi\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    访问密钥\n                                </Link>\n                                页面获取\n                                一对访问密钥，并填写在下方。请确保这对密钥拥有\n                                COS 和 SCF 服务的访问权限。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretId\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContental}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要再用户开始上传时就创建占位符文件并扣除用户容量？开启后，可以防止用户恶意发起多个上传请求但不完成上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"创建占位符文件\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不创建\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 客户端直传需要借助腾讯云的\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/scf/index?rid=16\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    云函数\n                                </Link>\n                                产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\n                                如果是作为公有使用，请务必创建回调云函数。\n                                <br />\n                                <br />\n                            </Typography>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 可以尝试帮你自动创建回调云函数，请选择\n                                COS 存储桶 所在地域后继续。\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶所在地区\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={(e) =>\n                                            setRegion(e.target.value)\n                                        }\n                                        required\n                                    >\n                                        <MenuItem value={\"ap-beijing\"}>\n                                            华北地区(北京)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-chengdu\"}>\n                                            西南地区(成都)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou\"}>\n                                            华南地区(广州)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou-open\"}>\n                                            华南地区(广州Open)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-hongkong\"}>\n                                            港澳台地区(中国香港)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-mumbai\"}>\n                                            亚太南部(孟买)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-shanghai\"}>\n                                            华东地区(上海)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-singapore\"}>\n                                            亚太东南(新加坡)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-siliconvalley\"}>\n                                            美国西部(硅谷)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-toronto\"}>\n                                            北美地区(多伦多)\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我创建\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { getNumber } from \"../../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传设置\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function LocalGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      chunk_size: 25 << 20,\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule,\n        })\n            .then(() => {\n                setActiveStep(1);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请指定分片上传时的分片大小，填写为 0\n                                表示不使用分片上传。\n                                <br />\n                                启用分片上传后，用户上传的文件将会被切分成分片逐个上传到存储端，当上传中断后，用户可以选择从上次上传的分片后继续开始上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"分片上传大小\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport { getNumber } from \"../../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"应用授权\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传设置\",\n        optional: false,\n    },\n    {\n        title: \"账号授权\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function OneDriveGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\n        props.policy && props.policy.OptionsSerialized.od_proxy\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\n            : false\n    );\n    const [useSharePoint, setUseSharePoint] = useState(\n        props.policy && props.policy.OptionsSerialized.od_driver\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"onedrive\",\n                  Name: \"\",\n                  BucketName: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"https://graph.microsoft.com/v1.0\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      od_redirect: \"\",\n                      od_proxy: \"\",\n                      od_driver: \"\",\n                      chunk_size: 50 << 20,\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [httpsAlert, setHttpsAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"],\n        })\n            .then((response) => {\n                if (!response.data.siteURL.startsWith(\"https://\")) {\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\") {\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized: {\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\n                                \"https://pan_api.114514cn.me/api/v3/callback/onedrive/auth\",\n                                response.data.siteURL\n                            ).toString(),\n                        },\n                    });\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const statOAuth = () => {\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\n            .then((response) => {\n                window.location.href = response.data;\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\n            policyCopy.BaseURL =\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\n        } else {\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\n        }\n\n        if (!useCDN) {\n            policyCopy.OptionsSerialized.od_proxy = \"\";\n        }\n\n        if (!useSharePoint) {\n            policyCopy.OptionsSerialized.od_driver = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={() => setHttpsAlert(false)}\n                title={\"警告\"}\n                msg={\n                    \"您必须启用 HTTPS 才能使用 OneDrive/SharePoint 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} OneDrive/SharePoint 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (国际版账号)\n                                </Link>{\" \"}\n                                或者{\" \"}\n                                <Link\n                                    href={\n                                        \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (世纪互联账号)\n                                </Link>\n                                并登录，登录后进入\n                                <code>Azure Active Directory</code>管理面板。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入左侧 <code>应用注册</code> 菜单，并点击{\" \"}\n                                <code>新注册</code> 按钮。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写应用注册表单。其中，名称可任取；\n                                <code>受支持的帐户类型</code> 选择为\n                                <code>\n                                    任何组织目录(任何 Azure AD 目录 -\n                                    多租户)中的帐户\n                                </code>\n                                ；<code>重定向 URI (可选)</code>\n                                请选择<code>Web</code>，并填写\n                                <code>\n                                    {policy.OptionsSerialized.od_redirect}\n                                </code>\n                                ； 其他保持默认即可\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                创建完成后进入应用管理的<code>概览</code>\n                                页面，复制<code>应用程序(客户端) ID</code>\n                                并填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        应用程序(客户端) ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入应用管理页面左侧的<code>证书和密码</code>\n                                菜单，点击\n                                <code>新建客户端密码</code>\n                                按钮，<code>截止期限</code>选择为\n                                <code>从不</code>\n                                。创建完成后将客户端密码的值填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        客户端密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择您的 Microsoft 365 账号类型：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\n                                                \"https://graph.microsoft.com/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"国际版\"\n                                        />\n                                        <FormControlLabel\n                                            value={\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"世纪互联版\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否将文件存放在 SharePoint 中？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useSharePoint.toString()}\n                                        onChange={(e) => {\n                                            setUseSharePoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"存到指定 SharePoint 中\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"存到账号默认 OneDrive 驱动器中\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useSharePoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SharePoint 站点地址\n                                        </InputLabel>\n                                        <Input\n                                            placeholder={\n                                                \"https://example.sharepoint.com/sites/demo\"\n                                            }\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                            required={useSharePoint}\n                                            label={\"SharePoint 站点地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>8</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要在文件下载时替换为使用自建的反代服务器？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN.toString()}\n                                        onChange={(e) => {\n                                            setUseCDN(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useCDN}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <DomainInput\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                            required={useCDN}\n                                            label={\"反代服务器地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>9</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请指定分片上传时的分片大小，OneDrive 要求必须为\n                                320 KiB (327,680 bytes) 的整数倍。\n                                <br />\n                                启用分片上传后，用户上传的文件将会被切分成分片逐个上传到存储端，当上传中断后，用户可以选择从上次上传的分片后继续开始上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"分片上传大小\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要再用户开始上传时就创建占位符文件并扣除用户容量？开启后，可以防止用户恶意发起多个上传请求但不完成上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"创建占位符文件\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不创建\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(4)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}\n                                ，但是你需要点击下方按钮，并使用 OneDrive\n                                登录授权以完成初始化后才能使用。\n                                日后你可以在存储策略列表页面重新进行授权。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    转到授权页面\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}></div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已添加！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传设置\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function OSSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"oss\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      server_side_endpoint: \"\",\n                      chunk_size: 25 << 20,\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        if (!useLanEndpoint) {\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://oss.console.aliyun.com/overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    OSS 管理控制台\n                                </Link>\n                                创建 Bucket。注意：创建空间类型只能选择\n                                <code>标准存储</code>或<code>低频访问</code>\n                                ，暂不支持<code>归档存储</code>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您创建 Bucket 时指定的\n                                <code>Bucket 名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Bucket 名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的概览页面，填写\n                                <code>访问域名</code>栏目下\n                                <code>外网访问</code> 一行中间的{\" \"}\n                                <code>EndPoint（地域节点）</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                            title:\n                                                \"格式不合法，只需输入域名部分即可\",\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                如果您的 Cloudreve\n                                部署在阿里云计算服务中，并且与 OSS\n                                处在同一可用区下，您可以额外指定使用内网\n                                EndPoint\n                                以节省流量开始。是否要在服务端发送请求时使用 OSS\n                                内网 EndPoint？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useLanEndpoint.toString()}\n                                        onChange={(e) => {\n                                            setUseLanEndpoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useLanEndpoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            内网 EndPoint\n                                        </InputLabel>\n                                        <Input\n                                            required={useLanEndpoint}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                            inputProps={{\n                                                pattern:\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                                title:\n                                                    \"格式不合法，只需输入域名部分即可\",\n                                            }}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>7</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://cdn.console.aliyun.com/domain/list\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        阿里云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS\n                                    Bucket。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在阿里云\n                                <Link\n                                    href={\n                                        \"https://usercenter.console.aliyun.com/#/manage/ak\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    安全信息管理\n                                </Link>\n                                页面获取 用户 AccessKey，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(8, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请指定分片上传时的分片大小，范围 100 KB ~ 5 GB。\n                                <br />\n                                启用分片上传后，用户上传的文件将会被切分成分片逐个上传到存储端，当上传中断后，用户可以选择从上次上传的分片后继续开始上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={100 * 1024}\n                                    max={5368709120}\n                                    label={\"分片上传大小\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要再用户开始上传时就创建占位符文件并扣除用户容量？开启后，可以防止用户恶意发起多个上传请求但不完成上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"创建占位符文件\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不创建\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传设置\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    // const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"qiniu\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      mimetype: \"\",\n                      chunk_size: 25 << 20,\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 七牛 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用七牛存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.qiniu.com/create\"}\n                                    target={\"_blank\"}\n                                >\n                                    七牛控制面板\n                                </Link>\n                                创建对象存储资源。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储空间名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公有\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写您为存储空间绑定的 CDN 加速域名。\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"CDN 加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在七牛控制面板进入 个人中心 -\n                                密钥管理，在下方填写获得到的 AK、SK。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件 MimeType？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"image/*\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4, [\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !==\n                                            \"\",\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\n                                    隔开。七牛服务器会侦测文件内容以判断\n                                    MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            MimeType 列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                    policy.OptionsSerialized.mimetype !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请指定分片上传时的分片大小，范围 1 MB - 1 GB。\n                                <br />\n                                启用分片上传后，用户上传的文件将会被切分成分片逐个上传到存储端，当上传中断后，用户可以选择从上次上传的分片后继续开始上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={1 << 20}\n                                    max={1024 << 20}\n                                    label={\"分片上传大小\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(5, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                    policy.OptionsSerialized.mimetype !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要再用户开始上传时就创建占位符文件并扣除用户容量？开启后，可以防止用户恶意发起多个上传请求但不完成上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"创建占位符文件\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不创建\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber, randomStr } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储端配置\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传设置\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"remote\",\n                  Name: \"\",\n                  Server: \"https://example.com:5212\",\n                  SecretKey: randomStr(64),\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      chunk_size: 25 << 20,\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret: policy.SecretKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}从机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                        从机存储策略允许你使用同样运行了 Cloudreve\n                        的服务器作为存储端， 用户上传下载流量通过 HTTP 直传。\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                将和主站相同版本的 Cloudreve\n                                程序拷贝至要作为从机的服务器上。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                                可将您的密钥填入下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机密钥\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength: 64,\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                修改从机配置文件。\n                                <br />\n                                在从机端 Cloudreve 的同级目录下新建\n                                <code>conf.ini</code>\n                                文件，填入从机配置，启动/重启从机端 Cloudreve。\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                            </Typography>\n                            <pre>\n                                [System]\n                                <br />\n                                Mode = slave\n                                <br />\n                                Listen = :5212\n                                <br />\n                                <br />\n                                [Slave]\n                                <br />\n                                Secret = {policy.SecretKey}\n                                <br />\n                                <br />\n                                [CORS]\n                                <br />\n                                AllowOrigins = *<br />\n                                AllowMethods = OPTIONS,GET,POST\n                                <br />\n                                AllowHeaders = *<br />\n                            </pre>\n                            <Typography variant={\"body2\"}>\n                                从机端配置文件格式大致与主站端相同，区别在于：\n                                <ul>\n                                    <li>\n                                        <code>System</code>\n                                        分区下的\n                                        <code>mode</code>\n                                        字段必须更改为<code>slave</code>\n                                    </li>\n                                    <li>\n                                        必须指定<code>Slave</code>分区下的\n                                        <code>Secret</code>\n                                        字段，其值为第二步里填写或生成的密钥。\n                                    </li>\n                                    <li>\n                                        必须启动跨域配置，即<code>CORS</code>\n                                        字段的内容，\n                                        具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过\n                                        Web 端向从机上传文件。\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写从机地址。\n                                <br />\n                                如果主站启用了\n                                HTTPS，从机也需要启用，并在下方填入 HTTPS\n                                协议的地址。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机地址\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={() => testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    测试从机通信\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请指定分片上传时的分片大小，填写为 0\n                                表示不使用分片上传。\n                                <br />\n                                启用分片上传后，用户上传的文件将会被切分成分片逐个上传到存储端，当上传中断后，用户可以选择从上次上传的分片后继续开始上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"分片上传大小\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function UpyunGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"upyun\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"false\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      token: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用又拍云存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.upyun.com/services/create/file/\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    又拍云面板\n                                </Link>\n                                创建云存储服务。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写所创建的服务名称：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        服务名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用\n                                HTTPS：\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。\n                                <br />\n                                前往所创建云存储服务的 功能配置 面板，转到\n                                访问配置 选项卡，开启 Token 防盗链并设定密码。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"已开启 Token 防盗链\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"未开启 Token 防盗链\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    填写您所设置的 Token 防盗链 密钥\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Token 防盗链 密钥\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={\n                                                policy.IsPrivate === \"true\"\n                                            }\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"开启 Token 防盗链后无法使用直链功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nconst regions = {\n    \"us-east-2\": \"US East (Ohio)\",\n    \"us-east-1\": \"US East (N. Virginia)\",\n    \"us-west-1\": \"US West (N. California)\",\n    \"us-west-2\": \"US West (Oregon)\",\n    \"af-south-1\": \"Africa (Cape Town)\",\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\n    \"ca-central-1\": \"Canada (Central)\",\n    \"cn-north-1\": \"China (Beijing)\",\n    \"cn-northwest-1\": \"China (Ningxia)\",\n    \"eu-central-1\": \"Europe (Frankfurt)\",\n    \"eu-west-1\": \"Europe (Ireland)\",\n    \"eu-west-2\": \"Europe (London)\",\n    \"eu-south-1\": \"Europe (Milan)\",\n    \"eu-west-3\": \"Europe (Paris)\",\n    \"eu-north-1\": \"Europe (Stockholm)\",\n    \"me-south-1\": \"Middle East (Bahrain)\",\n    \"sa-east-1\": \"South America (São Paulo)\",\n};\n\nexport default function S3Guide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(true);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"s3\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      region: \"us-east-2\",\n                      chunk_size: 25 << 20,\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={alertOpen}\n                onClose={() => setAlertOpen(false)}\n                title={\"警告\"}\n                msg={\n                    \"S3 类型存储策略目前仅可用于自己使用，或者是给受信任的用户组使用。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} Amazon S3 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往 AWS S3\n                                控制台创建存储桶，在下方填写您创建存储桶时指定的\n                                <code>存储桶名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的公共访问权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"阻止全部公共访问权限\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许公共读取\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                (可选) 指定存储桶的 EndPoint（地域节点），\n                                填写为完整的 URL 格式，比如{\" \"}\n                                <code>https://bucket.region.example.com</code>。\n                                留空则将使用系统生成的默认接入点。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择存储桶所在的区域，或者手动输入区域代码\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <Autocomplete\n                                        options={Object.keys(regions)}\n                                        freeSolo\n                                        value={policy.OptionsSerialized.region}\n                                        onInputChange={(_, value) =>\n                                            handleOptionChange(\"region\")({\n                                                target: { value: value },\n                                            })\n                                        }\n                                        renderOption={(option) => (\n                                            <React.Fragment>\n                                                {regions[option]}\n                                            </React.Fragment>\n                                        )}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                style={{ width: \"100%\" }}\n                                                {...params}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用 CDN 加速访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    CDN 加速域名\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                获取访问密钥，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请指定分片上传时的分片大小，范围 5 MB ~ 5 GB。\n                                <br />\n                                启用分片上传后，用户上传的文件将会被切分成分片逐个上传到存储端，当上传中断后，用户可以选择从上次上传的分片后继续开始上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={5 << 20}\n                                    max={53687091200}\n                                    label={\"分片上传大小\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要再用户开始上传时就创建占位符文件并扣除用户容量？开启后，可以防止用户恶意发起多个上传请求但不完成上传。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"创建占位符文件\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不创建\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                S3 Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddPolicyParent() {\n    const classes = useStyles();\n\n    const { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type === \"local\" && <LocalGuide />}\n                {type === \"remote\" && <RemoteGuide />}\n                {type === \"qiniu\" && <QiniuGuide />}\n                {type === \"oss\" && <OSSGuide />}\n                {type === \"upyun\" && <UpyunGuide />}\n                {type === \"cos\" && <COSGuide />}\n                {type === \"onedrive\" && <OneDriveGuide />}\n                {type === \"s3\" && <S3Guide />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\n\nexport default function EditPro(props) {\n    const [, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\n            policyCopy.OptionsSerialized.chunk_size\n        );\n        policyCopy.OptionsSerialized.placeholder_with_size =\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>设置项</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>描述</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    ID\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>存储策略编号</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    类型\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>存储策略类型</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    名称\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储策名称</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Server\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储端 Endpoint</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    BucketName\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\n                                                \"BucketName\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储桶标识</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    私有空间\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否为私有空间</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    文件资源根URL\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    预览/获取文件外链时生成URL的前缀\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    AccessKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>AccessKey / 刷新Token</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SecretKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>SecretKey</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    最大单文件尺寸 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1,\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    最大可上传的文件尺寸，填写为0表示不限制\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    自动重命名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\n                                                \"AutoRename\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否根据规则对上传物理文件重命名\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储路径\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\n                                                \"DirNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储路径</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储文件名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储文件名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许获取外链\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\n                                                \"IsOriginLinkEnable\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    又拍云防盗链 Token\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许文件扩展名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>留空表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许的 MimeType\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对七牛存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 重定向地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_redirect\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_redirect\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>一般添加后无需修改</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 反代服务器地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive/SharePoint 驱动器资源标识\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive\n                                    存储策略有效，留空则使用用户的默认 OneDrive\n                                    驱动器\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Amazon S3 Region\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.region\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"region\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 Amazon S3 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    内网 EndPoint\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对 OSS 存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    上传分片大小 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1,\n                                            }}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .chunk_size\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"chunk_size\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    分片上传时单个分片的大小，仅部分存储策略支持。\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    上传前预支用户存储\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .placeholder_with_size\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"placeholder_with_size\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否在上传会话创建时就对用户存储进行预支，仅部分存储策略支持。\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{ margin: 8 }}\n                    >\n                        保存更改\n                    </Button>\n                </form>\n            </TableContainer>\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport EditPro from \"./Guid/EditPro\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditPolicyPreload() {\n    const classes = useStyles();\n    const [type, setType] = useState(\"\");\n    const [policy, setPolicy] = useState({});\n\n    const { mode, id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then((response) => {\n                response.data.IsOriginLinkEnable = response.data\n                    .IsOriginLinkEnable\n                    ? \"true\"\n                    : \"false\";\n                response.data.AutoRename = response.data.AutoRename\n                    ? \"true\"\n                    : \"false\";\n                response.data.MaxSize = response.data.MaxSize.toString();\n                response.data.OptionsSerialized.chunk_size = response.data\n                    .OptionsSerialized.chunk_size\n                    ? response.data.OptionsSerialized.chunk_size.toString()\n                    : 0;\n                response.data.IsPrivate = response.data.IsPrivate\n                    ? \"true\"\n                    : \"false\";\n\n                response.data.OptionsSerialized.placeholder_with_size = response\n                    .data.OptionsSerialized.placeholder_with_size\n                    ? \"true\"\n                    : \"false\";\n\n                response.data.OptionsSerialized.file_type = response.data\n                    .OptionsSerialized.file_type\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\n                    : \"\";\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" && (\n                    <>\n                        {type === \"local\" && <LocalGuide policy={policy} />}\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\n                        {type === \"cos\" && <COSGuide policy={policy} />}\n                        {type === \"onedrive\" && (\n                            <OneDriveGuide policy={policy} />\n                        )}\n                        {type === \"s3\" && <S3Guide policy={policy} />}\n                    </>\n                )}\n\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属用户数\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"最大容量\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Group() {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/group/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户组\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null &&\n                                            row.PolicyList.map((pid, key) => {\n                                                let res = \"\";\n                                                if (policies[pid]) {\n                                                    res += policies[pid].Name;\n                                                }\n                                                if (\n                                                    key !==\n                                                    row.PolicyList.length - 1\n                                                ) {\n                                                    res += \" / \";\n                                                }\n                                                return res;\n                                            })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/group/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\n// function getStyles(name, personName, theme) {\n//     return {\n//         fontWeight:\n//             personName.indexOf(name) === -1\n//                 ? theme.typography.fontWeightRegular\n//                 : theme.typography.fontWeightMedium\n//     };\n// }\n\nexport default function GroupForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: 1, // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\",\n                      source_batch: \"0\",\n                      aria2_batch: \"1\",\n                  },\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value,\n        });\n    };\n\n    const handleOptionCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value,\n            },\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized },\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"one_time_download\",\n            \"share_download\",\n            \"aria2\",\n        ].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] =\n                    groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\n            \"compress_size\",\n            \"decompress_size\",\n            \"source_batch\",\n            \"aria2_batch\",\n        ].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] = parseInt(\n                    groupCopy.OptionsSerialized[v]\n                );\n            }\n        });\n        groupCopy.PolicyList = [parseInt(groupCopy.PolicyList)];\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\n                groupCopy.OptionsSerialized.aria2_options\n            );\n        } catch (e) {\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy,\n        })\n            .then(() => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户组已\" + (props.group ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && \"新建用户组\"}\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        {group.ID !== 3 && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            用户组名\n                                        </InputLabel>\n                                        <Input\n                                            value={group.Name}\n                                            onChange={handleChange(\"Name\")}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            用户组的名称\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            存储策略\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-mutiple-chip-label\"\n                                            id=\"demo-mutiple-chip\"\n                                            value={group.PolicyList}\n                                            onChange={handleChange(\n                                                \"PolicyList\"\n                                            )}\n                                            input={\n                                                <Input id=\"select-multiple-chip\" />\n                                            }\n                                        >\n                                            {Object.keys(policies).map(\n                                                (pid) => (\n                                                    <MenuItem\n                                                        key={pid}\n                                                        value={pid}\n                                                    >\n                                                        {policies[pid]}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                        <FormHelperText id=\"component-helper-text\">\n                                            指定用户组的存储策略。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <SizeInput\n                                            value={group.MaxStorage}\n                                            onChange={handleChange(\n                                                \"MaxStorage\"\n                                            )}\n                                            min={0}\n                                            max={9223372036854775807}\n                                            label={\"初始容量\"}\n                                            required\n                                        />\n                                    </FormControl>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        用户组下的用户初始可用最大容量\n                                    </FormHelperText>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"下载限速\"}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                填写为 0 表示不限制。开启限制后，\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        批量生成外链数量限制\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={\n                                            group.OptionsSerialized.source_batch\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"source_batch\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        对于支持的存储策略下的文件，允许用户单次批量获取外链的最大文件数量，填写为\n                                        0 或空表示不允许批量生成外链。\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.ShareEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"ShareEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"允许创建分享\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法创建分享链接\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法下载别人创建的文件分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.WebDAVEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"WebDAVEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"WebDAV\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法通过 WebDAV\n                                        协议连接至网盘\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"禁止多次下载请求\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .aria2 === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"aria2\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"离线下载\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否允许用户创建离线下载任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 任务参数\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        此用户组创建离线下载任务时额外携带的参数，以\n                                        JSON\n                                        编码后的格式书写，您可也可以将这些设置写在\n                                        Aria2 配置文件里，可用参数请查阅官方文档\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 批量下载最大数量\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={\n                                            group.OptionsSerialized.aria2_batch\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_batch\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        允许用户单次批量创建的离线下载链接的最大数量\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"服务端打包下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户多选文件使用服务端中转打包下载，关闭后，用户仍然可以使用纯\n                                    Web 端打包下载功能。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .archive_task === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"archive_task\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"压缩/解压缩 任务\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否用户创建 压缩/解压缩 任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待压缩文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待解压文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport GroupForm from \"./GroupForm\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\n\nexport default function EditGroupPreload() {\n    const [group, setGroup] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then((response) => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"aria2\",\n                ].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[v] = response.data\n                            .OptionsSerialized[v]\n                            ? \"true\"\n                            : \"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\n                    \"compress_size\",\n                    \"decompress_size\",\n                    \"source_batch\",\n                    \"aria2_batch\",\n                ].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[\n                            v\n                        ] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList[0];\n\n                // JSON转换\n                if (\n                    response.data.OptionsSerialized.aria2_options === undefined\n                ) {\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\n                } else {\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\n                            response.data.OptionsSerialized.aria2_options\n                        );\n                    } catch (e) {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"Aria2 设置项格式错误\",\n                            \"warning\"\n                        );\n                        return;\n                    }\n                }\n                setGroup(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\n\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        group_id: \"all\",\n        status: \"all\",\n    });\n    const [groups, setGroups] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                nick: keywords,\n                email: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户组\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {groups.map((v) => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户状态\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"0\"}>正常</MenuItem>\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 昵称 / 用户名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport UserFilter from \"../Dialogs/UserFilter\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Group() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const block = (id) => {\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\" + id)\n            .then((response) => {\n                setUsers(\n                    users.map((v) => {\n                        if (v.ID === id) {\n                            const newUser = { ...v, Status: response.data };\n                            return newUser;\n                        }\n                        return v;\n                    })\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = users.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        昵称\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        Email\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    用户组\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        已用空间\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color:\n                                                        theme.palette.success\n                                                            .main,\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                正常\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                未激活\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                被封禁\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                超额封禁\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"封禁/解封\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() => block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\nexport default function UserForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\", // 转换类型\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setUser({\n            ...user,\n            [name]: event.target.value,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const userCopy = { ...user };\n\n        // 整型转换\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password: userCopy.Password,\n        })\n            .then(() => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户已\" + (props.user ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && \"创建用户\"}\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    邮箱\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    昵称\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && \"留空表示不修改\"}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\"GroupID\")}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户所属用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\"Status\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\n                                    <MenuItem value={\"3\"}>\n                                        超额使用被封禁\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport UserForm from \"./UserForm\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\n\nexport default function EditUserPreload() {\n    const [user, setUser] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then((response) => {\n                // 整型转换\n                [\"Status\", \"GroupID\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\n\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        policy_id: \"all\",\n        user_id: \"\",\n    });\n    const [policies, setPolicies] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        存储策略\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {policies.map((v) => {\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport FileFilter from \"../Dialogs/FileFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n}));\n\nexport default function File() {\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = (force) => () => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = files.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/file/import\")}\n                    variant={\"contained\"}\n                    style={{\n                        alignSelf: \"center\",\n                    }}\n                >\n                    从外部导入\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch(false)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"强制删除\">\n                            <IconButton\n                                onClick={deleteBatch(true)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <DeleteForever />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        文件名\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 70 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    上传者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"https://pan_api.114514cn.me/api/v3/admin/file/preview/\" +\n                                                row.ID\n                                            }\n                                        >\n                                            {row.Name}\n                                            {row.UploadSessionID && (\n                                                <Chip\n                                                    className={\n                                                        classes.disabledBadge\n                                                    }\n                                                    size=\"small\"\n                                                    label=\"上传中\"\n                                                />\n                                            )}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\n\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        is_dir: \"all\",\n        user_id: \"\",\n    });\n    const [keywords, setKeywords] = useState(\"\");\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                source_name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        源文件类型\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"1\"}>目录</MenuItem>\n                        <MenuItem value={\"0\"}>文件</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Share() {\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        对象名\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        浏览\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        下载\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    自动过期\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    分享于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/s/\" +\n                                                ids[row.ID] +\n                                                (row.Password === \"\"\n                                                    ? \"\"\n                                                    : \"?password=\" +\n                                                      row.Password)\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 &&\n                                            row.RemainDownloads + \" 次下载后\"}\n                                        {row.RemainDownloads === -1 && \"无\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(row.CreatedAt)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Link,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function Aria2Helper(props) {\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {\"如何配置离线下载？\"}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Cloudreve 的离线下载支持主从分散模式。您可以配置多个\n                    Cloudreve\n                    从机节点，这些节点可以用来处理离线下载任务，分散主节点的压力。当然，您也可以配置只在主节点上处理离线下载任务，这是最简单的一种方式。\n                    <ul>\n                        <li>\n                            如果您只需要为主机启用离线下载功能，请{\" \"}\n                            <Link\n                                component={RouterLink}\n                                to={\"/admin/node/edit/1\"}\n                            >\n                                点击这里\n                            </Link>{\" \"}\n                            编辑主节点；\n                        </li>\n                        <li>\n                            如果您想要在从机节点上分散处理离线下载任务，请{\" \"}\n                            <Link component={RouterLink} to={\"/admin/node/add\"}>\n                                点击这里\n                            </Link>{\" \"}\n                            添加并配置新节点。\n                        </li>\n                    </ul>\n                    当你添加多个可用于离线下载的节点后，主节点会将离线下载请求轮流发送到这些节点处理。\n                    节点离线下载配置完成后，您可能还需要{\" \"}\n                    <Link component={RouterLink} to={\"/admin/group\"}>\n                        到这里\n                    </Link>{\" \"}\n                    编辑用户组，为对应用户组开启离线下载权限。\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport Aria2Helper from \"./Aria2Helper\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Download() {\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [helperOpen, setHelperOpen] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <Aria2Helper\n                open={helperOpen}\n                onClose={() => setHelperOpen(false)}\n            />\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => loadList()}\n                    variant={\"outlined\"}\n                >\n                    刷新\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => setHelperOpen(true)}\n                    >\n                        <HelpIcon /> {\"  \"}如何配置离线下载\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    源地址\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    处理节点\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 150 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"就绪\"}\n                                        {row.Status === 1 && \"下载中\"}\n                                        {row.Status === 2 && \"暂停中\"}\n                                        {row.Status === 3 && \"出错\"}\n                                        {row.Status === 4 && \"完成\"}\n                                        {row.Status === 5 && \"取消/停止\"}\n                                        {row.Status === 6 && \"未知\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.NodeID <= 1 && (\n                                            <Link\n                                                component={RouterLink}\n                                                to={\"/admin/node/edit/1\"}\n                                            >\n                                                主机\n                                            </Link>\n                                        )}\n                                        {row.NodeID > 1 && (\n                                            <Link\n                                                component={RouterLink}\n                                                to={\n                                                    \"/admin/node/edit/\" +\n                                                    row.NodeID\n                                                }\n                                            >\n                                                从机#{row.NodeID}\n                                            </Link>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(row.CreatedAt)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Task() {\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    最后进度\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    错误信息\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(\n                                            row.Type,\n                                            row.Progress\n                                        )}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(row.CreatedAt)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { Dialog } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fade from \"@material-ui/core/Fade\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport PathSelector from \"../../FileManager/PathSelector\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    userSelect: {\n        width: 400,\n        borderRadius: 0,\n    },\n}));\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n\nexport default function Import() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        policy: 1,\n        userInput: \"\",\n        src: \"\",\n        dst: \"\",\n        recursive: true,\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [policies, setPolicies] = useState({});\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectRemote, setSelectRemote] = useState(false);\n    const [selectLocal, setSelectLocal] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.checked,\n        });\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (user === null) {\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.post(\"/admin/task/import\", {\n            uid: user.ID,\n            policy_id: parseInt(options.policy),\n            src: options.src,\n            dst: options.dst,\n            recursive: options.recursive,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/admin/file\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\n\n    useEffect(() => {\n        if (debouncedSearchTerm !== \"\") {\n            API.post(\"/admin/user/list\", {\n                page: 1,\n                page_size: 10000,\n                order_by: \"id asc\",\n                searches: {\n                    nick: debouncedSearchTerm,\n                    email: debouncedSearchTerm,\n                },\n            })\n                .then((response) => {\n                    setUsers(response.data.items);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }, [debouncedSearchTerm]);\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const selectUser = (u) => {\n        setOptions({\n            ...options,\n            userInput: \"\",\n        });\n        setUser(u);\n    };\n\n    const setMoveTarget = (setter) => (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setter(path === \"//\" ? \"/\" : path);\n    };\n\n    const openPathSelector = (isSrcSelect) => {\n        if (isSrcSelect) {\n            if (\n                !policies[options.policy] ||\n                policies[options.policy].Type === \"local\" ||\n                policies[options.policy].Type === \"remote\"\n            ) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"选择的存储策略只支持手动输入路径\",\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectRemote(true);\n        } else {\n            if (user === null) {\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n                return;\n            }\n            setSelectLocal(true);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={selectRemote}\n                onClose={() => setSelectRemote(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\"/admin/file/folders/policy/\" + options.policy}\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            src: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectRemote(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={selectLocal}\n                onClose={() => setSelectLocal(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\n                        \"/admin/file/folders/user/\" +\n                        (user === null ? 0 : user.ID)\n                    }\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            dst: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectLocal(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        导入外部目录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                您可以将存储策略中已有文件、目录结构导入到\n                                Cloudreve\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    存储策略\n                                </InputLabel>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    value={options.policy}\n                                    onChange={handleChange(\"policy\")}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                >\n                                    {Object.keys(policies).map((pid) => (\n                                        <MenuItem key={pid} value={pid}>\n                                            {policies[pid].Name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要导入文件目前存储所在的存储策略\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目标用户\n                                </InputLabel>\n                                <Input\n                                    value={options.userInput}\n                                    onChange={(e) => {\n                                        handleChange(\"userInput\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    startAdornment={\n                                        user !== null && (\n                                            <InputAdornment position=\"start\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    onDelete={() => {\n                                                        setUser(null);\n                                                    }}\n                                                    label={user.Nick}\n                                                />\n                                            </InputAdornment>\n                                        )\n                                    }\n                                    disabled={user !== null}\n                                />\n                                <Popper\n                                    open={\n                                        options.userInput !== \"\" &&\n                                        users.length > 0\n                                    }\n                                    anchorEl={anchorEl}\n                                    placement={\"bottom\"}\n                                    transition\n                                >\n                                    {({ TransitionProps }) => (\n                                        <Fade\n                                            {...TransitionProps}\n                                            timeout={350}\n                                        >\n                                            <Paper\n                                                className={classes.userSelect}\n                                            >\n                                                {users.map((u) => (\n                                                    <MenuItem\n                                                        key={u.Email}\n                                                        onClick={() =>\n                                                            selectUser(u)\n                                                        }\n                                                    >\n                                                        {u.Nick}{\" \"}\n                                                        {\"<\" + u.Email + \">\"}\n                                                    </MenuItem>\n                                                ))}\n                                            </Paper>\n                                        </Fade>\n                                    )}\n                                </Popper>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    原始目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.src}\n                                    onChange={(e) => {\n                                        handleChange(\"src\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(true)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要导入的目录在存储端的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目的目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.dst}\n                                    onChange={(e) => {\n                                        handleChange(\"dst\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(false)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要将目录导入到用户文件系统中的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.recursive}\n                                            onChange={handleCheckChange(\n                                                \"recursive\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"递归导入子目录\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否将目录下的所有子目录递归导入\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        创建导入任务\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport Link from \"@material-ui/core/Link\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Captcha() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        captcha_type: \"normal\",\n        captcha_height: \"1\",\n        captcha_width: \"1\",\n        captcha_mode: \"3\",\n        captcha_CaptchaLen: \"6\",\n        captcha_ComplexOfNoiseText: \"0\",\n        captcha_ComplexOfNoiseDot: \"0\",\n        captcha_IsShowHollowLine: \"0\",\n        captcha_IsShowNoiseDot: \"0\",\n        captcha_IsShowNoiseText: \"0\",\n        captcha_IsShowSlimeLine: \"0\",\n        captcha_IsShowSineLine: \"0\",\n        captcha_ReCaptchaKey: \"\",\n        captcha_ReCaptchaSecret: \"\",\n        captcha_TCaptcha_CaptchaAppId: \"\",\n        captcha_TCaptcha_AppSecretKey: \"\",\n        captcha_TCaptcha_SecretId: \"\",\n        captcha_TCaptcha_SecretKey: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        验证码\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    验证码类型\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_type}\n                                    onChange={handleChange(\"captcha_type\")}\n                                    required\n                                >\n                                    <MenuItem value={\"normal\"}>普通</MenuItem>\n                                    <MenuItem value={\"recaptcha\"}>\n                                        reCAPTCHA V2\n                                    </MenuItem>\n                                    <MenuItem value={\"tcaptcha\"}>\n                                        腾讯云验证码\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    验证码类型\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                {options.captcha_type === \"normal\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            普通验证码\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        宽度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_width}\n                                        onChange={handleChange(\"captcha_width\")}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        高度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_height}\n                                        onChange={handleChange(\n                                            \"captcha_height\"\n                                        )}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        长度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_CaptchaLen}\n                                        onChange={handleChange(\n                                            \"captcha_CaptchaLen\"\n                                        )}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        模式\n                                    </InputLabel>\n                                    <Select\n                                        value={options.captcha_mode}\n                                        onChange={handleChange(\"captcha_mode\")}\n                                        required\n                                    >\n                                        <MenuItem value={\"0\"}>数字</MenuItem>\n                                        <MenuItem value={\"1\"}>字母</MenuItem>\n                                        <MenuItem value={\"2\"}>算数</MenuItem>\n                                        <MenuItem value={\"3\"}>\n                                            数字+字母\n                                        </MenuItem>\n                                    </Select>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        验证码的形式\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                            {[\n                                {\n                                    name: \"加强干扰文字\",\n                                    field: \"captcha_ComplexOfNoiseText\",\n                                },\n                                {\n                                    name: \"加强干扰点\",\n                                    field: \"captcha_ComplexOfNoiseDot\",\n                                },\n                                {\n                                    name: \"使用空心线\",\n                                    field: \"captcha_IsShowHollowLine\",\n                                },\n                                {\n                                    name: \"使用噪点\",\n                                    field: \"captcha_IsShowNoiseDot\",\n                                },\n                                {\n                                    name: \"使用干扰文字\",\n                                    field: \"captcha_IsShowNoiseText\",\n                                },\n                                {\n                                    name: \"使用波浪线\",\n                                    field: \"captcha_IsShowSlimeLine\",\n                                },\n                                {\n                                    name: \"使用正弦线\",\n                                    field: \"captcha_IsShowSineLine\",\n                                },\n                            ].map((input) => (\n                                <div key={input.name} className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                    checked={\n                                                        options[input.field] ===\n                                                        \"1\"\n                                                    }\n                                                    onChange={handleCheckChange(\n                                                        input.field\n                                                    )}\n                                                />\n                                            }\n                                            label={input.name}\n                                        />\n                                    </FormControl>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"recaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            reCAPTCHA V2\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Site KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 网站密钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Secret\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_ReCaptchaSecret\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 秘钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"tcaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            腾讯云验证码\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SecretId\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/capi\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                访问密钥页面\n                                            </Link>{\" \"}\n                                            获取到的的 SecretId\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SecretKey\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/capi\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                访问密钥页面\n                                            </Link>{\" \"}\n                                            获取到的的 SecretKey\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APPID\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_CaptchaAppId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_CaptchaAppId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                图形验证页面\n                                            </Link>{\" \"}\n                                            获取到的的 APPID\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            App Secret Key\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_AppSecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_AppSecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                图形验证页面\n                                            </Link>{\" \"}\n                                            获取到的的 App Secret Key\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    Delete,\n    Edit,\n    Cancel,\n    CheckCircle,\n    PlayArrow,\n    Pause,\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Chip from \"@material-ui/core/Chip\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    disabledCell: {\n        color: theme.palette.text.disabled,\n    },\n    verticalAlign: {\n        verticalAlign: \"middle\",\n        display: \"inline-block\",\n    },\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    {\n        id: \"status\",\n        label: \"当前状态\",\n        minWidth: 50,\n    },\n    {\n        id: \"features\",\n        label: \"已启用功能\",\n        minWidth: 170,\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n    },\n];\n\nconst features = [\n    {\n        field: \"Aria2Enabled\",\n        name: \"离线下载\",\n    },\n];\n\nexport default function Node() {\n    const classes = useStyles();\n    const [nodes, setNodes] = useState([]);\n    const [isActive, setIsActive] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/node/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setNodes(response.data.items);\n                setTotal(response.data.total);\n                setIsActive(response.data.active);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const toggleNode = (id, desired) => {\n        setLoading(true);\n        API.patch(\"/admin/node/enable/\" + id + \"/\" + desired)\n            .then((response) => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"节点已\" + (desired === 1 ? \"暂停使用\" : \"启用\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteNode = (id) => {\n        setLoading(true);\n        API.delete(\"/admin/node/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"节点已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const getStatusBadge = (status) => {\n        if (status === 1) {\n            return (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label=\"未启用\"\n                />\n            );\n        }\n    };\n\n    const getFeatureBadge = (node) =>\n        features.map((feature) => {\n            if (node[feature.field]) {\n                return (\n                    <Chip\n                        className={classes.disabledBadge}\n                        size=\"small\"\n                        color=\"primary\"\n                        label={feature.name}\n                    />\n                );\n            }\n        });\n\n    const getRealStatusBadge = (status) =>\n        status ? (\n            <Box color=\"success.main\" fontSize=\"small\">\n                <CheckCircle\n                    className={classes.verticalAlign}\n                    fontSize=\"small\"\n                />{\" \"}\n                <span className={classes.verticalAlign}>在线</span>\n            </Box>\n        ) : (\n            <Box color=\"error.main\" fontSize=\"small\">\n                <Cancel className={classes.verticalAlign} fontSize=\"small\" />{\" \"}\n                <span className={classes.verticalAlign}>离线</span>\n            </Box>\n        );\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/node/add\")}\n                    variant={\"contained\"}\n                >\n                    接入新节点\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{\n                                            minWidth: column.minWidthclassNames,\n                                        }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {nodes.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        className={classNames({\n                                            [classes.disabledCell]:\n                                                row.Status === 1,\n                                        })}\n                                    >\n                                        {row.Name}\n                                        {getStatusBadge(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getRealStatusBadge(isActive[row.ID])}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getFeatureBadge(row)}\n                                    </TableCell>\n\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip\n                                            title={\n                                                row.Status === 1\n                                                    ? \"启用节点\"\n                                                    : \"暂停使用节点\"\n                                            }\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    toggleNode(\n                                                        row.ID,\n                                                        1 - row.Status\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                {row.Status === 1 && (\n                                                    <PlayArrow />\n                                                )}\n                                                {row.Status !== 1 && <Pause />}\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/node/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deleteNode(row.ID)\n                                                }\n                                                disabled={loading}\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Communication(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: props.node.Server,\n            secret: props.node.SlaveKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                您可以添加同样运行了 Cloudreve 的服务器作为从机端，\n                正常运行工作的从机端可以为主机分担某些异步任务（如离线下载）。\n                请参考下面向导部署并配置连接 Cloudreve 从机节点。\n                <Box fontWeight=\"fontWeightBold\">\n                    如果你已经在目标服务器上部署了从机存储策略，您可以跳过本页面的某些步骤，\n                    只将从机密钥、服务器地址在这里填写并保持与从机存储策略中一致即可。\n                </Box>\n                在后续版本中，从机存储策略的相关配置会合并到这里。\n            </Alert>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        将和主站相同版本的 Cloudreve\n                        程序拷贝至要作为从机的服务器上。\n                    </Typography>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>2</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                        可将您的密钥填入下方：\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                从机密钥\n                            </InputLabel>\n                            <Input\n                                required\n                                inputProps={{\n                                    minlength: 64,\n                                }}\n                                value={props.node.SlaveKey}\n                                onChange={props.handleTextChange(\"SlaveKey\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>3</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        修改从机配置文件。\n                        <br />\n                        在从机端 Cloudreve 的同级目录下新建\n                        <code>conf.ini</code>\n                        文件，填入从机配置，启动/重启从机端 Cloudreve。\n                        以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                    </Typography>\n                    <pre>\n                        [System]\n                        <br />\n                        Mode = slave\n                        <br />\n                        Listen = :5212\n                        <br />\n                        <br />\n                        [Slave]\n                        <br />\n                        Secret = {props.node.SlaveKey}\n                        <br />\n                        <br />;\n                        以下为可选的设置，对应主机节点的相关参数，可以通过配置文件应用到从机节点，请根据\n                        <br />\n                        ; 实际情况调整。更改下面设置需要重启从机节点后生效。\n                        <br />\n                        [OptionOverwrite]\n                        <br />\n                        ; 任务队列最多并行执行的任务数\n                        <br />\n                        max_worker_num = 50\n                        <br />\n                        ; 任务队列中转任务传输时，最大并行协程数\n                        <br />\n                        max_parallel_transfer = 10\n                        <br />\n                        ; 中转分片上传失败后重试的最大次数\n                        <br />\n                        chunk_retries = 10\n                    </pre>\n                    <Typography variant={\"body2\"}>\n                        从机端配置文件格式大致与主站端相同，区别在于：\n                        <ul>\n                            <li>\n                                <code>System</code>\n                                分区下的\n                                <code>mode</code>\n                                字段必须更改为<code>slave</code>\n                            </li>\n                            <li>\n                                必须指定<code>Slave</code>分区下的\n                                <code>Secret</code>\n                                字段，其值为第二步里填写或生成的密钥。\n                            </li>\n                        </ul>\n                        一个从机 Cloudreve 实例可以对接多个 Cloudreve\n                        主节点，只需在所有主节点中添加此从机节点并保持密钥一致即可。\n                    </Typography>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>4</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        填写从机地址。\n                        <br />\n                        如果主站启用了 HTTPS，从机也需要启用，并在下方填入 HTTPS\n                        协议的地址。\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                从机地址\n                            </InputLabel>\n                            <Input\n                                fullWidth\n                                required\n                                type={\"url\"}\n                                value={props.node.Server}\n                                onChange={props.handleTextChange(\"Server\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>5</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                    </Typography>\n                    <div className={classes.form}>\n                        <Button\n                            disabled={loading}\n                            variant={\"outlined\"}\n                            onClick={() => testSlave()}\n                            color={\"primary\"}\n                        >\n                            测试从机通信\n                        </Button>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                >\n                    下一步\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport API from \"../../../../middleware/Api\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Aria2RPC(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testAria2 = () => {\n        setLoading(true);\n        API.post(\"/admin/node/aria2/test\", {\n            type: props.node.Type,\n            server: props.node.Server,\n            secret: props.node.SlaveKey,\n            rpc: props.node.Aria2OptionsSerialized.server,\n            token: props.node.Aria2OptionsSerialized.token,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"连接成功，Aria2 版本为：\" + response.data,\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const mode = props.node.Type === 0 ? \"从机\" : \"主机\";\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                <Typography variant=\"body2\">\n                    Cloudreve 的离线下载功能由{\" \"}\n                    <Link href={\"https://aria2.github.io/\"} target={\"_blank\"}>\n                        Aria2\n                    </Link>{\" \"}\n                    驱动。如需使用，请在目标节点服务器上以和运行 Cloudreve\n                    相同的用户身份启动 Aria2， 并在 Aria2 的配置文件中开启 RPC\n                    服务，\n                    <Box component=\"span\" fontWeight=\"fontWeightBold\">\n                        Aria2 需要和{mode} Cloudreve 进程共用相同的文件系统。\n                    </Box>{\" \"}\n                    更多信息及指引请参考文档的{\" \"}\n                    <Link\n                        href={\"https://docs.cloudreve.org/use/aria2\"}\n                        target={\"_blank\"}\n                    >\n                        离线下载\n                    </Link>{\" \"}\n                    章节。\n                </Typography>\n            </Alert>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {props.node.Type === 0\n                            ? \"是否需要此节点接管离线下载任务？\"\n                            : \"是否需要主机接管离线下载任务？\"}\n                        <br />\n                        {props.node.Type === 0\n                            ? \"开启后，用户的离线下载请求可以被分流到此节点处理。\"\n                            : \"开启后，用户的离线下载请求可以被分流到主机处理。\"}\n                    </Typography>\n\n                    <div className={classes.form}>\n                        <FormControl required component=\"fieldset\">\n                            <RadioGroup\n                                required\n                                value={props.node.Aria2Enabled}\n                                onChange={props.handleTextChange(\n                                    \"Aria2Enabled\"\n                                )}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={\"true\"}\n                                    control={<Radio color={\"primary\"} />}\n                                    label=\"启用\"\n                                />\n                                <FormControlLabel\n                                    value={\"false\"}\n                                    control={<Radio color={\"primary\"} />}\n                                    label=\"关闭\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <Collapse in={props.node.Aria2Enabled === \"true\"}>\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>2</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            {props.node.Type === 0\n                                ? \" 在目标节点服务器上与节点 \"\n                                : \"在与 \"}\n                            Cloudreve 进程相同的文件系统环境下启动 Aria2\n                            进程。在启动 Aria2 时，需要在其配置文件中启用 RPC\n                            服务，并设定 RPC\n                            Secret，以便后续使用。以下为一个供参考的配置：\n                        </Typography>\n                        <pre>\n                            # 启用 RPC 服务\n                            <br />\n                            enable-rpc=true\n                            <br />\n                            # RPC 监听端口\n                            <br />\n                            rpc-listen-port=6800\n                            <br />\n                            # RPC 授权令牌，可自行设定\n                            <br />\n                            rpc-secret=\n                            {props.node.Aria2OptionsSerialized.token}\n                            <br />\n                        </pre>\n                        <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                            <Typography variant=\"body2\">\n                                推荐在日常启动流程中，先启动 Aria2，再启动节点\n                                Cloudreve，这样节点 Cloudreve 可以向 Aria2\n                                订阅事件通知，下载状态变更处理更及时。当然，如果没有这一流程，节点\n                                Cloudreve 也会通过轮询追踪任务状态。\n                            </Typography>\n                        </Alert>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>3</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            在下方填写{mode} Cloudreve 与 Aria2 通信的 RPC\n                            服务地址。一般可填写为\n                            <code>http://127.0.0.1:6800/</code>,其中端口号\n                            <code>6800</code>与上文配置文件中\n                            <code>rpc-listen-port</code>保持一致。\n                        </Typography>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 服务器地址\n                                </InputLabel>\n                                <Input\n                                    required\n                                    type={\"url\"}\n                                    value={\n                                        props.node.Aria2OptionsSerialized.server\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"server\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    包含端口的完整 RPC\n                                    服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用\n                                    Aria2 服务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>4</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            RPC 授权令牌，与 Aria2 配置文件中\n                            <code>rpc-secret</code>保持一致，未设置请留空。\n                        </Typography>\n                        <div className={classes.form}>\n                            <Input\n                                value={props.node.Aria2OptionsSerialized.token}\n                                onChange={props.handleOptionChange(\"token\")}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>5</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            在下方填写 Aria2 用作临时下载目录的 节点上的\n                            <strong>绝对路径</strong>，节点上的 Cloudreve\n                            进程需要此目录的读、写、执行权限。\n                        </Typography>\n                        <div className={classes.form}>\n                            <Input\n                                value={\n                                    props.node.Aria2OptionsSerialized.temp_path\n                                }\n                                onChange={props.handleOptionChange(\"temp_path\")}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>5</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            在下方按需要填写一些 Aria2 额外参数信息。\n                        </Typography>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态刷新间隔 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .interval\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"interval\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 调用超时 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .timeout\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"timeout\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    调用 RPC 服务时最长等待时间\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    全局任务参数\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .options\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"options\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    创建下载任务时携带的额外设置参数，以 JSON\n                                    编码后的格式书写，您可也可以将这些设置写在\n                                    Aria2 配置文件里，可用参数请查阅官方文档\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>6</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            完成以上步骤后，你可以点击下方的测试按钮测试\n                            {mode}\n                            Cloudreve 向 Aria2 通信是否正常。\n                            {props.node.Type === 0 &&\n                                \"在进行测试前请先确保您已进行并通过上一页面中的“从机通信测试”。\"}\n                        </Typography>\n                        <div className={classes.form}>\n                            <Button\n                                disabled={loading}\n                                variant={\"outlined\"}\n                                onClick={() => testAria2()}\n                                color={\"primary\"}\n                            >\n                                测试 Aria2 通信\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Collapse>\n\n            <div className={classes.stepFooter}>\n                {props.activeStep !== 0 && (\n                    <Button\n                        color={\"default\"}\n                        className={classes.button}\n                        onClick={props.onBack}\n                    >\n                        上一步\n                    </Button>\n                )}\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    onClick={props.onSubmit}\n                >\n                    下一步\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Metainfo(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>为此节点命名：</Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <Input\n                                required\n                                value={props.node.Name}\n                                onChange={props.handleTextChange(\"Name\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>2</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        为此节点指定负载均衡权重，数值为整数。某些负载均衡策略会根据此数值加权选择节点\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                负载均衡权重\n                            </InputLabel>\n                            <Input\n                                type={\"number\"}\n                                required\n                                inputProps={{\n                                    step: 1,\n                                    min: 0,\n                                }}\n                                value={props.node.Rank}\n                                onChange={props.handleTextChange(\"Rank\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                >\n                    下一步\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Completed(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <form className={classes.stepContent}>\n            <Typography>节点已保存！</Typography>\n            <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                如果您添加了新节点，还需要在节点列表手动启动节点才能正常使用。\n            </Typography>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    color={\"primary\"}\n                    className={classes.button}\n                    onClick={() => history.push(\"/admin/node\")}\n                >\n                    返回节点列表\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { randomStr } from \"../../../../utils\";\nimport Communication from \"./Communication\";\nimport Aria2RPC from \"./Aria2RPC\";\nimport API from \"../../../../middleware/Api\";\nimport Metainfo from \"./Metainfo\";\nimport Completed from \"./Completed\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\n\nconst steps = [\n    {\n        slaveOnly: true,\n        title: \"通信配置\",\n        optional: false,\n        component: function show(p) {\n            return <Communication {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"离线下载\",\n        optional: false,\n        component: function show(p) {\n            return <Aria2RPC {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"杂项信息\",\n        optional: false,\n        component: function show(p) {\n            return <Metainfo {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"完成\",\n        optional: false,\n        component: function show(p) {\n            return <Completed {...p} />;\n        },\n    },\n];\n\nexport default function NodeGuide(props) {\n    const [activeStep, setActiveStep] = useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [loading, setLoading] = useState(false);\n    const [node, setNode] = useState(\n        props.node\n            ? props.node\n            : {\n                  Status: 1,\n                  Type: 0,\n                  Aria2Enabled: \"false\",\n                  Server: \"https://example.com:5212\",\n                  SlaveKey: randomStr(64),\n                  MasterKey: randomStr(64),\n                  Rank: \"0\",\n                  Aria2OptionsSerialized: {\n                      token: randomStr(32),\n                      options: \"{}\",\n                      interval: \"10\",\n                      timeout: \"10\",\n                  },\n              }\n    );\n\n    const usedSteps = useMemo(() => {\n        return steps.filter((step) => !(step.slaveOnly && node.Type === 1));\n    }, [node.Type]);\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleTextChange = (name) => (event) => {\n        setNode({\n            ...node,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setNode({\n            ...node,\n            Aria2OptionsSerialized: {\n                ...node.Aria2OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const nextStep = () => {\n        if (props.node || activeStep + 1 === steps.length - 1) {\n            setLoading(true);\n\n            const nodeCopy = { ...node };\n            nodeCopy.Aria2OptionsSerialized = {\n                ...node.Aria2OptionsSerialized,\n            };\n            nodeCopy.Rank = parseInt(nodeCopy.Rank);\n            nodeCopy.Aria2OptionsSerialized.interval = parseInt(\n                nodeCopy.Aria2OptionsSerialized.interval\n            );\n            nodeCopy.Aria2OptionsSerialized.timeout = parseInt(\n                nodeCopy.Aria2OptionsSerialized.timeout\n            );\n            nodeCopy.Aria2Enabled = nodeCopy.Aria2Enabled === \"true\";\n            API.post(\"/admin/node\", {\n                node: nodeCopy,\n            })\n                .then(() => {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"节点已\" + (props.node ? \"保存\" : \"添加\"),\n                        \"success\"\n                    );\n                    setActiveStep(activeStep + 1);\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                })\n                .then(() => {\n                    setLoading(false);\n                });\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.node ? \"修改\" : \"添加\"} 节点\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {usedSteps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    if (!(label.slaveOnly && node.Type === 1)) {\n                        return (\n                            <Step key={label.title} {...stepProps}>\n                                <StepLabel {...labelProps}>\n                                    {label.title}\n                                </StepLabel>\n                            </Step>\n                        );\n                    }\n                })}\n            </Stepper>\n\n            {usedSteps[activeStep].component({\n                onSubmit: (e) => nextStep(),\n                node: node,\n                loading: loading,\n                onBack: (e) => setActiveStep(activeStep - 1),\n                handleTextChange: handleTextChange,\n                activeStep: activeStep,\n                handleOptionChange: handleOptionChange,\n            })}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NodeGuide from \"./Guide/NodeGuide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddNode() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                <NodeGuide />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NodeGuide from \"./Guide/NodeGuide\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../../middleware/Api\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditNode() {\n    const classes = useStyles();\n    const { id } = useParams();\n    const [node, setNode] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/node/\" + id)\n            .then((response) => {\n                response.data.Rank = response.data.Rank.toString();\n                response.data.Aria2OptionsSerialized.interval = response.data.Aria2OptionsSerialized.interval.toString();\n                response.data.Aria2OptionsSerialized.timeout = response.data.Aria2OptionsSerialized.timeout.toString();\n                response.data.Aria2Enabled = response.data.Aria2Enabled\n                    ? \"true\"\n                    : \"false\";\n                setNode(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {node && <NodeGuide node={node} />}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport { useHistory } from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport createTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from \"@material-ui/core/locale\";\n\nimport Index from \"./component/Admin/Index\";\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\nimport Access from \"./component/Admin/Setting/Access\";\nimport Mail from \"./component/Admin/Setting/Mail\";\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\nimport Theme from \"./component/Admin/Setting/Theme\";\nimport ImageSetting from \"./component/Admin/Setting/Image\";\nimport Policy from \"./component/Admin/Policy/Policy\";\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\nimport Group from \"./component/Admin/Group/Group\";\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\nimport User from \"./component/Admin/User/User\";\nimport UserForm from \"./component/Admin/User/UserForm\";\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\nimport File from \"./component/Admin/File/File\";\nimport Share from \"./component/Admin/Share/Share\";\nimport Download from \"./component/Admin/Task/Download\";\nimport Task from \"./component/Admin/Task/Task\";\nimport Import from \"./component/Admin/File/Import\";\nimport Captcha from \"./component/Admin/Setting/Captcha\";\nimport Node from \"./component/Admin/Node/Node\";\nimport AddNode from \"./component/Admin/Node/AddNode\";\nimport EditNode from \"./component/Admin/Node/EditNode\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst theme = createTheme(\n    {\n        palette: {\n            background: {},\n        },\n        overrides: {\n            MuiButton: {\n                root: {\n                    textTransform: \"none\",\n                },\n            },\n            MuiTab: {\n                root: {\n                    textTransform: \"none\",\n                },\n            },\n        },\n    },\n    zhCN\n);\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const user = Auth.GetUser();\n        if (user && user.group) {\n            if (user.group.id !== 1) {\n                history.push(\"/home\");\n                return;\n            }\n            setShow(true);\n            return;\n        }\n        history.push(\"/login\");\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show && (\n                        <Dashboard\n                            content={(path) => (\n                                <Switch>\n                                    <Route path={`${path}/home`} exact>\n                                        <Index />\n                                    </Route>\n\n                                    <Route path={`${path}/basic`}>\n                                        <SiteInformation />\n                                    </Route>\n\n                                    <Route path={`${path}/access`}>\n                                        <Access />\n                                    </Route>\n\n                                    <Route path={`${path}/mail`}>\n                                        <Mail />\n                                    </Route>\n\n                                    <Route path={`${path}/upload`}>\n                                        <UploadDownload />\n                                    </Route>\n\n                                    <Route path={`${path}/theme`}>\n                                        <Theme />\n                                    </Route>\n\n                                    <Route path={`${path}/image`}>\n                                        <ImageSetting />\n                                    </Route>\n\n                                    <Route path={`${path}/captcha`}>\n                                        <Captcha />\n                                    </Route>\n\n                                    <Route path={`${path}/policy`} exact>\n                                        <Policy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/add/:type`}\n                                        exact\n                                    >\n                                        <AddPolicy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/edit/:mode/:id`}\n                                        exact\n                                    >\n                                        <EditPolicyPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/group`} exact>\n                                        <Group />\n                                    </Route>\n\n                                    <Route path={`${path}/group/add`} exact>\n                                        <GroupForm />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/group/edit/:id`}\n                                        exact\n                                    >\n                                        <EditGroupPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/user`} exact>\n                                        <User />\n                                    </Route>\n\n                                    <Route path={`${path}/user/add`} exact>\n                                        <UserForm />\n                                    </Route>\n\n                                    <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/file`} exact>\n                                        <File />\n                                    </Route>\n\n                                    <Route path={`${path}/file/import`} exact>\n                                        <Import />\n                                    </Route>\n\n                                    <Route path={`${path}/share`} exact>\n                                        <Share />\n                                    </Route>\n\n                                    <Route path={`${path}/download`} exact>\n                                        <Download />\n                                    </Route>\n\n                                    <Route path={`${path}/task`} exact>\n                                        <Task />\n                                    </Route>\n\n                                    <Route path={`${path}/node`} exact>\n                                        <Node />\n                                    </Route>\n\n                                    <Route path={`${path}/node/add`} exact>\n                                        <AddNode />\n                                    </Route>\n\n                                    <Route path={`${path}/node/edit/:id`} exact>\n                                        <EditNode />\n                                    </Route>\n                                </Switch>\n                            )}\n                        />\n                    )}\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}