{"version":3,"sources":["component/Placeholder/TextLoading.js","middleware/Api.ts","component/Dial/AutoHidden.js","redux/explorer/reducer.ts","services/navigate.ts","services/file.ts","redux/explorer/async.ts","utils/page.ts","redux/explorer/index.ts","middleware/Auth.ts","component/Uploader/core/utils/pool.ts","component/Uploader/core/utils/validator.ts","component/Uploader/core/utils/request.ts","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Modals/OptionSelector.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","utils/index.js","component/Viewer/Text.js","component/Viewer/Code.js","i18n.ts","component/Uploader/core/errors/index.ts","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Uploader/core/utils/helper.ts","component/Uploader/core/utils/index.ts","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","utils/zip.js","utils/api.ts","redux/explorer/action.ts","component/FileManager/ImgPreview.js","component/Uploader/core/types.ts","component/Uploader/core/uploader/base.ts","component/Uploader/core/logger.ts","component/Uploader/core/api/index.ts","component/Uploader/core/index.ts","component/Uploader/core/uploader/chunk.ts","component/Uploader/core/uploader/local.ts","component/Uploader/core/uploader/remote.ts","component/Uploader/core/uploader/onedrive.ts","component/Uploader/core/uploader/oss.ts","component/Uploader/core/uploader/qiniu.ts","component/Uploader/core/uploader/cos.ts","component/Uploader/core/uploader/upyun.ts","component/Uploader/core/uploader/s3.ts","component/Uploader/core/uploader/placeholder.ts","component/Dial/Create.js","component/Uploader/Popup/TaskDetail.js","component/Uploader/Popup/UploadTask.js","component/Uploader/UseUpload.js","component/Modals/ConcurrentOption.js","component/Uploader/Popup/MoreActions.js","component/Uploader/Popup/TaskList.js","component/Placeholder/DropFile.js","component/Uploader/Uploader.js","config.ts","redux/viewUpdate/action.ts","utils/datetime.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","middleware/NoAuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/FileName.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/DnD/Scrolling.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","hooks/pagination.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/PaginationItem.js","component/FileManager/Pagination.js","component/FileManager/FileManager.js","component/Viewer/SelectMenu.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/FileManager/MusicPlayer.js","component/Viewer/Epub.js","App.js","middleware/Init.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","component/Placeholder/Nothing.js","component/FileManager/PathSelector.js","hooks/fileSubtitle.js"],"names":["useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","type","baseURL","getBaseURL","getPreviewURL","isShare","shareID","fileID","path","encodeURIComponent","instance","axios","create","withCredentials","AppError","message","code","error","i18next","exists","ns","t","stack","Error","interceptors","response","use","rawData","data","undefined","Auth","signout","window","location","href","msg","Promise","reject","AutoHidden","children","enable","hide","element","useState","hidden","setHidden","prev","scrollY","lastUpdate","useEffect","addEventListener","e","currentTarget","current","scrollTop","handleNavigation","in","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","withSourceEnabled","lastSelect","file","id","name","size","date","create_date","index","shiftSelectedIds","imgPreview","first","other","audioPreview","playingName","paused","isOpen","fileSave","sideBarOpen","checkSelectedProps","length","forEach","value","source_enabled","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","includes","search","keywords","searchPath","open","currentPolicy","policy","share","a","apiURL","key","API","get","getDownloadURL","reqURL","downloadPath","put","askForOption","options","title","dispatch","getState","resolve","dialog","setOptionModal","onClose","callback","option","statusHelper","isHomePage","isSharePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","actions","reducers","setNavigator","navigatorLoading","navigateTo","navigator","setPagination","viewUpdate","pagination","page","navigateUp","pathSplit","split","pop","newPath","join","drawerToggleAction","dragAndDrop","changeViewMethod","method","toggleDaylightMode","changeContextMenu","menuType","setNavigatorLoadingStatus","status","setNavigatorError","openCreateFolderDialog","openCreateFileDialog","setUserPopover","anchor","setShareUserPopover","openRenameDialog","openResaveDialog","openMoveDialog","openRemoveDialog","openShareDialog","applyThemes","setSessionStatus","openMusicDialog","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","openLoadingDialog","text","closeAllModals","toggleSnackbar","vertical","horizontal","color","setModalsLoading","refreshFileList","searchMyFile","showImgPreivew","showAudioPreview","audioPreviewSetIsOpen","audioPreviewSetPlaying","refreshStorage","saveFile","setSiteConfig","config","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","parse","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","SetPreference","preference","GetPreference","GetPreferenceWithDefault","defaultVal","Pool","limit","queue","processing","uploader","push","check","item","this","v","findIndex","task","dst","ProcessingTaskDuplicatedError","release","run","then","err","processingNum","availableNum","Math","max","slice","checkers","allowedSuffix","ext","FileValidateError","maxSize","validate","c","CancelToken","baseConfig","transformResponse","TransformResponseError","cdBackendConfig","request","url","catch","isCancel","RequestCanceledError","HTTPError","requestAPI","icon","opacity","DarkModeSwitcher","position","useTranslation","ThemeType","useSelector","siteConfig","useDispatch","ToggleThemeMode","useCallback","isDayLight","isDark","placement","classNames","onClick","sideButton","marginRight","sortOptions","paginationOption","SubActions","isSmall","inherit","keyPrefix","viewMethod","explorerViewMethod","shareInfo","pageSize","OpenLoadingDialog","ChangeSortMethod","changeSortMethod","SetShareUserPopover","ChangePageSize","changePageSize","anchorSort","setAnchorSort","anchorPagination","setAnchorPagination","selectedIndex","setSelectedIndex","handlePaginationChange","s","toggleViewMethod","newMethod","pathHelper","fontSize","anchorEl","Boolean","map","toString","parseInt","event","0","1","2","3","4","5","6","7","handleMenuItemClick","nick","creator","style","height","src","content","minWidth","OptionSelector","modals","aria-labelledby","dividers","component","aria-label","o","button","primary","secondary","description","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","SaveButton","buttonClassname","clsx","disabled","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","loadingText","Dialog","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","SetModalsLoading","RefreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","Trans","i18nKey","values","components","DialogActions","Button","preventDefault","dirs","items","post","src_dir","modalsLoading","widthAnimation","shareUrl","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","lastSubmit","useRef","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","fullWidth","Divider","List","onChange","aria-controls","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Checkbox","checked","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","random","substr","edge","onMouseDown","on","onIcon","Visibility","offIcon","VisibilityOff","labelWidth","Select","labelId","MenuItem","num","Typography","TextField","onFocus","select","autoFocus","inputProps","readonly","label","link","clipboard","writeText","submitFormBody","is_dir","DecompressDialog","SubmitDecompressTask","submitDecompressTask","CompressDialog","fileName","setFileName","SubmitCompressTask","submitCompressTask","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","dragMove","scoreHandler","Download","downloaded","submitRemove","delete","submitMove","patch","DragSelectedPath","doMove","submitRename","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","failed","r","details","setMoveTarget","remoteDownloadNext","copySource","getSource","multiline","createNewFolder","onSubmit","createNewFile","copy","move","remove","remoteDownload","placeholder","torrentDownload","decompress","compress","Component","Modals","connect","withRouter","withTranslation","sizeToString","bytes","i","floor","log","pow","toFixed","fixUrlHash","setGetParameter","paramName","paramValue","indexOf","prefix","substring","suffix","history","pushState","changeThemeColor","document","querySelector","setAttribute","bufferDecode","Uint8Array","from","atob","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","filePath","hex2bin","hex","padStart","basename","pathList","filename","fileNameNoExt","lastIndexOf","randomStr","result","characters","charactersLength","charAt","getNumber","base","conditions","isMac","platform","toUpperCase","isMobileSafari","ua","userAgent","iOS","match","webkit","vhCheck","vh","innerHeight","documentElement","setProperty","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","math","useRouteMatch","$vm","createRef","useLocation","query","URLSearchParams","useParams","UseFileSubTitle","requestURL","pathname","responseType","textdata","Buffer","params","toBase64","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","$img2Url","console","elevation","language","ref","onSave","toolbar","h1","h2","h3","h4","img","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","wordWrap","setWordWrap","extension","codePreviewSuffix","control","Array","Set","keys","k","fallback","readOnly","extraEditorClassName","i18n","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","load","defaultNS","interpolation","escapeValue","lng","languages","displayName","UploaderErrorName","RETRY_ERROR_LIST","FailedCreateUploadSession","HTTPRequestFailed","LocalChunkUploadFailed","SlaveChunkUploadFailed","RequestCanceled","ProcessingTaskDuplicated","FailedTransformResponse","RETRY_CODE_LIST","UploaderError","field","InvalidFile","supported","UnknownPolicyError","UnknownPolicyType","APIError","CreateUploadSessionError","DeleteUploadSessionError","FailedDeleteUploadSession","axiosErr","LocalChunkUploadError","chunkIndex","SlaveChunkUploadError","OneDriveChunkError","OneDriveChunkUploadFailed","OneDriveEmptyFileSelected","OneDriveEmptyFile","OneDriveFinishUploadError","FailedFinishOneDriveUpload","S3LikeChunkError","S3LikeChunkUploadFailed","getElementsByTagName","innerHTML","S3LikeFinishUploadError","QiniuChunkError","QiniuChunkUploadFailed","QiniuFinishUploadError","FailedFinishQiniuUpload","COSUploadError","COSPostUploadFailed","COSUploadCallbackError","COSUploadCallbackFailed","UpyunUploadError","UpyunPostUploadFailed","S3LikeUploadCallbackError","S3LikeUploadCallbackFailed","parseError","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","openURL","sigOut","reload","user","Popover","transformOrigin","visitorMenu","registerEnabled","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","group","UserAvatarPopover","userPopoverAnchorEl","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","handleDrawerToggle","mobileOpen","openDownload","startDownload","archiveDownload","startBatchDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","webdav","process","browser","test","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","isPreviewable","openPreview","disableClickAway","audioPreviewPlayingName","audioPreviewOpen","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","loadUploader","audioPreviewIsOpen","withTheme","flexShrink","drawerDesktop","mixins","flexDirection","justifyContent","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","getChunks","chunkByteSize","chunks","count","ceil","chunk","sumChunk","reduce","loaded","getResumeCtxKey","setResumeCtx","logger","ctxKey","warn","WriteCtxFailed","removeResumeCtx","removeItem","RemoveCtxFailed","cleanupResumeCtx","getResumeCtx","localInfoString","ReadCtxFailed","localInfo","InvalidCtxData","session","Date","now","CtxExpired","listResumeCtx","res","len","OBJtoXML","obj","xml","isArray","array","getFileInput","isFolder","createElement","multiple","body","appendChild","pathJoin","parts","sep","part","RegExp","trimPrefix","getDirectoryUploadDst","relPath","webkitRelativePath","fsPath","readEntriesPromise","directoryReader","readEntries","readFilePromise","fileReader","readAllDirectoryEntries","entries","getAllFileEntries","dataTransferItemList","fileEntries","webkitGetAsEntry","getAsFile","entry","shift","isFile","fullPath","isDirectory","createReader","isFileDrop","dataTransfer","types","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","minHeight","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","p","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","Crc32","crc","table","offset","prototype","j","getDataHelper","byteLength","uint8","view","DataView","buffer","ZIP","underlyingSource","ctrl","activeZipObject","closed","files","filenames","encoder","TextEncoder","activeZipIndex","next","processNextChunk","closeZip","zipWriter","enqueue","fileLike","TypeError","trim","lastModified","directory","endsWith","nameBuf","encode","zipObject","level","comment","compressedLength","uncompressedLength","writeHeader","setUint16","setUint32","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","set","writeFooter","footer","indexFilename","setUint8","zipObj","read","done","outputData","append","stream","getReader","ReadableStream","start","pull","getPreviewPath","walk","f","objects","subs","setFileList","setDirList","setSortMethod","setSideBar","setCurrentPolicy","removeSelectedTargets","addSelectedTargets","setLastSelect","setShiftSelectedIds","sortMethodFuncs","sizePos","b","sizeRes","namePos","localeCompare","numeric","ignorePunctuation","nameRev","timePos","timeRev","modifyTimePos","modifyTimeRev","selectAll","updateFileList","sortMethod","x","sortFunc","sort","toggleObjectInfoSidebar","closeContextMenu","serverSideBatchDownload","router","postBody","shareDownload","allowArchiveDownload","fileStream","streamSaver","createWriteStream","readableZipStream","previewPath","fetch","cache","WritableStream","pipeTo","getViewerURL","viewer","openViewer","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","all","begin","min","end","newShiftSelected","encodings","encoding","encodingRequired","allOptions","batchGetSource","sourceBatch","ImagPreviewComponent","photoIndex","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","PolicyType","TaskType","Status","Logger","allowLevel","args","getPrintPrefix","createUploadSession","req","cancel","cancelToken","localUploadChunk","sessionID","onProgress","headers","onUploadProgress","progressEvent","slaveUploadChunk","credential","Authorization","oneDriveUploadChunk","range","finishOneDriveUpload","s3LikeUploadChunk","etag","s3LikeFinishUpload","isOss","PartNumber","ETag","validateStatus","qiniuDriveUploadChunk","upToken","authorization","qiniuFinishUpload","partNumber","cosFormUploadChunk","keyTime","ak","bodyFormData","FormData","cosUploadCallback","upyunFormUploadChunk","s3LikeUploadCallback","resumePolicy","local","remote","qiniu","oss","onedrive","s3","Base","manager","child","added","subscriber","progress","lastTime","startTime","subscribe","transit","initialized","setError","queued","pool","preparing","cachedInfo","utils","policy_id","last_modified","token","resumed","chunkProgress","upload","afterUpload","finished","cancelUploadSession","canceled","reset","deleteUploadSession","onTransition","newStatus","onError","onMsg","Retryable","fromCache","SelectType","Chunk","initBeforeUploadChunks","updateLocalCache","uploadChunk","chunkSize","notifyResumeProgress","getProgressInfoItem","Local","chunkInfo","updateChunkProgress","Remote","uploadURLs","OneDrive","rangeEnd","sendRange","innererror","alignChunkOffset","chunkOffset","rangeStatus","expectedStart","nextExpectedRanges","newChunkOffset","finishing","OSS","completeURL","Qiniu","chunkRes","COS","Upyun","ResumeHint","resumable","UploadManager","fileInput","directoryInput","currentPath","changeConcurrentLimit","newLimit","File","NoPolicySelected","onchange","ev","fileSelectCallback","click","resumeTasks","tasks","dispatchUploader","resumeHint","cleanupSessions","Event","onFileDroppedIn","onDropLeave","uploaders","onDropFileAdded","logLevel","concurrentLimit","dropZone","onDropOver","cos","upyun","S3","acceptVal","removeAttribute","UploadButton","setOpen","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","uploadClicked","openFileList","circularProgress","useMemo","totalSize","processedSize","taskListOpen","Badge","badgeContent","invisible","Backdrop","SpeedDial","tooltipTitle","SpeedDialIcon","openIcon","FabProps","ariaLabel","SpeedDialAction","tooltipOpen","Directory","infoTitle","fontWeight","infoValue","wordBreak","TaskDetail","navigateToDst","Link","datetime","locale","Grid","xs","progressContent","progressContainer","listAction","successStatus","errorStatus","disabledBadge","dstLink","fileNameContainer","getSpeedText","speed","speedAvg","useSpeedAvg","displayedSpeed","getErrMsg","errMsg","Message","UploadTask","useAvgSpeed","onCancel","onRefresh","taskHover","setTaskHover","startLoadedRef","setProgress","durationTotal","resAvg","retry","useUpload","fullScreen","useMediaQuery","statusText","parent","uploaded","percentage","resumeLabel","continueLabel","progressBar","lighten","darken","taskDetail","u","stopRipple","stopPropagation","secondaryAction","show","onTouchStart","fileIcon","TypeIcon","isUpload","newExpanded","onMouseOver","ConcurrentOptionDialog","setCount","Input","step","MoreActions","uploadManager","deleteTask","setUseAvgSpeed","setFilter","sorter","setSorter","cleanFinished","concurrentDialog","setConcurrentDialog","RefreshStorage","listItems","tooltip","divider","ClearAll","Menu","enterNextDelay","dense","val","Transition","forwardRef","Slide","direction","rootOverwrite","flex","popup","inset","paddingZero","dialogContent","maxHeight","virtualList","expandIcon","shortest","expandIconExpanded","sorters","reverse","filters","ongoing","TaskList","taskList","setUploaders","setAnchorEl","refreshList","setRefreshList","reason","Fade","currentList","Nothing","increaseViewportBy","itemContent","classnames","TransitionComponent","disableEnforceFocus","hideBackdrop","disableBackdropClick","disableScrollLock","Accordion","AppBar","Toolbar","disableGutters","MoreHoriz","AccordionDetails","createStyles","backdrop","DropFileBackground","totalProgressCollector","lastProgressStart","Uploader","setTaskListOpen","dropBgOpen","setDropBgOpen","processed","totalProgress","setTotalProgress","fileSelectCounter","openFileSelector","folderSelectCounter","openFolderSelector","enableUploader","taskAdded","original","onToast","setPolicy","unfinished","setInterval","msDocPreviewSuffix","subtitleSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","epubSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","epub","policyTypeMap","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","changeSubTitle","setSubtitle","setShareInfo","selectLanguage","changeLanguage","dayjs","extend","utc","timezone","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","preferTimeZone","refreshTimeZone","formatLocalTime","time","tz","toDate","formatParams","year","month","day","hour","minute","second","validateTimeZone","format","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","MenuBook","fileSuffix","getColor","getColorValue","iconClassName","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","AuthRoute","rest","render","to","NoAuthRoute","emptyContainer","emptyInfoBig","Notice","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaContainer","required","autoComplete","captchaImageContainer","captchaImage","alt","ReCAPTCHA","handleExpired","bind","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","onExpired","onErrored","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","removeChild","elem","childProps","defaultProps","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","ret","ticket","randstr","isValidate","submit","cursor","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","normal","captchaParamsRef","CaptchaRender","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","form","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","Paper","login","userName","Password","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","RouterLink","Fingerprint","VpnKey","highlight","FileName","highlightClassName","searchWords","autoEscape","textToHighlight","SmallIconCompoment","nextState","nextContext","isSelectedCurrent","isSelectedNext","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","Folder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","boxSizing","FileIconCompoment","showPicIcon","pic","picPreview","noDrag","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","userDrag","active","isActive","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","renderMenuItems","visibleCount","condition","allowRemoteDownload","menuOpen","anchorReference","anchorPosition","Unarchive","Archive","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","TableRow","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","hover","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","useDragScrolling","isScrolling","goDown","isScrollEnd","offsetHeight","scrollHeight","requestAnimationFrame","goUp","throttleOnDragOver","throttle","isMouseOnTop","isMouseOnDown","addEventListenerForWindow","removeEventListenerForWindow","removeEventListener","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","StartDownload","SelectFile","handleIconClick","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","rootTable","typeHeader","errorBox","errorMsg","flexFix","upButton","clickAway","rootShare","visuallyHidden","clip","gridContainer","gridTemplateColumns","gridItem","DELETE_FILE","SELECT_ALL_SHOWED","SELECT_ALL","DESELECT_ALL","Explorer","navigatorErrorMsg","navigatorError","OpenRemoveDialog","ChangeContextMenu","SelectAll","page_size","page_number","startIndex","usePagination","showView","listView","Table","TableHead","TableSortLabel","TableBody","normalView","data-clickAway","dataset","clickaway","allowChanges","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","navigateToPath","max_size","file_type","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","drawerDesktopOpen","force","overflowInitLock","hasOverflowingChildren","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","setDetails","propsItem","d","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","query_date","Hidden","Clear","Drawer","gutterBottom","CustomPaginationItem","PaginationItem","PaginationFooter","SetPagination","Pagination","renderItem","FileManager","DndProvider","backend","HTML5Backend","DragLayer","SelectMenu","showIcon","Artplayer","externalPlayers","actionButton","VideoViewer","art","setArt","setFiles","subtitles","setSubtitles","playlist","setPlaylist","subtitleOpen","setSubtitleOpen","subtitleSelected","setSubtitleSelected","playlistOpen","setPlaylistOpen","externalPlayerOpen","setExternalPlayerOpen","autoHeight","pictureInPictureEnabled","playing","pip","pause","newURL","subtitle","switchUrl","switchSubtitle","switch","flip","setting","playbackRate","aspectRatio","hotkey","fullscreen","fullscreenWeb","whitelist","moreVideoAttr","playsInline","lang","getInstance","startIcon","Subtitles","PlaylistPlay","Launch","sub","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","cardAction","SearchResult","tGlobal","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","sm","Card","CardHeader","subheader","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","md","CardActions","disableActionSpacing","MyShare","SelectFileDialog","FormGroup","row","FormControlLabel","filesCopy","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","context","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","previousDownloading","downloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","ignore","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","SetSubTitle","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","accountCopy","deleteAccount","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","uid","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","themes","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","newMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","GitHub","Translate","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","MusicPlayerComponent","currentIndex","currentTime","progressText","looptype","myAudioRef","newItem","handleItemClick","backgroundPlay","bindEvents","ele","readyPlay","loopnext","timeUpdate","unbindEvents","play","formatTime","isNaN","playOrPaues","isPlay","changeLoopType","lt","handleProgress","idx","Slider","slider_root","justify","Repeat","RepeatOne","Shuffle","MusicPlayer","ReactReader","m","EpubViewer","currentLocation","setLocation","fileUrl","locationChanged","epubcifi","epubInitOptions","openAs","showToc","PDFViewer","App","themeConfig","prefersDarkMode","prefer","createMuiTheme","overrides","MuiButton","MuiTab","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","initUserConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","music","resave","doNavigate","currntPath","defaultStatus","rawStore","configCache","InitSiteConfig","siteICPId","QQLogin","black","contrastText","hint","bgSelected","emptyIcon","ErrorBoundary","hasError","errorInfo","componentStack","Admin","hash","contentType","ready","unregister","checkValidServiceWorker","alert","waiting","postMessage","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","thunk","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","getElementById","emptyInfoSmall","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","api","unshift","handleSelect","selector","primaryTypographyProps","buttonIcon","iconWhite","setTitle","setPath"],"mappings":"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","file":"static/js/main.61434923.chunk.js","sourcesContent":["import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10,\n        },\n    },\n}));\n\nconst MyLoader = (props) => (\n    <Code\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction TextLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","import axios from \"axios\";\nimport Auth from \"./Auth\";\nimport i18next from \"../i18n\";\n\nexport const baseURL = \"https://pan_api.114514cn.me/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nexport const getPreviewURL = (\n    isShare: boolean,\n    shareID: any,\n    fileID: any,\n    path: any\n): string => {\n    return (\n        getBaseURL() +\n        (isShare\n            ? \"/share/preview/\" +\n              shareID +\n              (path !== \"\" ? \"?path=\" + encodeURIComponent(path) : \"\")\n            : \"/file/preview/\" + fileID)\n    );\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n});\n\nclass AppError extends Error {\n    constructor(message: string | undefined, public code: any, error: any) {\n        super(message);\n        this.code = code;\n        if (i18next.exists(`errors.${code}`, { ns: \"common\" })) {\n            this.message = i18next.t(`errors.${code}`, {\n                ns: \"common\",\n                message,\n            });\n        } else {\n            this.message =\n                message || i18next.t(\"unknownError\", { ns: \"common\" });\n        }\n\n        this.message += error ? ` (${error})` : \"\";\n        this.stack = new Error().stack;\n    }\n}\n\ninstance.interceptors.response.use(\n    function (response: any) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // Login expired\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href = \"/login\";\n            }\n\n            // Non-admin\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n","import React, { useEffect, useState } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable, hide = false, element = null }) {\n    const [hidden, setHidden] = useState(false);\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = (e) => {\n            const window = e.currentTarget;\n            const current = element ? element.scrollTop : window.scrollY;\n\n            if (prev > current) {\n                if (lastUpdate - current > show) {\n                    lastUpdate = current;\n                    setHidden(false);\n                }\n            } else if (prev < current) {\n                if (current - lastUpdate > show) {\n                    lastUpdate = current;\n                    setHidden(true);\n                }\n            }\n            prev = current;\n        };\n        if (enable) {\n            const target = element ? element : window;\n            target.addEventListener(\"scroll\", (e) => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden && !hide}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\nimport { Policy } from \"../../component/Uploader/core/types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n    withSourceEnabled: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    audioPreview: {\n        first: CloudreveFile;\n        other: [];\n        playingName: any;\n        paused: boolean;\n        isOpen: boolean;\n    };\n    search?: {\n        keywords: string;\n        searchPath: string;\n    };\n    fileSave: boolean;\n    sideBarOpen: boolean;\n    currentPolicy?: Policy;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false,\n        withSourceEnabled: false,\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        index: -1,\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n    },\n    audioPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n        playingName: null,\n        paused: false,\n        isOpen: false,\n    },\n    fileSave: false,\n    sideBarOpen: false,\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    let withSourceEnabled = false;\n    selected.forEach((value) => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n            withSourceEnabled = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n            if (value.source_enabled) {\n                withSourceEnabled = true;\n            }\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile,\n        withSourceEnabled,\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source,\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list,\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list,\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected),\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected),\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter((file) => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected),\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n                search: {\n                    keywords: action.keywords,\n                    searchPath: action.path,\n                },\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"SHOW_AUDIO_PREVIEW\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_IS_OPEN\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    isOpen: action.isOpen,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_PLAYING\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    playingName: action.playingName,\n                    paused: action.paused,\n                },\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave,\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index,\n                },\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n                search: undefined,\n            };\n        case \"SET_SIDE_BAR\":\n            return {\n                ...state,\n                sideBarOpen: action.open,\n            };\n        case \"SET_CURRENT_POLICY\":\n            return {\n                ...state,\n                currentPolicy: action.policy,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","import API from \"../middleware/Api\";\n\nexport async function list(\n    path: string,\n    share: any,\n    keywords: string,\n    searchPath: string\n): Promise<any> {\n    let apiURL = \"\";\n    if (share) {\n        if (keywords === \"\") {\n            apiURL = \"/share/list/\" + share.key;\n        } else {\n            apiURL = `/share/search/${share.key}/`;\n        }\n    } else {\n        if (keywords === \"\") {\n            apiURL = \"/directory\";\n        } else {\n            apiURL = \"/file/search/\";\n        }\n    }\n\n    path = keywords === \"\" ? path : keywords;\n    apiURL = apiURL + encodeURIComponent(path);\n    if (searchPath) {\n        apiURL = `${apiURL}?path=${encodeURIComponent(searchPath)}`;\n    }\n    return API.get(apiURL);\n}\n","import API from \"../middleware/Api\";\n\nexport async function getDownloadURL(file: any): Promise<any> {\n    let reqURL = \"\";\n    if (file.key) {\n        const downloadPath =\n            file.path === \"/\"\n                ? file.path + file.name\n                : file.path + \"/\" + file.name;\n        reqURL =\n            \"/share/download/\" +\n            file.key +\n            \"?path=\" +\n            encodeURIComponent(downloadPath);\n    } else {\n        reqURL = \"/file/download/\" + file.id;\n    }\n\n    return API.put(reqURL);\n}\n","import { ThunkAction } from \"redux-thunk\";\nimport { setOptionModal } from \"../viewUpdate/action\";\nimport i18next from \"../../i18n\";\n\nexport const askForOption = (\n    options: any,\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        return new Promise<void>((resolve, reject) => {\n            const dialog = {\n                open: true,\n                title: title,\n                options: options,\n            };\n            dispatch(\n                setOptionModal({\n                    ...dialog,\n                    onClose: () => {\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                        reject(i18next.t(\"fileManager.userDenied\"));\n                    },\n                    callback: (option: any) => {\n                        resolve(option);\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                    },\n                })\n            );\n        });\n    };\n};\n","const statusHelper = {\n    isHomePage(path: string) {\n        return path === \"/home\";\n    },\n    isSharePage(path: string) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path: string) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path: string) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    },\n};\nexport default statusHelper;\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\nimport { setPagination } from \"../viewUpdate/action\";\n\nexport default {\n    actions,\n    reducers,\n};\nexport { selectFile } from \"./action\";\nexport { openPreview } from \"./action\";\nexport { setShiftSelectedIds } from \"./action\";\nexport { setLastSelect } from \"./action\";\nexport { setSelectedTarget } from \"./action\";\nexport { addSelectedTargets } from \"./action\";\nexport { removeSelectedTargets } from \"./action\";\nexport const setNavigator = (path: any, navigatorLoading: any) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading,\n    };\n};\nexport const navigateTo = (path: any) => {\n    return (dispatch: any, getState: any) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        if (navigatorLoading) {\n            dispatch(\n                setPagination({\n                    ...state.viewUpdate.pagination,\n                    page: 1,\n                })\n            );\n        }\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        if (navigatorLoading) {\n            dispatch(\n                setPagination({\n                    ...state.viewUpdate.pagination,\n                    page: 1,\n                })\n            );\n        }\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\nexport const drawerToggleAction = (open) => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open,\n    };\n};\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target,\n    };\n};\nexport const changeViewMethod = (method) => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method,\n    };\n};\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\",\n    };\n};\n// Deprecated\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\nexport const setNavigatorLoadingStatus = (status) => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status,\n    };\n};\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg,\n    };\n};\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\n    };\n};\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\",\n    };\n};\nexport const setUserPopover = (anchor) => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const setShareUserPopover = (anchor) => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\",\n    };\n};\nexport const openResaveDialog = (key) => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key,\n    };\n};\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\",\n    };\n};\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\",\n    };\n};\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\",\n    };\n};\nexport const applyThemes = (theme) => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme,\n    };\n};\nexport const setSessionStatus = (status) => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status,\n    };\n};\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\",\n    };\n};\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\n    };\n};\nexport const openTorrentDownloadDialog = () => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\n    };\n};\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\",\n    };\n};\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\",\n    };\n};\nexport const openRelocateDialog = () => {\n    return {\n        type: \"OPEN_RELOCATE_DIALOG\",\n    };\n};\nexport const openGetSourceDialog = (source) => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\",\n        source,\n    };\n};\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\",\n    };\n};\n// Deprecated\nexport const openLoadingDialog = (text) => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text,\n    };\n};\n// Deprecated\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\",\n    };\n};\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color,\n    };\n};\nexport const setModalsLoading = (status) => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status,\n    };\n};\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\",\n    };\n};\nexport const searchMyFile = (keywords, path) => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords,\n        path: path,\n    };\n};\nexport const showImgPreivew = (first) => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first,\n    };\n};\nexport const showAudioPreview = (first) => {\n    return {\n        type: \"SHOW_AUDIO_PREVIEW\",\n        first: first,\n    };\n};\nexport const audioPreviewSetIsOpen = (isOpen) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_IS_OPEN\",\n        isOpen,\n    };\n};\nexport const audioPreviewSetPlaying = (playingName, paused) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_PLAYING\",\n        playingName, //the playing content name\n        paused,\n    };\n};\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\",\n    };\n};\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\",\n    };\n};\n\nexport const setSiteConfig = (config) => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config,\n    };\n};\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key] !== undefined) {\n            return preference[key];\n        }\n        return null;\n    },\n    GetPreferenceWithDefault(key: string, defaultVal: any): any {\n        return Auth.GetPreference(key) !== null\n            ? Auth.GetPreference(key)\n            : defaultVal;\n    },\n};\n\nexport default Auth;\n","import Base from \"../uploader/base\";\nimport { ProcessingTaskDuplicatedError } from \"../errors\";\n\nexport interface QueueContent {\n    uploader: Base;\n    resolve: () => void;\n    reject: (err?: any) => void;\n}\n\nexport class Pool {\n    queue: Array<QueueContent> = [];\n    processing: Array<QueueContent> = [];\n\n    constructor(public limit: number) {}\n\n    enqueue(uploader: Base) {\n        return new Promise<void>((resolve, reject) => {\n            this.queue.push({\n                uploader,\n                resolve,\n                reject,\n            });\n            this.check();\n        });\n    }\n\n    release(item: QueueContent) {\n        this.processing = this.processing.filter((v) => v !== item);\n        this.check();\n    }\n\n    run(item: QueueContent) {\n        this.queue = this.queue.filter((v) => v !== item);\n        if (\n            this.processing.findIndex(\n                (v) =>\n                    v.uploader.task.dst == item.uploader.task.dst &&\n                    v.uploader.task.file.name == item.uploader.task.name\n            ) > -1\n        ) {\n            // 找到重名任务\n            item.reject(new ProcessingTaskDuplicatedError());\n            this.release(item);\n            return;\n        }\n\n        this.processing.push(item);\n        item.uploader.run().then(\n            () => {\n                item.resolve();\n                this.release(item);\n            },\n            (err) => {\n                item.reject(err);\n                this.release(item);\n            }\n        );\n    }\n\n    check() {\n        const processingNum = this.processing.length;\n        const availableNum = Math.max(0, this.limit - processingNum);\n        this.queue.slice(0, availableNum).forEach((item) => {\n            this.run(item);\n        });\n    }\n}\n","import { Policy } from \"../types\";\nimport { FileValidateError } from \"../errors\";\n\ninterface Validator {\n    (file: File, policy: Policy): void;\n}\n\n// validators\nconst checkers: Array<Validator> = [\n    function checkExt(file: File, policy: Policy) {\n        if (\n            policy.allowedSuffix != undefined &&\n            policy.allowedSuffix.length > 0\n        ) {\n            const ext = file?.name.split(\".\").pop();\n            if (ext === null || !ext || !policy.allowedSuffix.includes(ext))\n                throw new FileValidateError(\n                    \"File suffix not allowed in policy.\",\n                    \"suffix\",\n                    policy\n                );\n        }\n    },\n\n    function checkSize(file: File, policy: Policy) {\n        if (policy.maxSize > 0) {\n            if (file.size > policy.maxSize) {\n                throw new FileValidateError(\n                    \"File size exceeds maximum limit.\",\n                    \"size\",\n                    policy\n                );\n            }\n        }\n    },\n];\n\n/* 将每个 Validator 执行\n   失败返回 Error\n */\nexport function validate(file: File, policy: Policy) {\n    checkers.forEach((c) => c(file, policy));\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { Response } from \"../types\";\nimport {\n    HTTPError,\n    RequestCanceledError,\n    TransformResponseError,\n} from \"../errors\";\n\nexport const { CancelToken } = axios;\nexport { CancelTokenSource } from \"axios\";\n\nconst baseConfig = {\n    transformResponse: [\n        (response: any) => {\n            try {\n                return JSON.parse(response);\n            } catch (e) {\n                throw new TransformResponseError(response, e);\n            }\n        },\n    ],\n};\n\nconst cdBackendConfig = {\n    ...baseConfig,\n    baseURL: \"https://pan_api.114514cn.me/api/v3\",\n    withCredentials: true,\n};\n\nexport function request<T = any>(url: string, config?: AxiosRequestConfig) {\n    return axios\n        .request<T>({ ...baseConfig, ...config, url })\n        .catch((err) => {\n            if (axios.isCancel(err)) {\n                throw new RequestCanceledError();\n            }\n\n            if (err instanceof TransformResponseError) {\n                throw err;\n            }\n\n            throw new HTTPError(err, url);\n        });\n}\n\nexport function requestAPI<T = any>(url: string, config?: AxiosRequestConfig) {\n    return request<Response<T>>(url, { ...cdBackendConfig, ...config });\n}\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\nimport { toggleDaylightMode } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\",\n    },\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const { t } = useTranslation();\n    const ThemeType = useSelector(\n        (state) => state.siteConfig.theme.palette.type\n    );\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch,\n    ]);\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={\n                isDayLight ? t(\"navbar.toDarkMode\") : t(\"navbar.toLightMode\")\n            }\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position,\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React, { useCallback, useState } from \"react\";\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"../../../middleware/Auth\";\nimport { changeViewMethod, setShareUserPopover } from \"../../../redux/explorer\";\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\nimport { FormatPageBreak } from \"mdi-material-ui\";\nimport pathHelper from \"../../../utils/page\";\nimport { changePageSize } from \"../../../redux/viewUpdate/action\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\",\n    },\n}));\n\nconst sortOptions = [\n    \"A-Z\",\n    \"Z-A\",\n    \"oldestUploaded\",\n    \"newestUploaded\",\n    \"oldestModified\",\n    \"newestModified\",\n    \"smallest\",\n    \"largest\",\n];\n\nconst paginationOption = [\"50\", \"100\", \"200\", \"500\", \"1000\"];\n\nexport default function SubActions({ isSmall, inherit }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const { t: vasT } = useTranslation(\"application\", { keyPrefix: \"vas\" });\n    const dispatch = useDispatch();\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const share = useSelector((state) => state.viewUpdate.shareInfo);\n    const pageSize = useSelector((state) => state.viewUpdate.pagination.size);\n    const OpenLoadingDialog = useCallback(\n        (method) => dispatch(changeViewMethod(method)),\n        [dispatch]\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(changeSortMethod(method)),\n        [dispatch]\n    );\n    const SetShareUserPopover = useCallback(\n        (e) => dispatch(setShareUserPopover(e)),\n        [dispatch]\n    );\n    const ChangePageSize = useCallback((e) => dispatch(changePageSize(e)), [\n        dispatch,\n    ]);\n    const [anchorSort, setAnchorSort] = useState(null);\n    const [anchorPagination, setAnchorPagination] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const showSortOptions = (e) => {\n        setAnchorSort(e.currentTarget);\n    };\n    const showPaginationOptions = (e) => {\n        setAnchorPagination(e.currentTarget);\n    };\n    const handleMenuItemClick = (e, index) => {\n        setSelectedIndex(index);\n        const optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"modifyTimePos\",\n            5: \"modifyTimeRev\",\n            6: \"sizePos\",\n            7: \"sizeRes\",\n        };\n        ChangeSortMethod(optionsTable[index]);\n        setAnchorSort(null);\n    };\n    const handlePaginationChange = (s) => {\n        ChangePageSize(s);\n        setAnchorPagination(null);\n    };\n\n    const toggleViewMethod = () => {\n        const newMethod =\n            viewMethod === \"icon\"\n                ? \"list\"\n                : viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        OpenLoadingDialog(newMethod);\n    };\n    const isMobile = pathHelper.isMobile();\n\n    const classes = useStyles();\n    return (\n        <>\n            {viewMethod === \"icon\" && (\n                <IconButton\n                    title={t(\"listView\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            {viewMethod === \"list\" && (\n                <IconButton\n                    title={t(\"gridViewSmall\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {viewMethod === \"smallIcon\" && (\n                <IconButton\n                    title={t(\"gridViewLarge\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {!isMobile && (\n                <IconButton\n                    title={t(\"paginationSize\")}\n                    className={classes.sideButton}\n                    onClick={showPaginationOptions}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <FormatPageBreak fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorPagination}\n                open={Boolean(anchorPagination)}\n                onClose={() => setAnchorPagination(null)}\n            >\n                {paginationOption.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={option === pageSize.toString()}\n                        onClick={() => handlePaginationChange(parseInt(option))}\n                    >\n                        {t(\"paginationOption\", { option })}\n                    </MenuItem>\n                ))}\n                <MenuItem\n                    selected={pageSize === -1}\n                    onClick={() => handlePaginationChange(-1)}\n                >\n                    {t(\"noPagination\")}\n                </MenuItem>\n            </Menu>\n\n            <IconButton\n                title={t(\"sortMethod\")}\n                className={classes.sideButton}\n                onClick={showSortOptions}\n                color={inherit ? \"inherit\" : \"default\"}\n            >\n                <TextTotateVerticalIcon\n                    fontSize={isSmall ? \"small\" : \"default\"}\n                />\n            </IconButton>\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorSort}\n                open={Boolean(anchorSort)}\n                onClose={() => setAnchorSort(null)}\n            >\n                {sortOptions.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {t(\"sortMethods.\" + option)}\n                    </MenuItem>\n                ))}\n            </Menu>\n            {share && (\n                <IconButton\n                    title={t(\"shareCreateBy\", { nick: share.creator.nick })}\n                    className={classes.sideButton}\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\n                    style={{ padding: 5 }}\n                >\n                    <Avatar\n                        style={{ height: 23, width: 23 }}\n                        src={\"https://pan_api.114514cn.me/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\n                    />\n                </IconButton>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        minWidth: 250,\n    },\n}));\n\nexport default function OptionSelector() {\n    const { t } = useTranslation(\"common\");\n    const classes = useStyles();\n    const option = useSelector((state) => state.viewUpdate.modals.option);\n\n    return (\n        <Dialog\n            open={option && option.open}\n            onClose={option && option.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {option && option.title}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    {option &&\n                        option.options.map((o) => (\n                            <ListItem\n                                key={o.key}\n                                onClick={() => option && option.callback(o)}\n                                button\n                            >\n                                <ListItemText\n                                    primary={o.name}\n                                    secondary={o.description}\n                                />\n                            </ListItem>\n                        ))}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={option && option.onClose}>\n                    {t(\"cancel\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\",\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    loadingContainer: {\n        display: \"flex\",\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20,\n    },\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport {\n    refreshFileList,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CopyDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"fileManager.copyTo\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <Trans\n                            i18nKey={\"fileManager.copyToDst\"}\n                            values={{\n                                dst: selectedPathName,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useRef } from \"react\";\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n    },\n    flexCenter: {\n        alignItems: \"center\",\n    },\n    noFlex: {\n        display: \"block\",\n    },\n    scoreCalc: {\n        marginTop: 10,\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: \"auto\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const lastSubmit = useRef(null);\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false,\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true,\n    });\n\n    const handleChange = (prop) => (event) => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random().toString(36).substr(2).slice(2, 8),\n            showPassword: true,\n        });\n    };\n\n    const handleExpand = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = (prop) => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\",\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const senLink = () => {\n        if (navigator.share) {\n            let text = t(\"modals.shareLinkShareContent\", {\n                name: props.selected[0].name,\n                link: shareURL,\n            });\n            if (lastSubmit.current && lastSubmit.current.password) {\n                text += t(\"modals.shareLinkPasswordInfo\", {\n                    password: lastSubmit.current.password,\n                });\n            }\n            navigator.share({ text });\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareURL);\n            ToggleSnackbar(\"top\", \"right\", t(\"modals.linkCopied\"), \"info\");\n        }\n    };\n\n    const submitShare = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            preview: shareOption.preview,\n        };\n        lastSubmit.current = submitFormBody;\n\n        API.post(\"/share\", submitFormBody)\n            .then((response) => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false,\n                });\n                setShareOption({\n                    password: false,\n                    expire: false,\n                });\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = (event) => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.createShareLink\")}\n            </DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\n                                            \"modals.usePasswordProtection\"\n                                        )}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        {t(\"modals.sharePassword\")}\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip\n                                                    title={t(\n                                                        \"modals.randomlyGenerate\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    <ToggleIcon\n                                                        on={values.showPassword}\n                                                        onIcon={<Visibility />}\n                                                        offIcon={\n                                                            <VisibilityOff />\n                                                        }\n                                                    />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\n                                            \"modals.expireAutomatically\"\n                                        )}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        {[1, 2, 3, 4, 5, 20, 50, 100].map(\n                                            (v) => (\n                                                <MenuItem value={v} key={v}>\n                                                    {t(\n                                                        \"modals.downloadLimitOptions\",\n                                                        { num: v }\n                                                    )}\n                                                </MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <Typography>{t(\"modals.or\")}</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>\n                                            {t(\"modals.5minutes\")}\n                                        </MenuItem>\n                                        <MenuItem value={3600}>\n                                            {t(\"modals.1hour\")}\n                                        </MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            {t(\"modals.1day\")}\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            {t(\"modals.7days\")}\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            {t(\"modals.30days\")}\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>\n                                    {t(\"modals.downloadSuffix\")}\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"modals.allowPreview\")}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    {t(\"modals.allowPreviewDescription\")}\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label={t(\"modals.shareLink\")}\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                {shareURL !== \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button onClick={senLink} color=\"secondary\">\n                            {t(\"modals.sendLink\")}\n                        </Button>\n                    </div>\n                )}\n                <Button onClick={onClose}>\n                    {t(\"close\", { ns: \"common\" })}\n                </Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            {t(\"modals.createShareLink\")}\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\nimport { submitDecompressTask } from \"../../redux/explorer/action\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DecompressDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const SubmitDecompressTask = useCallback(\n        (path) => dispatch(submitDecompressTask(path)),\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        SubmitDecompressTask(selectedPath)\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\"\n                );\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.decompressTo\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <Trans\n                            i18nKey=\"modals.decompressToDst\"\n                            values={{\n                                name: selectedPathName,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\nimport { submitCompressTask } from \"../../redux/explorer/action\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CompressDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const SubmitCompressTask = useCallback(\n        (name, path) => dispatch(submitCompressTask(name, path)),\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        SubmitCompressTask(fileName, selectedPath)\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\"\n                );\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.saveToTitle\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={(e) => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label={t(\"modals.zipFileName\")}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PathSelector from \"./PathSelector\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\nimport {\n    closeAllModals,\n    openLoadingDialog,\n    refreshFileList,\n    refreshStorage,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport OptionSelector from \"../Modals/OptionSelector\";\nimport { getDownloadURL } from \"../../services/file\";\nimport { Trans, withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        downloadURL: \"\",\n        remoteDownloadPathSelect: false,\n        purchaseCallback: null,\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    newNameSuffix = \"\";\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name,\n            });\n            return;\n        }\n    };\n\n    scoreHandler = (callback) => {\n        callback();\n    };\n\n    Download = () => {\n        getDownloadURL(this.props.selected[0])\n            .then((response) => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitRemove = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs,\n            },\n        })\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    setTimeout(this.props.refreshFileList, 500);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.props.setModalsLoading(false);\n                this.props.refreshStorage();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                ? \"/\"\n                : this.state.selectedPath,\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(this.props.t(\"modals.processing\"));\n            this.submitMove();\n        }\n    };\n\n    submitRename = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: [],\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedObjectName\"),\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedFolderName\"),\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedFolderName\"),\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitTorrentDownload = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\n            dst:\n                this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"modals.taskCreated\"),\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitDownload = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/url\", {\n            url: this.state.downloadURL.split(\"\\n\"),\n            dst:\n                this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath,\n        })\n            .then((response) => {\n                const failed = response.data\n                    .filter((r) => r.code !== 0)\n                    .map((r) => r.msg + (r.error ? r.error : \"\"));\n                if (failed.length > 0) {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        this.props.t(\"modals.taskCreateFailed\", {\n                            failed: failed.length,\n                            details: failed.join(\",\"),\n                        }),\n                        \"warning\"\n                    );\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        this.props.t(\"modals.taskCreated\"),\n                        \"success\"\n                    );\n                }\n\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name,\n        });\n    };\n\n    remoteDownloadNext = () => {\n        this.props.closeAllModals();\n        this.setState({\n            remoteDownloadPathSelect: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            downloadURL: \"\",\n            shareUrl: \"\",\n            remoteDownloadPathSelect: false,\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    copySource = () => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(this.props.modalsStatus.getSource);\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.linkCopied\"),\n                \"info\"\n            );\n        }\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <OptionSelector />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.getSourceLinkTitle\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            inputProps={{ readonly: true }}\n                            label={t(\"modals.sourceLink\")}\n                            multiline\n                            value={this.props.modalsStatus.getSource}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.copySource} color=\"secondary\">\n                            {t(\"copyToClipboard\", { ns: \"common\" })}\n                        </Button>\n                        <Button onClick={this.onClose}>\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.newFolder\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label={t(\"modals.folderName\")}\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.create\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.createNewFile}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.newFile\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFile}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFileName\"\n                                label={t(\"modals.fileName\")}\n                                type=\"text\"\n                                value={this.state.newFileName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFile}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFileName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.create\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.rename\")}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <Trans\n                                i18nKey=\"modals.renameDescription\"\n                                values={{\n                                    name:\n                                        this.props.selected.length === 1\n                                            ? this.props.selected[0].name\n                                            : \"\",\n                                }}\n                                components={[<strong key={0} />]}\n                            />\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label={t(\"modals.newName\")}\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.moveToTitle\")}\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                <Trans\n                                    i18nKey=\"modals.moveToDescription\"\n                                    values={{\n                                        name: this.state.selectedPathName,\n                                    }}\n                                    components={[<strong key={0} />]}\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.deleteTitle\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.selected.length === 1 && (\n                                <Trans\n                                    i18nKey=\"modals.deleteOneDescription\"\n                                    values={{\n                                        name: this.props.selected[0].name,\n                                    }}\n                                    components={[<strong key={0} />]}\n                                />\n                            )}\n                            {this.props.selected.length > 1 &&\n                                t(\"modals.deleteMultipleDescription\", {\n                                    num: this.props.selected.length,\n                                })}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRemove}\n                                color=\"primary\"\n                                disabled={this.props.modalsLoading}\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n                <Dialog\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.newRemoteDownloadTitle\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                label={t(\"modals.remoteDownloadURL\")}\n                                autoFocus\n                                fullWidth\n                                multiline\n                                id=\"downloadURL\"\n                                onChange={this.handleInputChange}\n                                placeholder={t(\n                                    \"modals.remoteDownloadURLDescription\"\n                                )}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.remoteDownloadNext}\n                            color=\"primary\"\n                            disabled={\n                                this.props.modalsLoading ||\n                                this.state.downloadURL === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.remoteDownloadPathSelect}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.remoteDownloadDst\")}\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                <Trans\n                                    i18nKey=\"modals.downloadTo\"\n                                    values={{\n                                        name: this.state.selectedPathName,\n                                    }}\n                                    components={[<strong key={0} />]}\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.createTask\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.torrentDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.remoteDownloadDst\")}\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                <Trans\n                                    i18nKey=\"modals.downloadTo\"\n                                    values={{\n                                        name: this.state.selectedPathName,\n                                    }}\n                                    components={[<strong key={0} />]}\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitTorrentDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.createTask\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(ModalsCompoment))));\n\nexport default Modals;\n","export const sizeToString = (bytes) => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = (path) => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const checkGetParameters = (field) => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = (color) => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    if (!path) {\n        return \"\";\n    }\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function filename(path) {\n    const pathList = path.split(\"/\");\n    return pathList.pop();\n}\n\nexport function fileNameNoExt(filename) {\n    return filename.substring(0, filename.lastIndexOf(\".\")) || filename;\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach((v) => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport const isMobileSafari = () => {\n    const ua = window.navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    return iOS && webkit && !ua.match(/CriOS/i);\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            marginLeft: theme.spacing(12),\n            marginRight: theme.spacing(12),\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: \"8px\",\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\",\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const { t } = useTranslation();\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileManager.errorReadFileContent\", {\n                        msg: error.message,\n                    }),\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async ($file) => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        language={t(\"forEditorLocaleCode\", { ns: \"common\" })}\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={($file) => addImg($file)}\n                        onChange={(value) => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true, // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MonacoEditor = React.lazy(() =>\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 40,\n    },\n    editor: {\n        borderRadius: \"4px\",\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"4px!important\",\n        },\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\",\n    },\n    toobar: {\n        textAlign: \"right\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const { t } = useTranslation();\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n    const [wordWrap, setWordWrap] = useState(\"off\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n    const { title } = UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        const extension = title.split(\".\");\n        setSuffix(codePreviewSuffix[extension.pop()]);\n        // eslint-disable-next-line\n    }, [title]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileManager.errorReadFileContent\", {\n                        msg: error.message,\n                    }),\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={(e) =>\n                                        setWordWrap(\n                                            e.target.checked ? \"on\" : \"off\"\n                                        )\n                                    }\n                                />\n                            }\n                            label={t(\"fileManager.wordWrap\")}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={(e) => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map((k) => {\n                                        return codePreviewSuffix[k];\n                                    })\n                                )\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"calc(100vh - 198px)\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor,\n                                wordWrap: wordWrap,\n                            }}\n                            onChange={(value) => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: \"en-US\",\n        debug: true,\n        ns: [\"common\", \"application\"],\n        load: \"currentOnly\",\n        defaultNS: \"application\",\n        interpolation: {\n            escapeValue: false,\n        },\n    });\n\ni18n.on(\"languageChanged\", (lng) => {\n    document.documentElement.setAttribute(\"lang\", lng);\n});\n\nexport const languages = [\n    {\n        code: \"en-US\",\n        displayName: \"English\",\n    },\n    {\n        code: \"zh-CN\",\n        displayName: \"简体中文\",\n    },\n];\n\nexport default i18n;\n","import {\n    OneDriveError,\n    Policy,\n    QiniuError,\n    Response,\n    UpyunError,\n} from \"../types\";\nimport { sizeToString } from \"../utils\";\nimport i18next from \"../../../../i18n\";\n\nexport enum UploaderErrorName {\n    InvalidFile = \"InvalidFile\",\n    NoPolicySelected = \"NoPolicySelected\",\n    UnknownPolicyType = \"UnknownPolicyType\",\n    FailedCreateUploadSession = \"FailedCreateUploadSession\",\n    FailedDeleteUploadSession = \"FailedDeleteUploadSession\",\n    HTTPRequestFailed = \"HTTPRequestFailed\",\n    LocalChunkUploadFailed = \"LocalChunkUploadFailed\",\n    SlaveChunkUploadFailed = \"SlaveChunkUploadFailed\",\n    WriteCtxFailed = \"WriteCtxFailed\",\n    RemoveCtxFailed = \"RemoveCtxFailed\",\n    ReadCtxFailed = \"ReadCtxFailed\",\n    InvalidCtxData = \"InvalidCtxData\",\n    CtxExpired = \"CtxExpired\",\n    RequestCanceled = \"RequestCanceled\",\n    ProcessingTaskDuplicated = \"ProcessingTaskDuplicated\",\n    OneDriveChunkUploadFailed = \"OneDriveChunkUploadFailed\",\n    OneDriveEmptyFile = \"OneDriveEmptyFile\",\n    FailedFinishOneDriveUpload = \"FailedFinishOneDriveUpload\",\n    S3LikeChunkUploadFailed = \"S3LikeChunkUploadFailed\",\n    S3LikeUploadCallbackFailed = \"S3LikeUploadCallbackFailed\",\n    COSUploadCallbackFailed = \"COSUploadCallbackFailed\",\n    COSPostUploadFailed = \"COSPostUploadFailed\",\n    UpyunPostUploadFailed = \"UpyunPostUploadFailed\",\n    QiniuChunkUploadFailed = \"QiniuChunkUploadFailed\",\n    FailedFinishOSSUpload = \"FailedFinishOSSUpload\",\n    FailedFinishQiniuUpload = \"FailedFinishQiniuUpload\",\n    FailedTransformResponse = \"FailedTransformResponse\",\n}\n\nconst RETRY_ERROR_LIST = [\n    UploaderErrorName.FailedCreateUploadSession,\n    UploaderErrorName.HTTPRequestFailed,\n    UploaderErrorName.LocalChunkUploadFailed,\n    UploaderErrorName.SlaveChunkUploadFailed,\n    UploaderErrorName.RequestCanceled,\n    UploaderErrorName.ProcessingTaskDuplicated,\n    UploaderErrorName.FailedTransformResponse,\n];\n\nconst RETRY_CODE_LIST = [-1];\n\nexport class UploaderError implements Error {\n    public stack: string | undefined;\n    constructor(public name: UploaderErrorName, public message: string) {\n        this.stack = new Error().stack;\n    }\n\n    public Message(): string {\n        return this.message;\n    }\n\n    public Retryable(): boolean {\n        return RETRY_ERROR_LIST.includes(this.name);\n    }\n}\n\n// 文件未通过存储策略验证\nexport class FileValidateError extends UploaderError {\n    // 未通过验证的文件属性\n    public field: \"size\" | \"suffix\";\n\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, field: \"size\" | \"suffix\", policy: Policy) {\n        super(UploaderErrorName.InvalidFile, message);\n        this.field = field;\n        this.policy = policy;\n    }\n\n    public Message(): string {\n        if (this.field == \"size\") {\n            return i18next.t(`uploader.sizeExceedLimitError`, {\n                max: sizeToString(this.policy.maxSize),\n            });\n        }\n\n        return i18next.t(`uploader.suffixNotAllowedError`, {\n            supported: this.policy.allowedSuffix\n                ? this.policy.allowedSuffix.join(\",\")\n                : \"*\",\n        });\n    }\n}\n\n// 未知存储策略\nexport class UnknownPolicyError extends UploaderError {\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, policy: Policy) {\n        super(UploaderErrorName.UnknownPolicyType, message);\n        this.policy = policy;\n    }\n}\n\n// 后端 API 出错\nexport class APIError extends UploaderError {\n    constructor(\n        name: UploaderErrorName,\n        message: string,\n        protected response: Response<any>\n    ) {\n        super(name, message);\n    }\n\n    public Message(): string {\n        let msg = `${this.message}: ${this.response.msg}`;\n        if (this.response.error) {\n            msg += ` (${this.response.error})`;\n        }\n\n        return msg;\n    }\n\n    public Retryable(): boolean {\n        return (\n            super.Retryable() && RETRY_CODE_LIST.includes(this.response.code)\n        );\n    }\n}\n\n// 无法创建上传会话\nexport class CreateUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedCreateUploadSession, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.createUploadSessionError`);\n        return super.Message();\n    }\n}\n\n// 无法删除上传会话\nexport class DeleteUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedDeleteUploadSession, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.deleteUploadSessionError`);\n        return super.Message();\n    }\n}\n\n// HTTP 请求出错\nexport class HTTPError extends UploaderError {\n    public response?: any;\n    constructor(public axiosErr: any, protected url: string) {\n        super(UploaderErrorName.HTTPRequestFailed, axiosErr.message);\n        this.response = axiosErr.response;\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.requestError`, {\n            msg: this.axiosErr,\n            url: this.url,\n        });\n    }\n}\n\n// 本地分块上传失败\nexport class LocalChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.LocalChunkUploadFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.chunkUploadError`, {\n            index: this.chunkIndex,\n        });\n        return super.Message();\n    }\n}\n\n// 无法创建上传会话\nexport class RequestCanceledError extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.RequestCanceled, \"Request canceled\");\n    }\n}\n\n// 从机分块上传失败\nexport class SlaveChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.SlaveChunkUploadFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.chunkUploadError`, {\n            index: this.chunkIndex,\n        });\n        return super.Message();\n    }\n}\n\n// 上传任务冲突\nexport class ProcessingTaskDuplicatedError extends UploaderError {\n    constructor() {\n        super(\n            UploaderErrorName.ProcessingTaskDuplicated,\n            \"Processing task duplicated\"\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.conflictError`);\n    }\n}\n\n// OneDrive 分块上传失败\nexport class OneDriveChunkError extends UploaderError {\n    constructor(public response: OneDriveError) {\n        super(\n            UploaderErrorName.OneDriveChunkUploadFailed,\n            response.error.message\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// OneDrive 选择了空文件上传\nexport class OneDriveEmptyFileSelected extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.OneDriveEmptyFile, \"empty file not supported\");\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.emptyFileError\");\n    }\n}\n\n// OneDrive 无法完成文件上传\nexport class OneDriveFinishUploadError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedFinishOneDriveUpload, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// S3 类策略分块上传失败\nexport class S3LikeChunkError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// OSS 完成传失败\nexport class S3LikeFinishUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.ossFinishUploadError`, {\n            msg: this.message,\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\n        });\n    }\n}\n\n// qiniu 分块上传失败\nexport class QiniuChunkError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.QiniuChunkUploadFailed, response.error);\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// qiniu 完成传失败\nexport class QiniuFinishUploadError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.FailedFinishQiniuUpload, response.error);\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.finishUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// COS 上传失败\nexport class COSUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.COSPostUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.cosUploadFailed`, {\n            msg: this.message,\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\n        });\n    }\n}\n\n// COS 无法完成上传回调\nexport class COSUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.COSUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// Upyun 上传失败\nexport class UpyunUploadError extends UploaderError {\n    constructor(public response: UpyunError) {\n        super(UploaderErrorName.UpyunPostUploadFailed, response.message);\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.upyunUploadFailed\", {\n            msg: this.message,\n        });\n    }\n}\n\n// S3 无法完成上传回调\nexport class S3LikeUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.S3LikeUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// 无法解析响应\nexport class TransformResponseError extends UploaderError {\n    constructor(private response: string, parseError: Error) {\n        super(UploaderErrorName.FailedTransformResponse, parseError.message);\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.parseResponseError\", {\n            msg: this.message,\n            content: this.response,\n        });\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport {\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    withStyles,\n} from \"@material-ui/core\";\n\nconst mapStateToProps = (state) => {\n    return {\n        snackbar: state.viewUpdate.snackbar,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = (theme) => ({\n    success: {\n        backgroundColor: theme.palette.success.main,\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warning: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\n        .isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = (theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal,\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    AccountArrowRight,\n    AccountPlus,\n    DesktopMacDashboard,\n    HomeAccount,\n    LogoutVariant,\n} from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Avatar,\n    Chip,\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Popover,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    setSessionStatus,\n    setUserPopover,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\n        registerEnabled: state.siteConfig.registerEnabled,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: (status) => {\n            dispatch(setSessionStatus(status));\n        },\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            {t(\"login.signIn\")}\n                        </MenuItem>\n                        {this.props.registerEnabled && (\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.history.push(\"/signup\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <AccountPlus />\n                                </ListItemIcon>\n                                {t(\"login.signUp\")}\n                            </MenuItem>\n                        )}\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"https://pan_api.114514cn.me/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\",\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    {t(\"navbar.myProfile\")}\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    {t(\"navbar.dashboard\")}\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\",\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                {t(\"login.logout\")}\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withStyles(styles)(\n        withRouter(withTranslation()(UserAvatarPopoverCompoment))\n    )\n);\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Avatar,\n    Grow,\n    IconButton,\n    Tooltip,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\nimport { setUserPopover } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        whiteSpace: \"nowrap\",\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={t(\"navbar.setting\")}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\"\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip\n                                title={t(\"navbar.backToHomepage\")}\n                                placement=\"bottom\"\n                            >\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"https://pan_api.114514cn.me/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(UserAvatarCompoment))));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport { changeThemeColor, sizeToString, vhCheck } from \"../../utils\";\nimport Uploader from \"../Uploader/Uploader.js\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Drawer,\n    Grow,\n    Hidden,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    SwipeableDrawer,\n    Toolbar,\n    Tooltip,\n    Typography,\n    withStyles,\n    withTheme,\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SubActions from \"../FileManager/Navigator/SubActions\";\nimport {\n    audioPreviewSetIsOpen,\n    changeContextMenu,\n    drawerToggleAction,\n    navigateTo,\n    openCreateFolderDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openPreview,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    saveFile,\n    setSelectedTarget,\n    setSessionStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { startBatchDownload, startDownload } from \"../../redux/explorer/action\";\nimport { withTranslation } from \"react-i18next\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst mapStateToProps = (state) => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin,\n        shareInfo: state.viewUpdate.shareInfo,\n        registerEnabled: state.siteConfig.registerEnabled,\n        audioPreviewPlayingName: state.explorer.audioPreview.playingName,\n        audioPreviewIsOpen: state.explorer.audioPreview.isOpen,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        },\n        openPreview: (share) => {\n            dispatch(openPreview(share));\n        },\n        audioPreviewOpen: () => {\n            dispatch(audioPreviewSetIsOpen(true));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\",\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0,\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n    },\n    menuIcon: {\n        marginRight: 20,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile,\n    },\n    drawerPaperDesktop: {\n        width: drawerWidth,\n    },\n    upDrawer: {\n        overflowX: \"hidden\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            justifyContent: \"space-between\",\n        },\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 0,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    badge: {\n        top: 1,\n        right: -15,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    sectionForFile: {\n        display: \"flex\",\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\",\n    },\n    fabButton: {\n        borderRadius: \"100px\",\n    },\n    badgeFix: {\n        right: \"10px\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    dividerFix: {\n        marginTop: \"8px\",\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\",\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\",\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\",\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\",\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\",\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n    },\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.selected.length === 0) !==\n            (nextProps.selected.length === 0)\n        ) {\n            changeThemeColor(\n                !(this.props.selected.length === 0)\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    openDownload = () => {\n        this.props.startDownload(this.props.shareInfo, this.props.selected[0]);\n    };\n\n    archiveDownload = (e) => {\n        this.props.startBatchDownload(this.props.shareInfo);\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.loggedOut\"),\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"navbar.myShare\")}\n                                    />\n                                </ListItem>\n                                <ListItem\n                                    button\n                                    key=\"离线下载\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/aria2?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"navbar.remoteDownload\")}\n                                    />\n                                </ListItem>\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"navbar.connect\")}\n                                        />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"navbar.taskQueue\")}\n                                    />\n                                </ListItem>\n                                {pathHelper.isMobile() && (\n                                    <>\n                                        <Divider />\n                                        <ListItem\n                                            button\n                                            key=\"个人设置\"\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/setting?\"\n                                                )\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <Settings\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={t(\"navbar.setting\")}\n                                            />\n                                        </ListItem>\n\n                                        <ListItem\n                                            button\n                                            key=\"退出登录\"\n                                            onClick={this.signOut}\n                                        >\n                                            <ListItemIcon>\n                                                <LogoutVariant\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={t(\"login.logout\")}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                            </List>\n                        </div>\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"login.signIn\")} />\n                        </ListItem>\n                        {this.props.registerEnabled && (\n                            <ListItem\n                                button\n                                key=\"注册\"\n                                onClick={() =>\n                                    this.props.history.push(\"/signup\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <AccountPlus className={classes.iconFix} />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"login.signUp\")} />\n                            </ListItem>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length === 0\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={this.handleDrawerToggle}\n                                className={classes.menuButton}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={() =>\n                                    this.props.handleDesktopToggle(\n                                        !this.props.desktopOpen\n                                    )\n                                }\n                                className={classes.menuButtonDesktop}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length > 0 &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow in={this.props.selected.length > 0}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length === 0 && (\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                noWrap\n                                onClick={() => {\n                                    this.props.history.push(\"/\");\n                                }}\n                            >\n                                {this.props.subTitle\n                                    ? this.props.subTitle\n                                    : this.props.title}\n                            </Typography>\n                        )}\n\n                        {!this.props.isMultiple &&\n                            (this.props.withFile || this.props.withFolder) &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {this.props.withFile &&\n                                        (isHomePage ||\n                                            pathHelper.isSharePage(\n                                                this.props.location.pathname\n                                            )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {t(\"navbar.objectsSelected\", {\n                                        num: this.props.selected.length,\n                                    })}\n                                </Typography>\n                            )}\n                        {this.props.selected.length === 0 && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {this.props.selected.length > 0 &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.open\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openPreview(\n                                                                this.props\n                                                                    .shareInfo\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.download\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) && (\n                                        <Grow\n                                            in={\n                                                this.props.isMultiple ||\n                                                this.props.withFolder\n                                            }\n                                        >\n                                            <Tooltip\n                                                title={t(\n                                                    \"fileManager.batchDownload\"\n                                                )}\n                                            >\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    disableClickAway\n                                                    onClick={() =>\n                                                        this.archiveDownload()\n                                                    }\n                                                >\n                                                    <DownloadIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple &&\n                                        !pathHelper.isMobile() &&\n                                        !isSharePage && (\n                                            <Grow in={!this.props.isMultiple}>\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.share\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openShareDialog()\n                                                        }\n                                                    >\n                                                        <ShareIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip\n                                                title={t(\"fileManager.rename\")}\n                                            >\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"fileManager.move\"\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.delete\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n\n                                            {pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"fileManager.moreActions\"\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.changeContextMenu(\n                                                                    \"file\",\n                                                                    true\n                                                                )\n                                                            }\n                                                        >\n                                                            <MoreHoriz />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(!this.props.isMultiple && this.props.withFile) &&\n                            this.props.audioPreviewPlayingName != null && (\n                                <IconButton\n                                    title={t(\"navbar.music\")}\n                                    className={classes.sideButton}\n                                    onClick={this.props.audioPreviewOpen}\n                                    color={\"inherit\"}\n                                >\n                                    <MusicNote fontSize={\"default\"} />\n                                </IconButton>\n                            )}\n\n                        {this.props.selected.length === 0 && <UserAvatar />}\n                        {this.props.selected.length === 0 &&\n                            pathHelper.isMobile() &&\n                            (isHomePage || this.props.shareInfo) && (\n                                <SubActions inherit />\n                            )}\n                    </Toolbar>\n                </AppBar>\n                <Uploader />\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaperDesktop,\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen,\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTheme(\n        withStyles(styles)(withRouter(withTranslation()(NavbarCompoment)))\n    )\n);\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Fade,\n    InputBase,\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    Paper,\n    Popper,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { configure, HotKeys } from \"react-hotkeys\";\nimport { searchMyFile } from \"../../redux/explorer\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Trans, withTranslation } from \"react-i18next\";\n\nconfigure({\n    ignoreTags: [],\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchMyFile: (keywords, path) => {\n            dispatch(searchMyFile(keywords, path));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\",\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300,\n            },\n        },\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364,\n    },\n});\n\nconst keyMap = {\n    SEARCH: \"enter\",\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\",\n        };\n    }\n\n    handlers = {\n        SEARCH: (e) => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile(\"\")();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        },\n    };\n\n    handleChange = (event) => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value,\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\",\n        });\n    };\n\n    searchMyFile = (path) => () => {\n        this.props.searchMyFile(\"keywords/\" + this.input, path);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input)\n        );\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder={t(\"navbar.searchPlaceholder\")}\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile(\"\")}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary,\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    <Trans\n                                                        i18nKey=\"navbar.searchInFiles\"\n                                                        values={{\n                                                            name: this.state\n                                                                .input,\n                                                        }}\n                                                        components={[\n                                                            <strong key={0} />,\n                                                        ]}\n                                                    />\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                {isHomePage &&\n                                    this.props.path !== \"/\" &&\n                                    !this.props.search && (\n                                        <MenuItem\n                                            onClick={this.searchMyFile(\n                                                this.props.path\n                                            )}\n                                        >\n                                            <ListItemIcon\n                                                className={classes.icon}\n                                            >\n                                                <FolderIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                classes={{\n                                                    primary: classes.primary,\n                                                }}\n                                                primary={\n                                                    <Typography noWrap>\n                                                        <Trans\n                                                            i18nKey=\"navbar.searchInFolders\"\n                                                            values={{\n                                                                name: this.state\n                                                                    .input,\n                                                            }}\n                                                            components={[\n                                                                <strong\n                                                                    key={0}\n                                                                />,\n                                                            ]}\n                                                        />\n                                                    </Typography>\n                                                }\n                                            />\n                                        </MenuItem>\n                                    )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                <Trans\n                                                    i18nKey=\"navbar.searchInShares\"\n                                                    values={{\n                                                        name: this.state.input,\n                                                    }}\n                                                    components={[\n                                                        <strong key={0} />,\n                                                    ]}\n                                                />\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(SearchBarCompoment))));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\n\nimport {\n    Divider,\n    LinearProgress,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\",\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\",\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\",\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\",\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\",\n        },\n        marginTop: \"5px\",\n    },\n    bar: {\n        marginTop: \"5px\",\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\n// TODO 使用 hooks 重构\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false,\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then((response) => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        this.props.t(\"navbar.exceedQuota\"),\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total),\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            <Typography variant={\"subtitle2\"}>\n                                {t(\"navbar.storage\")}\n                            </Typography>\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={t(\"navbar.storageDetail\", {\n                                        used:\n                                            this.state.used === null\n                                                ? \" -- \"\n                                                : this.state.used,\n                                        total:\n                                            this.state.total === null\n                                                ? \" -- \"\n                                                : this.state.total,\n                                    })}\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        {\" / \"}\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(StorageBarCompoment))));\n\nexport default StorageBar;\n","import { Task } from \"../types\";\nimport Logger from \"../logger\";\nimport { UploaderError, UploaderErrorName } from \"../errors\";\nimport { ChunkProgress } from \"../uploader/chunk\";\n\nexport const sizeToString = (bytes: number): string => {\n    if (bytes === 0) return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\n// 文件分块\nexport function getChunks(\n    file: File,\n    chunkByteSize: number | undefined\n): Blob[] {\n    // 如果 chunkByteSize 比文件大或为0，则直接取文件的大小\n    if (!chunkByteSize || chunkByteSize > file.size || chunkByteSize == 0) {\n        chunkByteSize = file.size;\n    }\n\n    const chunks: Blob[] = [];\n    const count = Math.ceil(file.size / chunkByteSize);\n    for (let i = 0; i < count; i++) {\n        const chunk = file.slice(\n            chunkByteSize * i,\n            i === count - 1 ? file.size : chunkByteSize * (i + 1)\n        );\n        chunks.push(chunk);\n    }\n\n    if (chunks.length == 0) {\n        chunks.push(file.slice(0));\n    }\n    return chunks;\n}\n\nexport function sumChunk(list: ChunkProgress[]) {\n    return list.reduce((data, loaded) => data + loaded.loaded, 0);\n}\n\nconst resumeKeyPrefix = \"cd_upload_ctx_\";\n\nfunction isTask(toBeDetermined: Task | string): toBeDetermined is Task {\n    return !!(toBeDetermined as Task).name;\n}\n\nexport function getResumeCtxKey(task: Task | string): string {\n    if (isTask(task)) {\n        return `${resumeKeyPrefix}name_${task.name}_dst_${task.dst}_size_${task.size}_policy_${task.policy.id}`;\n    }\n\n    return task;\n}\n\nexport function setResumeCtx(task: Task, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.setItem(ctxKey, JSON.stringify(task));\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.WriteCtxFailed,\n                `setResumeCtx failed: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function removeResumeCtx(task: Task | string, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.removeItem(ctxKey);\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.RemoveCtxFailed,\n                `removeResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function cleanupResumeCtx(logger: Logger) {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            try {\n                localStorage.removeItem(key);\n            } catch (err) {\n                logger.warn(\n                    new UploaderError(\n                        UploaderErrorName.RemoveCtxFailed,\n                        `removeResumeCtx failed. key: ${key}`\n                    )\n                );\n            }\n        }\n    }\n}\n\nexport function getResumeCtx(task: Task | string, logger: Logger): Task | null {\n    const ctxKey = getResumeCtxKey(task);\n    let localInfoString: string | null = null;\n    try {\n        localInfoString = localStorage.getItem(ctxKey);\n    } catch {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.ReadCtxFailed,\n                `getResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (localInfoString == null) {\n        return null;\n    }\n\n    let localInfo: Task | null = null;\n    try {\n        localInfo = JSON.parse(localInfoString);\n    } catch {\n        // 本地信息已被破坏，直接删除\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.InvalidCtxData,\n                `getResumeCtx failed to parse. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (\n        localInfo &&\n        localInfo.session &&\n        localInfo.session.expires < Math.floor(Date.now() / 1000)\n    ) {\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.CtxExpired,\n                `upload session already expired at ${localInfo.session.expires}. key: ${ctxKey}`\n            )\n        );\n        return null;\n    }\n\n    return localInfo;\n}\n\nexport function listResumeCtx(logger: Logger): Task[] {\n    const res: Task[] = [];\n    for (let i = 0, len = localStorage.length; i < len; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            const value = getResumeCtx(key, logger);\n            if (value) {\n                res.push(value);\n            }\n        }\n    }\n\n    return res;\n}\n\nexport function OBJtoXML(obj: any): string {\n    let xml = \"\";\n    for (const prop in obj) {\n        xml += \"<\" + prop + \">\";\n        if (Array.isArray(obj[prop])) {\n            for (const array of obj[prop]) {\n                // A real botch fix here\n                xml += \"</\" + prop + \">\";\n                xml += \"<\" + prop + \">\";\n\n                xml += OBJtoXML(new Object(array));\n            }\n        } else if (typeof obj[prop] == \"object\") {\n            xml += OBJtoXML(new Object(obj[prop]));\n        } else {\n            xml += obj[prop];\n        }\n        xml += \"</\" + prop + \">\";\n    }\n    return xml.replace(/<\\/?[0-9]{1,}>/g, \"\");\n}\n\nexport function getFileInput(id: number, isFolder: boolean): HTMLInputElement {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.id = `upload-file-input-${id}`;\n    if (isFolder) {\n        input.id = `upload-folder-input-${id}`;\n        input.setAttribute(\"webkitdirectory\", \"true\");\n        input.setAttribute(\"mozdirectory\", \"true\");\n    } else {\n        input.id = `upload-file-input-${id}`;\n        input.multiple = true;\n    }\n    input.hidden = true;\n    document.body.appendChild(input);\n    return input;\n}\n\nexport function pathJoin(parts: string[], sep = \"/\"): string {\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + sep), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(sep + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(sep);\n}\n\nfunction basename(path: string): string {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function trimPrefix(src: string, prefix: string): string {\n    if (src.startsWith(prefix)) {\n        return src.slice(prefix.length);\n    }\n    return src;\n}\n\nexport function getDirectoryUploadDst(dst: string, file: any): string {\n    let relPath = file.webkitRelativePath;\n    if (!relPath || relPath == \"\") {\n        relPath = file.fsPath;\n        if (!relPath || relPath == \"\") {\n            return dst;\n        }\n    }\n\n    relPath = trimPrefix(relPath, \"/\");\n\n    return basename(pathJoin([dst, relPath]));\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\nasync function readEntriesPromise(directoryReader: any): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            directoryReader.readEntries(resolve, reject);\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nasync function readFilePromise(fileReader: any, path: string): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            fileReader.file((file: any) => {\n                file.fsPath = path;\n                resolve(file);\n            });\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n// Get all the entries (files or sub-directories) in a directory by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader: any): Promise<any> {\n    const entries: any[] = [];\n    let readEntries = await readEntriesPromise(directoryReader);\n    while (readEntries.length > 0) {\n        entries.push(...readEntries);\n        readEntries = await readEntriesPromise(directoryReader);\n    }\n    return entries;\n}\n\n// Drop handler function to get all files\nexport async function getAllFileEntries(\n    dataTransferItemList: DataTransferItemList\n): Promise<File[]> {\n    const fileEntries: any[] = [];\n    // Use BFS to traverse entire directory/file structure\n    const queue: any[] = [];\n    // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n    for (let i = 0; i < dataTransferItemList.length; i++) {\n        const fileEntry = dataTransferItemList[i].webkitGetAsEntry();\n        if (!fileEntry) {\n            const file = dataTransferItemList[i].getAsFile();\n            if (file) {\n                fileEntries.push(file);\n            }\n        }\n\n        queue.push(dataTransferItemList[i].webkitGetAsEntry());\n    }\n    while (queue.length > 0) {\n        const entry = queue.shift();\n        if (!entry) {\n            continue;\n        }\n        if (entry.isFile) {\n            fileEntries.push(await readFilePromise(entry, entry.fullPath));\n        } else if (entry.isDirectory) {\n            const reader = entry.createReader();\n            const entries: any = await readAllDirectoryEntries(reader);\n            queue.push(...entries);\n        }\n    }\n    return fileEntries;\n}\n\nexport function isFileDrop(e: DragEvent): boolean {\n    return !!e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n}\n","export * from \"./pool\";\nexport * from \"./helper\";\nexport * from \"./validator\";\nexport * from \"./request\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { setUserPopover } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\",\n    },\n    nickName: {\n        color: \"#fff\",\n        marginTop: \"15px\",\n        fontSize: \"17px\",\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    groupName: {\n        color: \"#ffffff\",\n        opacity: \"0.54\",\n    },\n    storageCircle: {\n        width: \"200px\",\n    },\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"https://pan_api.114514cn.me/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"https://pan_api.114514cn.me/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : t(\"navbar.notLoginIn\")}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : t(\"navbar.visitor\")}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withTranslation()(UserInfoCompoment)));\n\nexport default UserInfo;\n","import React, { Suspense, useCallback, useState } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles,\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    FolderHeartOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    TagPlus,\n    Triangle,\n    TriangleOutline,\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\",\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    hiddenButton: {\n        display: \"none\",\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2),\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline,\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback((k, p) => dispatch(searchMyFile(k, p)), [\n        dispatch,\n    ]);\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color,\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = (tag) => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = (id) => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter((v) => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <ListItem\n                        button\n                        key=\"我的文件\"\n                        onClick={() =>\n                            !isHomePage && history.push(\"/home?path=%2F\")\n                        }\n                    >\n                        <ListItemIcon>\n                            <KeyboardArrowRight\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            tagOpen && isHomePage,\n                                        [classes.iconFix]: true,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                            {!(tagOpen && isHomePage) && (\n                                <FolderShared className={classes.iconFix} />\n                            )}\n                        </ListItemIcon>\n                        <ListItemText primary={t(\"navbar.myFiles\")} />\n                    </ListItem>\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List onMouseLeave={() => setTagHover(null)}>\n                        <ListItem\n                            button\n                            id=\"pickfiles\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        <ListItem\n                            button\n                            id=\"pickfolder\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        {[\n                            {\n                                key: t(\"navbar.videos\"),\n                                id: \"video\",\n                                icon: (\n                                    <VideoIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconVideo,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: t(\"navbar.photos\"),\n                                id: \"image\",\n                                icon: (\n                                    <ImageIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconImg,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: t(\"navbar.music\"),\n                                id: \"audio\",\n                                icon: (\n                                    <MusicIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconAudio,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: t(\"navbar.documents\"),\n                                id: \"doc\",\n                                icon: (\n                                    <DocIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconDoc,\n                                        ]}\n                                    />\n                                ),\n                            },\n                        ].map((v) => (\n                            <ListItem\n                                button\n                                key={v.key}\n                                onClick={() =>\n                                    SearchMyFile(v.id + \"/internal\", \"\")\n                                }\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {v.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={v.key} />\n                            </ListItem>\n                        ))}\n                        {tags.map((v) => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id, \"\");\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        <ListItem button onClick={() => setAddTagModal(true)}>\n                            <ListItemIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"navbar.addATag\")} />\n                        </ListItem>\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","/* eslint-disable */\nclass Crc32 {\n    constructor() {\n        this.crc = -1;\n    }\n\n    append(data) {\n        let crc = this.crc | 0;\n        const table = this.table;\n        for (let offset = 0, len = data.length | 0; offset < len; offset++) {\n            crc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xff];\n        }\n        this.crc = crc;\n    }\n\n    get() {\n        return ~this.crc;\n    }\n}\nCrc32.prototype.table = (() => {\n    let i;\n    let j;\n    let t;\n    const table = [];\n    for (i = 0; i < 256; i++) {\n        t = i;\n        for (j = 0; j < 8; j++) {\n            t = t & 1 ? (t >>> 1) ^ 0xedb88320 : t >>> 1;\n        }\n        table[i] = t;\n    }\n    return table;\n})();\n\nconst getDataHelper = (byteLength) => {\n    const uint8 = new Uint8Array(byteLength);\n    return {\n        array: uint8,\n        view: new DataView(uint8.buffer),\n    };\n};\n\nconst pump = (zipObj) =>\n    zipObj.reader.read().then((chunk) => {\n        if (chunk.done) return zipObj.writeFooter();\n        const outputData = chunk.value;\n        zipObj.crc.append(outputData);\n        zipObj.uncompressedLength += outputData.length;\n        zipObj.compressedLength += outputData.length;\n        zipObj.ctrl.enqueue(outputData);\n    });\n\n/**\n * [createWriter description]\n * @param  {Object} underlyingSource [description]\n * @return {Boolean}                  [description]\n */\nfunction createWriter(underlyingSource) {\n    const files = Object.create(null);\n    const filenames = [];\n    const encoder = new TextEncoder();\n    let offset = 0;\n    let activeZipIndex = 0;\n    let ctrl;\n    let activeZipObject, closed;\n\n    function next() {\n        activeZipIndex++;\n        activeZipObject = files[filenames[activeZipIndex]];\n        if (activeZipObject) processNextChunk();\n        else if (closed) closeZip();\n    }\n\n    const zipWriter = {\n        enqueue(fileLike) {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot enqueue a chunk into a readable stream that is closed or has been requested to be closed\"\n                );\n\n            let name = fileLike.name.trim();\n            const date = new Date(\n                typeof fileLike.lastModified === \"undefined\"\n                    ? Date.now()\n                    : fileLike.lastModified\n            );\n\n            if (fileLike.directory && !name.endsWith(\"/\")) name += \"/\";\n            if (files[name]) throw new Error(\"File already exists.\");\n\n            const nameBuf = encoder.encode(name);\n            filenames.push(name);\n\n            const zipObject = (files[name] = {\n                level: 0,\n                ctrl,\n                directory: !!fileLike.directory,\n                nameBuf,\n                comment: encoder.encode(fileLike.comment || \"\"),\n                compressedLength: 0,\n                uncompressedLength: 0,\n                writeHeader() {\n                    const header = getDataHelper(26);\n                    const data = getDataHelper(30 + nameBuf.length);\n\n                    zipObject.offset = offset;\n                    zipObject.header = header;\n                    if (zipObject.level !== 0 && !zipObject.directory) {\n                        header.view.setUint16(4, 0x0800);\n                    }\n                    header.view.setUint32(0, 0x14000808);\n                    header.view.setUint16(\n                        6,\n                        (((date.getHours() << 6) | date.getMinutes()) << 5) |\n                            (date.getSeconds() / 2),\n                        true\n                    );\n                    header.view.setUint16(\n                        8,\n                        ((((date.getFullYear() - 1980) << 4) |\n                            (date.getMonth() + 1)) <<\n                            5) |\n                            date.getDate(),\n                        true\n                    );\n                    header.view.setUint16(22, nameBuf.length, true);\n                    data.view.setUint32(0, 0x504b0304);\n                    data.array.set(header.array, 4);\n                    data.array.set(nameBuf, 30);\n                    offset += data.array.length;\n                    ctrl.enqueue(data.array);\n                },\n                writeFooter() {\n                    const footer = getDataHelper(16);\n                    footer.view.setUint32(0, 0x504b0708);\n\n                    if (zipObject.crc) {\n                        zipObject.header.view.setUint32(\n                            10,\n                            zipObject.crc.get(),\n                            true\n                        );\n                        zipObject.header.view.setUint32(\n                            14,\n                            zipObject.compressedLength,\n                            true\n                        );\n                        zipObject.header.view.setUint32(\n                            18,\n                            zipObject.uncompressedLength,\n                            true\n                        );\n                        footer.view.setUint32(4, zipObject.crc.get(), true);\n                        footer.view.setUint32(\n                            8,\n                            zipObject.compressedLength,\n                            true\n                        );\n                        footer.view.setUint32(\n                            12,\n                            zipObject.uncompressedLength,\n                            true\n                        );\n                    }\n\n                    ctrl.enqueue(footer.array);\n                    offset += zipObject.compressedLength + 16;\n                    next();\n                },\n                fileLike,\n            });\n\n            if (!activeZipObject) {\n                activeZipObject = zipObject;\n                processNextChunk();\n            }\n        },\n        close() {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot close a readable stream that has already been requested to be closed\"\n                );\n            if (!activeZipObject) closeZip();\n            closed = true;\n        },\n    };\n\n    function closeZip() {\n        let length = 0;\n        let index = 0;\n        let indexFilename, file;\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            length += 46 + file.nameBuf.length + file.comment.length;\n        }\n        const data = getDataHelper(length + 22);\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            data.view.setUint32(index, 0x504b0102);\n            data.view.setUint16(index + 4, 0x1400);\n            data.array.set(file.header.array, index + 6);\n            data.view.setUint16(index + 32, file.comment.length, true);\n            if (file.directory) {\n                data.view.setUint8(index + 38, 0x10);\n            }\n            data.view.setUint32(index + 42, file.offset, true);\n            data.array.set(file.nameBuf, index + 46);\n            data.array.set(file.comment, index + 46 + file.nameBuf.length);\n            index += 46 + file.nameBuf.length + file.comment.length;\n        }\n        data.view.setUint32(index, 0x504b0506);\n        data.view.setUint16(index + 8, filenames.length, true);\n        data.view.setUint16(index + 10, filenames.length, true);\n        data.view.setUint32(index + 12, length, true);\n        data.view.setUint32(index + 16, offset, true);\n        ctrl.enqueue(data.array);\n        ctrl.close();\n    }\n\n    function processNextChunk() {\n        if (!activeZipObject) return;\n        if (activeZipObject.directory)\n            return activeZipObject.writeFooter(activeZipObject.writeHeader());\n        if (activeZipObject.reader) return pump(activeZipObject);\n        if (activeZipObject.fileLike.stream) {\n            activeZipObject.crc = new Crc32();\n            activeZipObject.reader = activeZipObject.fileLike\n                .stream()\n                .getReader();\n            activeZipObject.writeHeader();\n        } else next();\n    }\n    return new ReadableStream({\n        start: (c) => {\n            ctrl = c;\n            underlyingSource.start &&\n                Promise.resolve(underlyingSource.start(zipWriter));\n        },\n        pull() {\n            return (\n                processNextChunk() ||\n                (underlyingSource.pull &&\n                    Promise.resolve(underlyingSource.pull(zipWriter)))\n            );\n        },\n    });\n}\n\nwindow.ZIP = createWriter;\n","import { CloudreveFile } from \"../types\";\nimport { list } from \"../services/navigate\";\nimport { pathJoin } from \"../component/Uploader/core/utils\";\n\nexport function getPreviewPath(selected: any): string {\n    return encodeURIComponent(\n        selected.path === \"/\"\n            ? selected.path + selected.name\n            : selected.path + \"/\" + selected.name\n    );\n}\n\nexport async function walk(\n    file: CloudreveFile[],\n    share: any\n): Promise<CloudreveFile[]> {\n    let res: CloudreveFile[] = [];\n    for (const f of file) {\n        if (f.type === \"file\") {\n            res.push(f);\n            continue;\n        }\n\n        if (f.type === \"dir\") {\n            const response = await list(\n                pathJoin([f.path, f.name]),\n                share,\n                \"\",\n                \"\"\n            );\n            const subs = await walk(response.data.objects, share);\n            res = [...res, ...subs];\n        }\n    }\n\n    return res;\n}\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\nimport { closeContextMenu, setPagination } from \"../viewUpdate/action\";\nimport { Policy } from \"../../component/Uploader/core/types\";\nimport streamSaver from \"streamsaver\";\nimport \"../../utils/zip\";\nimport pathHelper from \"../../utils/page\";\nimport { filePath, isMac } from \"../../utils\";\nimport API, { getBaseURL } from \"../../middleware/Api\";\nimport { pathJoin, trimPrefix } from \"../../component/Uploader/core/utils\";\nimport { getPreviewPath, walk } from \"../../utils/api\";\nimport { askForOption } from \"./async\";\nimport Auth from \"../../middleware/Auth\";\nimport { encodingRequired, isPreviewable } from \"../../config\";\nimport { push } from \"connected-react-router\";\nimport {\n    changeContextMenu,\n    closeAllModals,\n    openGetSourceDialog,\n    openLoadingDialog,\n    showAudioPreview,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"./index\";\nimport { getDownloadURL } from \"../../services/file\";\nimport i18next from \"../../i18n\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method,\n    };\n};\n\nexport const setSideBar = (open: boolean) => {\n    return {\n        type: \"SET_SIDE_BAR\",\n        open,\n    };\n};\n\nexport const setCurrentPolicy = (policy: Policy) => {\n    return {\n        type: \"SET_CURRENT_POLICY\",\n        policy,\n    };\n};\n\nexport const removeSelectedTargets = (fileIds: any) => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds,\n    };\n};\nexport const addSelectedTargets = (targets: any) => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets,\n    };\n};\nexport const setSelectedTarget = (targets: any) => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets,\n    };\n};\nexport const setLastSelect = (file: any, index: any) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index,\n    };\n};\nexport const setShiftSelectedIds = (shiftSelectedIds: any) => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds,\n    };\n};\n\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.create_date) - Date.parse(b.create_date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.create_date) - Date.parse(a.create_date);\n    },\n    modifyTimePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    modifyTimeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    },\n};\n\nexport const selectAll = (): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { selected, fileList, dirList } = state.explorer;\n        if (selected.length >= dirList.length + fileList.length) {\n            dispatch(setSelectedTarget([]));\n        } else {\n            dispatch(setSelectedTarget([...dirList, ...fileList]));\n        }\n    };\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod, pagination } = state.viewUpdate;\n        const dirList = list.filter((x) => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter((x) => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n        const total = dirList.length + fileList.length;\n        if (pagination.page * pagination.size > total) {\n            dispatch(\n                setPagination({\n                    ...pagination,\n                    page: Math.max(Math.ceil(total / pagination.size), 1),\n                })\n            );\n        }\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        Auth.SetPreference(\"sort\", method);\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.slice().sort(sortFunc)));\n        dispatch(setFileList(fileList.slice().sort(sortFunc)));\n    };\n};\n\nexport const toggleObjectInfoSidebar = (\n    open: boolean\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        if (open) {\n            dispatch(closeContextMenu());\n        }\n        dispatch(setSideBar(true));\n    };\n};\n\nexport const serverSideBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        dispatch(\n            openLoadingDialog(i18next.t(\"fileManager.preparingBathDownload\"))\n        );\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const dirs: any[] = [],\n            items: any[] = [];\n        selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs,\n        };\n        if (pathHelper.isSharePage(pathname)) {\n            reqURL = \"/share/archive/\" + share.key;\n            postBody[\"path\"] = selected[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then((response: any) => {\n                if (response.rawData.code === 0) {\n                    dispatch(closeAllModals());\n                    window.location.assign(response.data);\n                } else {\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            response.rawData.msg,\n                            \"warning\"\n                        )\n                    );\n                }\n                dispatch(closeAllModals());\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"error\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n\nexport const startDownload = (\n    share: any,\n    file: CloudreveFile\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        const {\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const user = Auth.GetUser();\n        if (\n            pathHelper.isSharePage(pathname) &&\n            !Auth.Check() &&\n            user &&\n            !user.group.shareDownload\n        ) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"share.pleaseLogin\"),\n                    \"warning\"\n                )\n            );\n            return;\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        dispatch(openLoadingDialog(i18next.t(\"fileManager.preparingDownload\")));\n        try {\n            const res = await getDownloadURL(file ? file : share);\n            window.location.assign(res.data);\n            dispatch(closeAllModals());\n        } catch (e) {\n            dispatch(toggleSnackbar(\"top\", \"right\", e.message, \"warning\"));\n            dispatch(closeAllModals());\n        }\n    };\n};\n\nexport const startBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        dispatch(changeContextMenu(\"file\", false));\n        const {\n            explorer: { selected },\n        } = getState();\n\n        const user = Auth.GetUser();\n        if (user.group.allowArchiveDownload) {\n            let option: any;\n            try {\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"client\",\n                                name: i18next.t(\n                                    \"fileManager.browserBatchDownload\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.browserBatchDownloadDescription\"\n                                ),\n                            },\n                            {\n                                key: \"server\",\n                                name: i18next.t(\n                                    \"fileManager.serverBatchDownload\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.serverBatchDownloadDescription\"\n                                ),\n                            },\n                        ],\n                        i18next.t(\"fileManager.selectArchiveMethod\")\n                    )\n                );\n            } catch (e) {\n                return;\n            }\n\n            if (option.key === \"server\") {\n                dispatch(serverSideBatchDownload(share));\n                return;\n            }\n        }\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, share);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(closeAllModals());\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                i18next.t(\"fileManager.batchDownloadStarted\"),\n                \"info\"\n            )\n        );\n        const fileStream = streamSaver.createWriteStream(\"archive.zip\");\n        let failed = 0;\n        const readableZipStream = new (window as any).ZIP({\n            start(ctrl: any) {\n                // ctrl.close()\n            },\n            async pull(ctrl: any) {\n                while (queue.length > 0) {\n                    const next = queue.pop();\n                    if (next && next.type === \"file\") {\n                        const previewPath = getPreviewPath(next);\n                        const url =\n                            getBaseURL() +\n                            (pathHelper.isSharePage(location.pathname)\n                                ? \"/share/preview/\" +\n                                  share.key +\n                                  (previewPath !== \"\"\n                                      ? \"?path=\" + previewPath\n                                      : \"\")\n                                : \"/file/preview/\" + next.id);\n                        try {\n                            const res = await fetch(url, { cache: \"no-cache\" });\n                            const stream = () => res.body;\n                            const name = trimPrefix(\n                                pathJoin([next.path, next.name]),\n                                \"/\"\n                            );\n                            ctrl.enqueue({ name, stream });\n                            return;\n                        } catch (e) {\n                            failed++;\n                        }\n                    }\n                }\n                ctrl.close();\n            },\n        });\n\n        // more optimized\n        if (window.WritableStream && readableZipStream.pipeTo) {\n            return readableZipStream\n                .pipeTo(fileStream)\n                .then(() => dispatch(closeAllModals()))\n                .catch((e) => {\n                    console.log(e);\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        i18next.t(\"modals.batchDownloadError\", {\n                            message: e && e.message,\n                        }),\n                        \"warning\"\n                    );\n                    dispatch(closeAllModals());\n                });\n        }\n    };\n};\n\nexport const getViewerURL = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n): string => {\n    const previewPath = getPreviewPath(file);\n    if (isShare) {\n        return (\n            \"/s/\" +\n            file.key +\n            `/${viewer}?name=` +\n            encodeURIComponent(file.name) +\n            \"&share_path=\" +\n            previewPath\n        );\n    }\n\n    return `/${viewer}?p=` + previewPath + \"&id=\" + file.id;\n};\n\nexport const openViewer = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n) => {\n    return (dispatch: any, getState: any) => {\n        dispatch(push(getViewerURL(viewer, file, isShare)));\n    };\n};\n\nexport const openPreview = (share: any) => {\n    return (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const isShare = pathHelper.isSharePage(pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                dispatch(\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        i18next.t(\"share.pleaseLogin\"),\n                        \"warning\"\n                    )\n                );\n                dispatch(changeContextMenu(\"file\", false));\n                return;\n            }\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                dispatch(showImgPreivew(selected[0]));\n                return;\n            case \"msDoc\":\n                dispatch(openViewer(\"doc\", selected[0], isShare));\n                return;\n            case \"audio\":\n                dispatch(showAudioPreview(selected[0]));\n                return;\n            case \"video\":\n                dispatch(openViewer(\"video\", selected[0], isShare));\n                return;\n            case \"pdf\":\n                dispatch(openViewer(\"pdf\", selected[0], isShare));\n                return;\n            case \"edit\":\n                dispatch(openViewer(\"text\", selected[0], isShare));\n                return;\n            case \"code\":\n                dispatch(openViewer(\"code\", selected[0], isShare));\n                return;\n            case \"epub\":\n                dispatch(openViewer(\"epub\", selected[0], isShare));\n                return;\n            default:\n                dispatch(startDownload(share, selected[0]));\n                return;\n        }\n    };\n};\nexport const selectFile = (file: any, event: any, fileIndex: any) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch: any, getState: any) => {\n        // 多种组合操作忽略\n        if (\n            [ctrlKey, shiftKey].filter(Boolean).length > 1 ||\n            [metaKey, shiftKey].filter(Boolean).length > 1\n        ) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const {\n            selected,\n            lastSelect,\n            dirList,\n            fileList,\n            shiftSelectedIds,\n        } = explorer;\n        if (shiftKey && !ctrlKey && !metaKey && selected.length !== 0) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map((v: any) => v.id)));\n            const all = [...dirList, ...fileList];\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = all.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex((value: any) => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n\nexport const submitCompressTask = (fileName: string, path: string) => {\n    return async (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n        } = getState();\n        const dirs: string[] = [],\n            items: string[] = [];\n        // eslint-disable-next-line\n        selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        return await API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            name: fileName,\n            dst: path === \"//\" ? \"/\" : path,\n        });\n    };\n};\n\nconst encodings = [\n    \"ibm866\",\n    \"iso8859_2\",\n    \"iso8859_3\",\n    \"iso8859_4\",\n    \"iso8859_5\",\n    \"iso8859_6\",\n    \"iso8859_7\",\n    \"iso8859_8\",\n    \"iso8859_8I\",\n    \"iso8859_10\",\n    \"iso8859_13\",\n    \"iso8859_14\",\n    \"iso8859_15\",\n    \"iso8859_16\",\n    \"koi8r\",\n    \"koi8u\",\n    \"macintosh\",\n    \"windows874\",\n    \"windows1250\",\n    \"windows1251\",\n    \"windows1252\",\n    \"windows1253\",\n    \"windows1254\",\n    \"windows1255\",\n    \"windows1256\",\n    \"windows1257\",\n    \"windows1258\",\n    \"macintoshcyrillic\",\n    \"gbk\",\n    \"big5\",\n    \"eucjp\",\n    \"iso2022jp\",\n    \"shiftjis\",\n    \"euckr\",\n    \"utf16be\",\n    \"utf16le\",\n];\n\nexport const submitDecompressTask = (path: string) => {\n    return async (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n        } = getState();\n\n        let encoding = \"\";\n        if (selected.length > 0 && encodingRequired(selected[0].name)) {\n            let option: any;\n            try {\n                const allOptions = encodings.map((e) => {\n                    return {\n                        key: e,\n                        name: e.toUpperCase(),\n                    };\n                });\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"\",\n                                name: i18next.t(\"modals.defaultEncoding\"),\n                            },\n                            {\n                                key: \"gb18030\",\n                                name: \"GB18030\",\n                                description: i18next.t(\n                                    \"modals.chineseMajorEncoding\"\n                                ),\n                            },\n                            ...allOptions,\n                        ],\n                        i18next.t(\"modals.selectEncoding\")\n                    )\n                );\n            } catch (e) {\n                throw new Error(i18next.t(\"modals.noEncodingSelected\"));\n            }\n\n            encoding = option.key;\n        }\n\n        return await API.post(\"/file/decompress\", {\n            src: filePath(selected[0]),\n            dst: path === \"//\" ? \"/\" : path,\n            encoding: encoding,\n        });\n    };\n};\n\nexport const batchGetSource = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n\n        if (selected.findIndex((f) => f.type === \"dir\") >= 0) {\n            dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n        }\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, null);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.generatingSourceLinks\")));\n\n        const items = queue\n            .filter((value) => value.source_enabled && value.type === \"file\")\n            .map((v) => v.id);\n\n        if (items.length === 0) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.noFileCanGenerateSourceLink\"),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        const user = Auth.GetUser();\n        if (items.length > user.group.sourceBatch) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.sourceBatchSizeExceeded\", {\n                        limit: user.group.sourceBatch,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        API.post(\"/file/source\", { items: items })\n            .then((response) => {\n                console.log(response);\n                dispatch(closeAllModals());\n                dispatch(\n                    openGetSourceDialog(\n                        response.data.length == 1\n                            ? response.data[0].url\n                            : response.data\n                                  .map(\n                                      (res) =>\n                                          `${res.name}: ${res.url}${\n                                              res.error ? res.error : \"\"\n                                          }`\n                                  )\n                                  .join(\"\\n\")\n                    )\n                );\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"warning\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport { showImgPreivew } from \"../../redux/explorer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true,\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true,\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={(n) =>\n                            this.setState({\n                                photoIndex: n,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","import { ChunkProgress } from \"./uploader/chunk\";\n\nexport enum PolicyType {\n    local = \"local\",\n    remote = \"remote\",\n    oss = \"oss\",\n    qiniu = \"qiniu\",\n    onedrive = \"onedrive\",\n    cos = \"cos\",\n    upyun = \"upyun\",\n    s3 = \"s3\",\n}\n\nexport interface Policy {\n    id: number;\n    name: string;\n    allowedSuffix: Nullable<string[]>;\n    maxSize: number;\n    type: PolicyType;\n}\n\nexport enum TaskType {\n    file,\n    resumeHint,\n}\n\nexport interface Task {\n    type: TaskType;\n    name: string;\n    size: number;\n    policy: Policy;\n    dst: string;\n    file: File;\n    child?: Task[];\n    session?: UploadCredential;\n    chunkProgress: ChunkProgress[];\n    resumed: boolean;\n}\n\ntype Nullable<T> = T | null;\n\nexport interface Response<T> {\n    code: number;\n    data: T;\n    msg: string;\n    error: string;\n}\n\nexport interface UploadSessionRequest {\n    path: string;\n    size: number;\n    name: string;\n    policy_id: number;\n    last_modified?: number;\n}\n\nexport interface UploadCredential {\n    sessionID: string;\n    expires: number;\n    chunkSize: number;\n    uploadURLs: string[];\n    credential: string;\n    uploadID: string;\n    callback: string;\n    policy: string;\n    ak: string;\n    keyTime: string;\n    path: string;\n    completeURL: string;\n}\n\nexport interface OneDriveError {\n    error: {\n        code: string;\n        message: string;\n        innererror?: {\n            code: string;\n        };\n    };\n}\n\nexport interface OneDriveChunkResponse {\n    expirationDateTime: string;\n    nextExpectedRanges: string[];\n}\n\nexport interface QiniuChunkResponse {\n    etag: string;\n    md5: string;\n}\n\nexport interface QiniuError {\n    error: string;\n}\n\nexport interface QiniuPartsInfo {\n    etag: string;\n    partNumber: number;\n}\n\nexport interface QiniuFinishUploadRequest {\n    parts: QiniuPartsInfo[];\n}\n\nexport interface UpyunError {\n    message: string;\n    code: number;\n}\n\nexport interface S3Part {\n    ETag: string;\n    PartNumber: number;\n}\n","// 所有 Uploader 的基类\nimport { PolicyType, Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\nimport { validate } from \"../utils/validator\";\nimport { CancelToken } from \"../utils/request\";\nimport axios, { CancelTokenSource } from \"axios\";\nimport { createUploadSession, deleteUploadSession } from \"../api\";\nimport * as utils from \"../utils\";\nimport { RequestCanceledError, UploaderError } from \"../errors\";\n\nexport enum Status {\n    added,\n    resumable,\n    initialized,\n    queued,\n    preparing,\n    processing,\n    finishing,\n    finished,\n    error,\n    canceled,\n}\n\nexport interface UploadHandlers {\n    onTransition: (newStatus: Status) => void;\n    onError: (err: Error) => void;\n    onProgress: (data: UploadProgress) => void;\n    onMsg: (msg: string, color: string) => void;\n}\n\nexport interface UploadProgress {\n    total: ProgressCompose;\n    chunks?: ProgressCompose[];\n}\n\nexport interface ProgressCompose {\n    size: number;\n    loaded: number;\n    percent: number;\n    fromCache?: boolean;\n}\n\nexport interface Progress {\n    total: number;\n    loaded: number;\n}\n\nconst resumePolicy = [\n    PolicyType.local,\n    PolicyType.remote,\n    PolicyType.qiniu,\n    PolicyType.oss,\n    PolicyType.onedrive,\n    PolicyType.s3,\n];\nconst deleteUploadSessionDelay = 500;\n\nexport default abstract class Base {\n    public child?: Base[];\n    public status: Status = Status.added;\n    public error?: Error;\n\n    public id = ++Base.id;\n    private static id = 0;\n\n    protected logger: Logger;\n    protected subscriber: UploadHandlers;\n    // 用于取消请求\n    protected cancelToken: CancelTokenSource = CancelToken.source();\n    protected progress: UploadProgress;\n\n    public lastTime = Date.now();\n    public startTime = Date.now();\n\n    constructor(public task: Task, protected manager: UploadManager) {\n        this.logger = new Logger(\n            this.manager.logger.level,\n            \"UPLOADER\",\n            this.id\n        );\n        this.logger.info(\"Initialize new uploader for task: \", task);\n        this.subscriber = {\n            /* eslint-disable @typescript-eslint/no-empty-function */\n            onTransition: (newStatus: Status) => {},\n            onError: (err: Error) => {},\n            onProgress: (data: UploadProgress) => {},\n            onMsg: (msg, color: string) => {},\n            /* eslint-enable @typescript-eslint/no-empty-function */\n        };\n    }\n\n    public subscribe = (handlers: UploadHandlers) => {\n        this.subscriber = handlers;\n    };\n\n    public start = async () => {\n        this.logger.info(\"Activate uploading task\");\n        this.transit(Status.initialized);\n        this.lastTime = this.startTime = Date.now();\n\n        try {\n            validate(this.task.file, this.task.policy);\n        } catch (e) {\n            this.logger.error(\"File validate failed with error:\", e);\n            this.setError(e);\n            return;\n        }\n\n        this.logger.info(\"Enqueued in manager pool\");\n        this.transit(Status.queued);\n        this.manager.pool.enqueue(this).catch((e) => {\n            this.logger.info(\"Upload task failed with error:\", e);\n            this.setError(e);\n        });\n    };\n\n    public run = async () => {\n        this.logger.info(\"Start upload task, create upload session...\");\n        this.transit(Status.preparing);\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.session = await createUploadSession(\n                {\n                    path: this.task.dst,\n                    size: this.task.file.size,\n                    name: this.task.file.name,\n                    policy_id: this.task.policy.id,\n                    last_modified: this.task.file.lastModified,\n                },\n                this.cancelToken.token\n            );\n            this.logger.info(\"Upload session created:\", this.task.session);\n        } else {\n            this.task.session = cachedInfo.session;\n            this.task.resumed = true;\n            this.task.chunkProgress = cachedInfo.chunkProgress;\n            this.logger.info(\"Resume upload from cached ctx:\", cachedInfo);\n        }\n\n        this.transit(Status.processing);\n        await this.upload();\n        await this.afterUpload();\n        utils.removeResumeCtx(this.task, this.logger);\n        this.transit(Status.finished);\n        this.logger.info(\"Upload task completed\");\n    };\n\n    public abstract async upload(): Promise<any>;\n    protected async afterUpload(): Promise<any> {\n        return;\n    }\n\n    public cancel = async () => {\n        if (this.status === Status.finished) {\n            return;\n        }\n\n        this.cancelToken.cancel();\n        await this.cancelUploadSession();\n        this.transit(Status.canceled);\n    };\n\n    public reset = () => {\n        this.cancelToken = axios.CancelToken.source();\n        this.progress = {\n            total: {\n                size: 0,\n                loaded: 0,\n                percent: 0,\n            },\n        };\n    };\n\n    protected setError(e: Error) {\n        if (\n            !(e instanceof UploaderError && e.Retryable()) ||\n            !resumePolicy.includes(this.task.policy.type)\n        ) {\n            this.logger.warn(\"Non-resume error occurs, clean resume ctx cache\");\n            this.cancelUploadSession();\n        }\n\n        if (!(e instanceof RequestCanceledError)) {\n            this.status = Status.error;\n            this.error = e;\n            this.subscriber.onError(e);\n        }\n    }\n\n    protected cancelUploadSession = (): Promise<void> => {\n        return new Promise<void>((resolve) => {\n            utils.removeResumeCtx(this.task, this.logger);\n            if (this.task.session) {\n                setTimeout(() => {\n                    deleteUploadSession(this.task.session!?.sessionID)\n                        .catch((e) => {\n                            this.logger.warn(\n                                \"Failed to cancel upload session: \",\n                                e\n                            );\n                        })\n                        .finally(() => {\n                            resolve();\n                        });\n                }, deleteUploadSessionDelay);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    protected transit(status: Status) {\n        this.status = status;\n        this.subscriber.onTransition(status);\n    }\n\n    public getProgressInfoItem(\n        loaded: number,\n        size: number,\n        fromCache?: boolean\n    ): ProgressCompose {\n        return {\n            size,\n            loaded,\n            percent: (loaded / size) * 100,\n            ...(fromCache == null ? {} : { fromCache }),\n        };\n    }\n\n    public key(): string {\n        return utils.getResumeCtxKey(this.task);\n    }\n}\n","export type LogLevel = \"INFO\" | \"WARN\" | \"ERROR\" | \"OFF\";\n\nexport default class Logger {\n    constructor(\n        public level: LogLevel = \"OFF\",\n        private prefix = \"UPLOAD\",\n        private id: number = 1\n    ) {}\n\n    private getPrintPrefix(level: LogLevel) {\n        return `Cloudreve-Uploader [${level}][${this.prefix}#${this.id}]:`;\n    }\n\n    info(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.log(this.getPrintPrefix(\"INFO\"), ...args);\n        }\n    }\n\n    warn(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.warn(this.getPrintPrefix(\"WARN\"), ...args);\n        }\n    }\n\n    error(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\", \"ERROR\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.error(this.getPrintPrefix(\"ERROR\"), ...args);\n        }\n    }\n}\n","import {\n    OneDriveChunkResponse,\n    QiniuChunkResponse,\n    QiniuFinishUploadRequest,\n    QiniuPartsInfo,\n    S3Part,\n    UploadCredential,\n    UploadSessionRequest,\n} from \"../types\";\nimport { OBJtoXML, request, requestAPI } from \"../utils\";\nimport {\n    COSUploadCallbackError,\n    COSUploadError,\n    CreateUploadSessionError,\n    DeleteUploadSessionError,\n    HTTPError,\n    LocalChunkUploadError,\n    OneDriveChunkError,\n    OneDriveFinishUploadError,\n    QiniuChunkError,\n    QiniuFinishUploadError,\n    S3LikeChunkError,\n    S3LikeFinishUploadError,\n    S3LikeUploadCallbackError,\n    SlaveChunkUploadError,\n    UpyunUploadError,\n} from \"../errors\";\nimport { ChunkInfo, ChunkProgress } from \"../uploader/chunk\";\nimport { Progress } from \"../uploader/base\";\nimport { CancelToken } from \"axios\";\n\nexport async function createUploadSession(\n    req: UploadSessionRequest,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\"file/upload\", {\n        method: \"put\",\n        data: req,\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new CreateUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function deleteUploadSession(id: string): Promise<any> {\n    const res = await requestAPI<UploadCredential>(`file/upload/${id}`, {\n        method: \"delete\",\n    });\n\n    if (res.data.code != 0) {\n        throw new DeleteUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function localUploadChunk(\n    sessionID: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(\n        `file/upload/${sessionID}/${chunk.index}`,\n        {\n            method: \"post\",\n            headers: { \"content-type\": \"application/octet-stream\" },\n            data: chunk.chunk,\n            onUploadProgress: (progressEvent) => {\n                onProgress({\n                    loaded: progressEvent.loaded,\n                    total: progressEvent.total,\n                });\n            },\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new LocalChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function slaveUploadChunk(\n    url: string,\n    credential: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await request<any>(`${url}?chunk=${chunk.index}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            Authorization: credential,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new SlaveChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function oneDriveUploadChunk(\n    url: string,\n    range: string, // if range is empty, this will be an request to query the session status\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<OneDriveChunkResponse> {\n    const res = await request<OneDriveChunkResponse>(url, {\n        method: range === \"\" ? \"get\" : \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            ...(range !== \"\" && { \"content-range\": range }),\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new OneDriveChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function finishOneDriveUpload(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\n        `callback/onedrive/finish/${sessionID}`,\n        {\n            method: \"post\",\n            data: \"{}\",\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new OneDriveFinishUploadError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function s3LikeUploadChunk(\n    url: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<string> {\n    const res = await request<string>(url, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.headers.etag;\n}\n\nexport async function s3LikeFinishUpload(\n    url: string,\n    isOss: boolean,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    let body = \"\";\n    if (!isOss) {\n        body += \"<CompleteMultipartUpload>\";\n        chunks.forEach((chunk) => {\n            body += \"<Part>\";\n            const part: S3Part = {\n                PartNumber: chunk.index + 1,\n                ETag: chunk.etag!,\n            };\n            body += OBJtoXML(part);\n            body += \"</Part>\";\n        });\n        body += \"</CompleteMultipartUpload>\";\n    }\n\n    const res = await request<any>(url, {\n        method: \"post\",\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n        data: body,\n        headers: isOss\n            ? {\n                  \"content-type\": \"application/octet-stream\",\n                  \"x-oss-forbid-overwrite\": \"true\",\n                  \"x-oss-complete-all\": \"yes\",\n              }\n            : {\n                  \"content-type\": \"application/xhtml+xml\",\n              },\n        validateStatus: function (status) {\n            return status == 200;\n        },\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuDriveUploadChunk(\n    url: string,\n    upToken: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<QiniuChunkResponse> {\n    const res = await request<QiniuChunkResponse>(`${url}/${chunk.index + 1}`, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuFinishUpload(\n    url: string,\n    upToken: string,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    const content: QiniuFinishUploadRequest = {\n        parts: chunks.map(\n            (chunk): QiniuPartsInfo => {\n                return {\n                    etag: chunk.etag!,\n                    partNumber: chunk.index + 1,\n                };\n            }\n        ),\n    };\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/json\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: content,\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    path: string,\n    callback: string,\n    sessionID: string,\n    keyTime: string,\n    credential: string,\n    ak: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"key\", path);\n    bodyFormData.append(\"x-cos-meta-callback\", callback);\n    bodyFormData.append(\"x-cos-meta-key\", sessionID);\n    bodyFormData.append(\"q-sign-algorithm\", \"sha1\");\n    bodyFormData.append(\"q-key-time\", keyTime);\n    bodyFormData.append(\"q-ak\", ak);\n    bodyFormData.append(\"q-signature\", credential);\n    bodyFormData.append(\"name\", file.name);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new COSUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/cos/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new COSUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function upyunFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    credential: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"authorization\", credential);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new UpyunUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function s3LikeUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/s3/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new S3LikeUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n","import { Policy, PolicyType, Task, TaskType } from \"./types\";\nimport Logger, { LogLevel } from \"./logger\";\nimport { UnknownPolicyError, UploaderError, UploaderErrorName } from \"./errors\";\nimport Base from \"./uploader/base\";\nimport Local from \"./uploader/local\";\nimport { Pool } from \"./utils/pool\";\nimport {\n    cleanupResumeCtx,\n    getAllFileEntries,\n    getDirectoryUploadDst,\n    getFileInput,\n    isFileDrop,\n    listResumeCtx,\n} from \"./utils\";\nimport Remote from \"./uploader/remote\";\nimport OneDrive from \"./uploader/onedrive\";\nimport OSS from \"./uploader/oss\";\nimport Qiniu from \"./uploader/qiniu\";\nimport COS from \"./uploader/cos\";\nimport Upyun from \"./uploader/upyun\";\nimport S3 from \"./uploader/s3\";\nimport ResumeHint from \"./uploader/placeholder\";\n\nexport interface Option {\n    logLevel: LogLevel;\n    concurrentLimit: number;\n    dropZone?: HTMLElement;\n    onDropOver?: (e: DragEvent) => void;\n    onDropLeave?: (e: DragEvent) => void;\n    onToast: (type: string, msg: string) => void;\n    onDropFileAdded?: (uploaders: Base[]) => void;\n}\n\nexport enum SelectType {\n    File,\n    Directory,\n}\n\nexport default class UploadManager {\n    public logger: Logger;\n    public pool: Pool;\n    private static id = 0;\n    private policy?: Policy;\n    private fileInput: HTMLInputElement;\n    private directoryInput: HTMLInputElement;\n    private id = ++UploadManager.id;\n    // used for proactive upload (drop, paste)\n    private currentPath = \"/\";\n\n    constructor(private o: Option) {\n        this.logger = new Logger(o.logLevel, \"MANAGER\");\n        this.logger.info(`Initialized with log level: ${o.logLevel}`);\n\n        this.pool = new Pool(o.concurrentLimit);\n        this.fileInput = getFileInput(this.id, false);\n        this.directoryInput = getFileInput(this.id, true);\n\n        if (o.dropZone) {\n            this.logger.info(`Drag and drop container set to:`, o.dropZone);\n            o.dropZone.addEventListener(\"dragenter\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropOver) {\n                        o.onDropOver(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"dragleave\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropLeave) {\n                        o.onDropLeave(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"drop\", this.onFileDroppedIn);\n        }\n    }\n\n    changeConcurrentLimit = (newLimit: number) => {\n        this.pool.limit = newLimit;\n    };\n\n    dispatchUploader(task: Task): Base {\n        if (task.type == TaskType.resumeHint) {\n            return new ResumeHint(task, this);\n        }\n\n        switch (task.policy.type) {\n            case PolicyType.local:\n                return new Local(task, this);\n            case PolicyType.remote:\n                return new Remote(task, this);\n            case PolicyType.onedrive:\n                return new OneDrive(task, this);\n            case PolicyType.oss:\n                return new OSS(task, this);\n            case PolicyType.qiniu:\n                return new Qiniu(task, this);\n            case PolicyType.cos:\n                return new COS(task, this);\n            case PolicyType.upyun:\n                return new Upyun(task, this);\n            case PolicyType.s3:\n                return new S3(task, this);\n            default:\n                throw new UnknownPolicyError(\n                    \"Unknown policy type.\",\n                    task.policy\n                );\n        }\n    }\n\n    // 设定当前存储策略\n    public setPolicy(p: Policy, path: string) {\n        this.policy = p;\n        this.currentPath = path;\n        if (p == undefined) {\n            this.logger.info(`Currently no policy selected`);\n            return;\n        }\n\n        this.logger.info(`Switching policy to:`, p);\n\n        if (p.allowedSuffix != undefined && p.allowedSuffix.length > 0) {\n            const acceptVal = p.allowedSuffix\n                .map((v) => {\n                    return \".\" + v;\n                })\n                .join(\",\");\n            this.logger.info(`Set allowed file suffix to ${acceptVal}`);\n            this.fileInput.setAttribute(\"accept\", acceptVal);\n        } else {\n            this.logger.info(`Set allowed file suffix to *`);\n            this.fileInput.removeAttribute(\"accept\");\n        }\n    }\n\n    // 选择文件\n    public select = (dst: string, type = SelectType.File): Promise<Base[]> => {\n        return new Promise<Base[]>((resolve) => {\n            if (this.policy == undefined) {\n                this.logger.warn(\n                    `Calling file selector while no policy is set`\n                );\n                throw new UploaderError(\n                    UploaderErrorName.NoPolicySelected,\n                    \"No policy selected.\"\n                );\n            }\n\n            this.fileInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.directoryInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.fileInput.value = \"\";\n            this.directoryInput.value = \"\";\n            type == SelectType.File\n                ? this.fileInput.click()\n                : this.directoryInput.click();\n        });\n    };\n\n    public resumeTasks = (): Base[] => {\n        const tasks = listResumeCtx(this.logger);\n        if (tasks.length > 0) {\n            this.logger.info(\n                `Resumed ${tasks.length} unfinished task(s) from local storage:`,\n                tasks\n            );\n        }\n        return tasks\n            .filter(\n                (t) =>\n                    t.chunkProgress.length > 0 && t.chunkProgress[0].loaded > 0\n            )\n            .map((t) =>\n                this.dispatchUploader({ ...t, type: TaskType.resumeHint })\n            );\n    };\n\n    public cleanupSessions = () => {\n        cleanupResumeCtx(this.logger);\n    };\n\n    private fileSelectCallback = (\n        ev: Event | File[],\n        dst: string,\n        resolve: (value?: Base[] | PromiseLike<Base[]> | undefined) => void\n    ) => {\n        let files: File[] = [];\n        if (ev instanceof Event) {\n            const target = ev.target as HTMLInputElement;\n            if (!ev || !target || !target.files) return;\n            if (target.files.length > 0) {\n                files = Array.from(target.files);\n            }\n        } else {\n            files = ev as File[];\n        }\n\n        if (files.length > 0) {\n            resolve(\n                files.map(\n                    (file): Base =>\n                        this.dispatchUploader({\n                            type: TaskType.file,\n                            policy: this.policy as Policy,\n                            dst: getDirectoryUploadDst(dst, file),\n                            file: file,\n                            size: file.size,\n                            name: file.name,\n                            chunkProgress: [],\n                            resumed: false,\n                        })\n                )\n            );\n        }\n    };\n\n    private onFileDroppedIn = async (e: DragEvent) => {\n        const containFile =\n            e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n        if (containFile) {\n            this.o.onDropLeave && this.o.onDropLeave(e);\n            const items = await getAllFileEntries(e.dataTransfer!.items);\n            console.log(items);\n            const uploaders = await new Promise<Base[]>((resolve) =>\n                this.fileSelectCallback(items, this.currentPath, resolve)\n            );\n            this.o.onDropFileAdded && this.o.onDropFileAdded(uploaders);\n        }\n    };\n}\n","import Base, { Status, UploadProgress } from \"./base\";\nimport * as utils from \"../utils\";\nimport { Task, TaskType } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\n\nexport interface ChunkProgress {\n    loaded: number;\n    index: number;\n    etag?: string;\n}\n\nexport interface ChunkInfo {\n    chunk: Blob;\n    index: number;\n}\n\nexport default abstract class Chunk extends Base {\n    protected chunks: Blob[];\n\n    public upload = async () => {\n        this.logger.info(\"Preparing uploading file chunks.\");\n        this.initBeforeUploadChunks();\n\n        this.logger.info(\"Starting uploading file chunks:\", this.chunks);\n        this.updateLocalCache();\n        for (let i = 0; i < this.chunks.length; i++) {\n            if (\n                this.task.chunkProgress[i].loaded < this.chunks[i].size ||\n                this.chunks[i].size == 0\n            ) {\n                await this.uploadChunk({ chunk: this.chunks[i], index: i });\n                this.logger.info(`Chunk [${i}] uploaded.`);\n                this.updateLocalCache();\n            }\n        }\n    };\n\n    private initBeforeUploadChunks() {\n        this.chunks = utils.getChunks(\n            this.task.file,\n            this.task.session?.chunkSize\n        );\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.chunkProgress = this.chunks.map(\n                (value, index): ChunkProgress => ({\n                    loaded: 0,\n                    index,\n                })\n            );\n        }\n\n        this.notifyResumeProgress();\n    }\n\n    protected abstract async uploadChunk(chunkInfo: ChunkInfo): Promise<any>;\n\n    protected updateChunkProgress(loaded: number, index: number) {\n        this.task.chunkProgress[index].loaded = loaded;\n        this.notifyResumeProgress();\n    }\n\n    private notifyResumeProgress() {\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.file.size + 1\n            ),\n            chunks: this.chunks.map((chunk, index) => {\n                return this.getProgressInfoItem(\n                    this.task.chunkProgress[index].loaded,\n                    chunk.size,\n                    false\n                );\n            }),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    private updateLocalCache() {\n        utils.setResumeCtx(this.task, this.logger);\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { localUploadChunk } from \"../api\";\n\nexport default class Local extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return localUploadChunk(\n            this.task.session?.sessionID!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { slaveUploadChunk } from \"../api\";\n\nexport default class Remote extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return slaveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { finishOneDriveUpload, oneDriveUploadChunk } from \"../api\";\nimport { OneDriveChunkError, OneDriveEmptyFileSelected } from \"../errors\";\nimport { Status } from \"./base\";\n\nexport default class OneDrive extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        if (chunkInfo.chunk.size === 0) {\n            throw new OneDriveEmptyFileSelected();\n        }\n\n        const rangeEnd = this.progress.total.loaded + chunkInfo.chunk.size - 1;\n        return this.sendRange(\n            chunkInfo,\n            this.progress.total.loaded,\n            rangeEnd,\n            0\n        ).catch((e) => {\n            if (\n                e instanceof OneDriveChunkError &&\n                e.response.error.innererror &&\n                e.response.error.innererror.code == \"fragmentOverlap\"\n            ) {\n                return this.alignChunkOffset(chunkInfo);\n            }\n\n            throw e;\n        });\n    }\n\n    private async sendRange(\n        chunkInfo: ChunkInfo,\n        start: number,\n        end: number,\n        chunkOffset: number\n    ) {\n        const range = `bytes ${start}-${end}/${this.task.file.size}`;\n        return oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            range,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(\n                    chunkOffset + p.loaded,\n                    chunkInfo.index\n                );\n            },\n            this.cancelToken.token\n        );\n    }\n\n    private async alignChunkOffset(chunkInfo: ChunkInfo) {\n        this.logger.info(\n            `Chunk [${chunkInfo.index}] overlapped, checking next expected range...`\n        );\n        const rangeStatus = await oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            \"\",\n            chunkInfo,\n            (p) => {\n                return null;\n            },\n            this.cancelToken.token\n        );\n        const expectedStart = parseInt(\n            rangeStatus.nextExpectedRanges[0].split(\"-\")[0]\n        );\n        this.logger.info(\n            `Next expected range start from OneDrive is ${expectedStart}.`\n        );\n\n        if (expectedStart >= this.progress.total.loaded) {\n            this.logger.info(`This whole chunk is overlapped, skipping...`);\n            this.updateChunkProgress(chunkInfo.chunk.size, chunkInfo.index);\n            return;\n        } else {\n            this.updateChunkProgress(0, chunkInfo.index);\n            const rangeEnd =\n                this.progress.total.loaded + chunkInfo.chunk.size - 1;\n            const newChunkOffset = expectedStart - this.progress.total.loaded;\n            chunkInfo.chunk = chunkInfo.chunk.slice(newChunkOffset);\n            this.updateChunkProgress(newChunkOffset, chunkInfo.index);\n            return this.sendRange(\n                chunkInfo,\n                expectedStart,\n                rangeEnd,\n                newChunkOffset\n            );\n        }\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing upload...`);\n        this.transit(Status.finishing);\n        return finishOneDriveUpload(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { s3LikeFinishUpload, s3LikeUploadChunk } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            true,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class Qiniu extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const chunkRes = await qiniuDriveUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = chunkRes.etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return qiniuFinishUpload(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Base, { Status } from \"./base\";\nimport { cosFormUploadChunk, cosUploadCallback } from \"../api\";\n\nexport default class COS extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await cosFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.path!,\n            this.task.session?.callback!,\n            this.task.session?.sessionID!,\n            this.task.session?.keyTime!,\n            this.task.session?.credential!,\n            this.task.session?.ak!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n\n    protected async afterUpload(): Promise<any> {\n        this.transit(Status.finishing);\n        this.logger.info(`Sending COS upload callback...`);\n        try {\n            await cosUploadCallback(\n                this.task.session!.sessionID,\n                this.cancelToken.token\n            );\n        } catch (e) {\n            this.logger.warn(`Failed to finish COS upload:`, e);\n        }\n    }\n}\n","import Base from \"./base\";\nimport { upyunFormUploadChunk } from \"../api\";\n\nexport default class Upyun extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await upyunFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.credential!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport {\n    s3LikeFinishUpload,\n    s3LikeUploadCallback,\n    s3LikeUploadChunk,\n} from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const etag = await s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        await s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            false,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n\n        this.logger.info(`Sending S3-like upload callback...`);\n        return s3LikeUploadCallback(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\nimport { Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport * as utils from \"../utils\";\n\nexport default class ResumeHint extends Chunk {\n    constructor(task: Task, manager: UploadManager) {\n        super(task, manager);\n        this.status = Status.resumable;\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.size + 1\n            ),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return null;\n    }\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Badge, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FilePlus, FolderUpload } from \"mdi-material-ui\";\nimport { green } from \"@material-ui/core/colors\";\nimport { SelectType } from \"../Uploader/core\";\nimport {\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            whiteSpace: \"nowrap\",\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        bottom: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function UploadButton(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n    const path = useSelector((state) => state.navigator.path);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                props.selectFile(path);\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const circularProgress = useMemo(() => {\n        if (props.progress.totalSize > 0) {\n            return (\n                <CircularProgress\n                    key={1}\n                    size={68}\n                    variant=\"determinate\"\n                    value={\n                        (props.progress.processedSize /\n                            props.progress.totalSize) *\n                        100\n                    }\n                    className={classes.fabProgress}\n                />\n            );\n        }\n    }, [classes, props.progress]);\n\n    return (\n        <AutoHidden enable hide={props.taskListOpen}>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge, // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    hidden={false}\n                    tooltipTitle={t(\"uploadFiles\")}\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\",\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                    ariaLabel={\"\"}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle={t(\"uploadFiles\")}\n                            onClick={() => uploadClicked()}\n                            title={t(\"uploadFiles\")}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle={t(\"uploadFolder\")}\n                            onClick={() =>\n                                props.selectFile(path, SelectType.Directory)\n                            }\n                            title={t(\"uploadFolder\")}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle={t(\"newFolder\")}\n                        onClick={() => OpenNewFolderDialog()}\n                        title={t(\"newFolder\")}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle={t(\"newFile\")}\n                        onClick={() => OpenNewFileDialog()}\n                        title={t(\"newFile\")}\n                    />\n                </SpeedDial>\n                {circularProgress}\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport TimeAgo from \"timeago-react\";\nimport { Status } from \"../core/uploader/base\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        wordBreak: \"break-all\",\n    },\n}));\n\nexport default function TaskDetail({ uploader, navigateToDst, error }) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const items = [\n        {\n            name: t(\"uploader.fileName\"),\n            value: uploader.task.name,\n        },\n        {\n            name: t(\"uploader.fileSize\"),\n            value: `${sizeToString(uploader.task.size)} ${\n                uploader.task.session && uploader.task.session.chunkSize > 0\n                    ? t(\"uploader.chunkDescription\", {\n                          total: uploader.task.chunkProgress.length,\n                          size: sizeToString(uploader.task.session.chunkSize),\n                      })\n                    : t(\"uploader.noChunks\")\n            }`,\n        },\n        {\n            name: t(\"fileManager.storagePolicy\"),\n            value: uploader.task.policy.name,\n        },\n        {\n            name: t(\"uploader.destination\"),\n            value: (\n                <Link\n                    href={\"javascript:void\"}\n                    onClick={() => navigateToDst(uploader.task.dst)}\n                >\n                    {uploader.task.dst === \"/\"\n                        ? t(\"uploader.rootFolder\")\n                        : uploader.task.dst}\n                </Link>\n            ),\n        },\n        uploader.task.session\n            ? {\n                  name: t(\"uploader.uploadSession\"),\n                  value: (\n                      <>\n                          <Trans\n                              i18nKey=\"uploader.sessionExpiredIn\"\n                              components={[\n                                  <TimeAgo\n                                      key={0}\n                                      datetime={\n                                          uploader.task.session\n                                              ? uploader.task.session.expires *\n                                                1000\n                                              : 0\n                                      }\n                                      locale={t(\"timeAgoLocaleCode\", {\n                                          ns: \"common\",\n                                      })}\n                                  />,\n                              ]}\n                          />\n                      </>\n                  ),\n              }\n            : null,\n        uploader.status === Status.error\n            ? {\n                  name: t(\"uploader.errorDetails\"),\n                  value: error,\n              }\n            : null,\n    ];\n    return (\n        <Grid container>\n            {items.map((i) => (\n                <>\n                    {i && (\n                        <Grid key={i.name} container xs={12}>\n                            <Grid item xs={3} className={classes.infoTitle}>\n                                {i.name}\n                            </Grid>\n                            <Grid item xs={9} className={classes.infoValue}>\n                                {i.value}\n                            </Grid>\n                        </Grid>\n                    )}\n                </>\n            ))}\n        </Grid>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n    Divider,\n    Grow,\n    IconButton,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Tooltip,\n} from \"@material-ui/core\";\nimport TypeIcon from \"../../FileManager/TypeIcon\";\nimport { useUpload } from \"../UseUpload\";\nimport { Status } from \"../core/uploader/base\";\nimport { UploaderError } from \"../core/errors\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport TaskDetail from \"./TaskDetail\";\nimport { SelectType } from \"../core\";\nimport { navigateTo } from \"../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9,\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n    progressContainer: {\n        position: \"relative\",\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    wordBreak: {\n        wordBreak: \"break-all\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    successStatus: {\n        color: theme.palette.success.main,\n    },\n    errorStatus: {\n        color: theme.palette.warning.main,\n        wordBreak: \"break-all\",\n        [theme.breakpoints.up(\"sm\")]: {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n        },\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    delete: {\n        zIndex: 9,\n    },\n    dstLink: {\n        color: theme.palette.success.main,\n        fontWeight: 600,\n    },\n    fileNameContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n        display: \"block\",\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        paddingLeft: 16,\n        paddingRight: 16,\n        paddingTop: 8,\n        paddingBottom: 8,\n        display: \"block\",\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nconst getSpeedText = (speed, speedAvg, useSpeedAvg) => {\n    let displayedSpeed = speedAvg;\n    if (!useSpeedAvg) {\n        displayedSpeed = speed;\n    }\n\n    return `${sizeToString(displayedSpeed ? displayedSpeed : 0)} /s`;\n};\n\nconst getErrMsg = (error) => {\n    let errMsg = error.message;\n    if (error instanceof UploaderError) {\n        errMsg = error.Message(\"\");\n    }\n\n    return errMsg;\n};\n\nexport default function UploadTask({\n    uploader,\n    useAvgSpeed,\n    onCancel,\n    onClose,\n    selectFile,\n    onRefresh,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const [taskHover, setTaskHover] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const { status, error, progress, speed, speedAvg, retry } = useUpload(\n        uploader\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const navigateToDst = (path) => {\n        onClose(null, \"backdropClick\");\n        NavigateTo(path);\n    };\n\n    const toggleDetail = (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    useEffect(() => {\n        if (status >= Status.finished) {\n            onRefresh();\n        }\n    }, [status]);\n\n    const statusText = useMemo(() => {\n        const parent = filename(uploader.task.dst);\n        switch (status) {\n            case Status.added:\n            case Status.initialized:\n            case Status.queued:\n                return <div>{t(\"pendingInQueue\")}</div>;\n            case Status.preparing:\n                return <div>{t(\"preparing\")}</div>;\n            case Status.error:\n                return (\n                    <div className={classes.errorStatus}>\n                        {getErrMsg(error)}\n                        <br />\n                    </div>\n                );\n            case Status.finishing:\n                return <div>{t(\"processing\")}</div>;\n            case Status.resumable:\n                return (\n                    <div>\n                        {t(\"progressDescription\", {\n                            uploaded: sizeToString(progress.total.loaded),\n                            total: sizeToString(progress.total.size),\n                            percentage: progress.total.percent.toFixed(2),\n                        })}\n                    </div>\n                );\n            case Status.processing:\n                if (progress) {\n                    return (\n                        <div>\n                            {t(\"progressDescriptionFull\", {\n                                speed: getSpeedText(\n                                    speed,\n                                    speedAvg,\n                                    useAvgSpeed\n                                ),\n                                uploaded: sizeToString(progress.total.loaded),\n                                total: sizeToString(progress.total.size),\n                                percentage: progress.total.percent.toFixed(2),\n                            })}\n                        </div>\n                    );\n                }\n                return <div>{t(\"progressDescriptionPlaceHolder\")}</div>;\n            case Status.finished:\n                return (\n                    <div className={classes.successStatus}>\n                        {t(\"uploadedTo\")}\n                        <Tooltip title={uploader.task.dst}>\n                            <Link\n                                className={classes.dstLink}\n                                href={\"javascript:void\"}\n                                onClick={() => navigateToDst(uploader.task.dst)}\n                            >\n                                {parent === \"\" ? t(\"rootFolder\") : parent}\n                            </Link>\n                        </Tooltip>\n                        <br />\n                    </div>\n                );\n            default:\n                return <div>{t(\"unknownStatus\")}</div>;\n        }\n    }, [status, error, progress, speed, speedAvg, useAvgSpeed]);\n\n    const resumeLabel = useMemo(\n        () =>\n            uploader.task.resumed && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label={t(\"resumed\")}\n                />\n            ) : null,\n        [status, fullScreen]\n    );\n\n    const continueLabel = useMemo(\n        () =>\n            status === Status.resumable && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    color={\"secondary\"}\n                    label={t(\"resumable\")}\n                />\n            ) : null,\n        [status, fullScreen]\n    );\n\n    const progressBar = useMemo(\n        () =>\n            (status === Status.processing ||\n                status === Status.finishing ||\n                status === Status.resumable) &&\n            progress ? (\n                <div\n                    style={{\n                        backgroundColor:\n                            theme.palette.type === \"light\"\n                                ? lighten(theme.palette.primary.main, 0.8)\n                                : darken(theme.palette.background.paper, 0.2),\n                        width: progress.total.percent + \"%\",\n                    }}\n                    className={classes.progress}\n                />\n            ) : null,\n        [status, progress, theme]\n    );\n\n    const taskDetail = useMemo(() => {\n        return (\n            <TaskDetail\n                error={error && getErrMsg(error)}\n                navigateToDst={navigateToDst}\n                uploader={uploader}\n            />\n        );\n    }, [uploader, expanded]);\n\n    const cancel = () => {\n        setLoading(true);\n        uploader.cancel().then(() => {\n            setLoading(false);\n            onCancel((u) => u.id != uploader.id);\n        });\n    };\n\n    const stopRipple = (e) => {\n        e.stopPropagation();\n    };\n\n    const secondaryAction = useMemo(() => {\n        if (!taskHover && !fullScreen) {\n            return <></>;\n        }\n\n        const actions = [\n            {\n                show: status === Status.error,\n                title: t(\"retry\"),\n                click: retry,\n                icon: <RefreshIcon />,\n                loading: false,\n            },\n            {\n                show: true,\n                title:\n                    status === Status.finished\n                        ? t(\"deleteTask\")\n                        : t(\"cancelAndDelete\"),\n                click: cancel,\n                icon: <DeleteIcon />,\n                loading: loading,\n            },\n            {\n                show: status === Status.resumable,\n                title: t(\"selectAndResume\"),\n                click: () =>\n                    selectFile(uploader.task.dst, SelectType.File, uploader),\n                icon: <PlayArrow />,\n                loading: false,\n            },\n        ];\n\n        return (\n            <>\n                {actions.map((a) => (\n                    <>\n                        {a.show && (\n                            <Grow in={a.show}>\n                                <Tooltip title={a.title}>\n                                    <IconButton\n                                        onMouseDown={stopRipple}\n                                        onTouchStart={stopRipple}\n                                        disabled={a.loading}\n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            a.click();\n                                        }}\n                                    >\n                                        {a.icon}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grow>\n                        )}\n                    </>\n                ))}\n            </>\n        );\n    }, [status, loading, taskHover, fullScreen, uploader]);\n\n    const fileIcon = useMemo(() => {\n        if (!fullScreen) {\n            return <TypeIcon fileName={uploader.task.name} isUpload />;\n        }\n    }, [uploader, fullScreen]);\n\n    return (\n        <>\n            <ExpansionPanel square expanded={expanded} onChange={toggleDetail}>\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div\n                        className={classes.progressContainer}\n                        onMouseLeave={() => setTaskHover(false)}\n                        onMouseOver={() => setTaskHover(true)}\n                    >\n                        {progressBar}\n                        <ListItem className={classes.progressContent} button>\n                            {fileIcon}\n                            <ListItemText\n                                className={classes.listAction}\n                                primary={\n                                    <div className={classes.fileNameContainer}>\n                                        <div className={classes.wordBreak}>\n                                            {uploader.task.name}\n                                        </div>\n                                        <div>{resumeLabel}</div>\n                                        <div>{continueLabel}</div>\n                                    </div>\n                                }\n                                secondary={\n                                    <div className={classes.wordBreak}>\n                                        {statusText}\n                                    </div>\n                                }\n                            />\n                            {secondaryAction}\n                        </ListItem>\n                    </div>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>{taskDetail}</ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Divider />\n        </>\n    );\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nexport function useUpload(uploader) {\n    const startLoadedRef = useRef(0);\n    const [status, setStatus] = useState(uploader.status);\n    const [error, setError] = useState(uploader.error);\n    const [progress, setProgress] = useState(uploader.progress);\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        /* eslint-disable @typescript-eslint/no-empty-function */\n        uploader.subscribe({\n            onTransition: (newStatus) => {\n                setStatus(newStatus);\n            },\n            onError: (err) => {\n                setError(err);\n                setStatus(uploader.status);\n            },\n            onProgress: (data) => {\n                setProgress(data);\n            },\n            onMsg: (msg, color) => {\n                ToggleSnackbar(\"top\", \"right\", msg, color);\n            },\n        });\n    }, []);\n\n    // 获取上传速度\n    const [speed, speedAvg] = React.useMemo(() => {\n        if (\n            progress == null ||\n            progress.total == null ||\n            progress.total.loaded == null\n        )\n            return [0, 0];\n        const duration = (Date.now() - (uploader.lastTime || 0)) / 1000;\n        const durationTotal = (Date.now() - (uploader.startTime || 0)) / 1000;\n        const res =\n            progress.total.loaded > startLoadedRef.current\n                ? Math.floor(\n                      (progress.total.loaded - startLoadedRef.current) /\n                          duration\n                  )\n                : 0;\n        const resAvg =\n            progress.total.loaded > 0\n                ? Math.floor(progress.total.loaded / durationTotal)\n                : 0;\n\n        startLoadedRef.current = progress.total.loaded;\n        uploader.lastTime = Date.now();\n        return [res, resAvg];\n    }, [progress]);\n\n    const retry = () => {\n        uploader.reset();\n        uploader.start();\n    };\n\n    return { status, error, progress, speed, speedAvg, retry };\n}\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Input,\n    InputLabel,\n    makeStyles,\n} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function ConcurrentOptionDialog({ open, onClose, onSave }) {\n    const { t } = useTranslation();\n    const [count, setCount] = useState(\n        Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\n    );\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            fullWidth\n            maxWidth={\"xs\"}\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"uploader.setConcurrent\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel htmlFor=\"component-helper\">\n                        {t(\"uploader.concurrentTaskNumber\")}\n                    </InputLabel>\n                    <Input\n                        type={\"number\"}\n                        inputProps={{\n                            min: 1,\n                            step: 1,\n                            max: 20,\n                        }}\n                        value={count}\n                        onChange={(e) => setCount(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={count === \"\"}\n                        onClick={() => onSave(count)}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n    Tooltip,\n} from \"@material-ui/core\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../../middleware/Api\";\nimport { TaskType } from \"../core/types\";\nimport { refreshStorage, toggleSnackbar } from \"../../../redux/explorer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { DeleteEmpty } from \"mdi-material-ui\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ConcurrentOptionDialog from \"../../Modals/ConcurrentOption\";\nimport Auth from \"../../../middleware/Auth\";\nimport { ClearAll } from \"@material-ui/icons\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function MoreActions({\n    anchorEl,\n    onClose,\n    uploadManager,\n    deleteTask,\n    useAvgSpeed,\n    setUseAvgSpeed,\n    filter,\n    setFilter,\n    sorter,\n    setSorter,\n    cleanFinished,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [concurrentDialog, setConcurrentDialog] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\n        dispatch,\n    ]);\n\n    const actionClicked = (next) => () => {\n        onClose();\n        next();\n    };\n\n    const cleanupSessions = () => {\n        uploadManager.cleanupSessions();\n        API.delete(\"/file/upload\")\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"uploadSessionCleaned\"),\n                        \"success\"\n                    );\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                deleteTask((u) => u.task.type !== TaskType.resumeHint);\n                RefreshStorage();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"uploader-action-popover\" : undefined;\n\n    const listItems = useMemo(\n        () => [\n            {\n                tooltip: t(\"hideCompletedTooltip\"),\n                onClick: () =>\n                    setFilter(filter === \"default\" ? \"ongoing\" : \"default\"),\n                icon: filter !== \"default\" ? <CheckIcon /> : <Icon />,\n                text: t(\"hideCompleted\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"addTimeAscTooltip\"),\n                onClick: () => setSorter(\"default\"),\n                icon: sorter === \"default\" ? <CheckIcon /> : <Icon />,\n                text: t(\"addTimeAsc\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"addTimeDescTooltip\"),\n                onClick: () => setSorter(\"reverse\"),\n                icon: sorter === \"reverse\" ? <CheckIcon /> : <Icon />,\n                text: t(\"addTimeDesc\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"showInstantSpeedTooltip\"),\n                onClick: () => setUseAvgSpeed(false),\n                icon: useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: t(\"showInstantSpeed\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"showAvgSpeedTooltip\"),\n                onClick: () => setUseAvgSpeed(true),\n                icon: !useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: t(\"showAvgSpeed\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"cleanAllSessionTooltip\"),\n                onClick: () => cleanupSessions(),\n                icon: <DeleteEmpty />,\n                text: t(\"cleanAllSession\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"cleanCompletedTooltip\"),\n                onClick: () => cleanFinished(),\n                icon: <DeleteIcon />,\n                text: t(\"cleanCompleted\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"setConcurrentTooltip\"),\n                onClick: () => setConcurrentDialog(true),\n                icon: <ClearAll />,\n                text: t(\"setConcurrent\"),\n                divider: false,\n            },\n        ],\n        [\n            useAvgSpeed,\n            setUseAvgSpeed,\n            sorter,\n            setSorter,\n            filter,\n            setFilter,\n            cleanFinished,\n        ]\n    );\n\n    const onConcurrentLimitSave = (val) => {\n        val = parseInt(val);\n        if (val > 0) {\n            Auth.SetPreference(\"concurrent_limit\", val);\n            uploadManager.changeConcurrentLimit(parseInt(val));\n        }\n        setConcurrentDialog(false);\n    };\n\n    return (\n        <>\n            <Menu id={id} open={open} anchorEl={anchorEl} onClose={onClose}>\n                {listItems.map((item) => (\n                    <>\n                        <Tooltip\n                            enterNextDelay={500}\n                            key={item.text}\n                            title={item.tooltip}\n                        >\n                            <MenuItem\n                                dense\n                                onClick={actionClicked(item.onClick)}\n                            >\n                                <ListItemIcon className={classes.icon}>\n                                    {item.icon}\n                                </ListItemIcon>\n                                {item.text}\n                            </MenuItem>\n                        </Tooltip>\n                        {item.divider && <Divider />}\n                    </>\n                ))}\n            </Menu>\n            <ConcurrentOptionDialog\n                open={concurrentDialog}\n                onClose={() => setConcurrentDialog(false)}\n                onSave={onConcurrentLimitSave}\n            />\n        </>\n    );\n}\n","import React, { useMemo, useState } from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AppBar,\n    Dialog,\n    DialogContent,\n    Fade,\n    IconButton,\n    makeStyles,\n    Slide,\n    Toolbar,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandLess\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classnames from \"classnames\";\nimport UploadTask from \"./UploadTask\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport MoreActions from \"./MoreActions\";\nimport { useSelector } from \"react-redux\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport Nothing from \"../../Placeholder/Nothing\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { Status } from \"../core/uploader/base\";\nimport Auth from \"../../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    rootOverwrite: {\n        top: \"auto!important\",\n        left: \"auto!important\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n    popup: {\n        alignItems: \"flex-end\",\n        justifyContent: \"flex-end\",\n    },\n    dialog: {\n        margin: 0,\n        right: 10,\n        bottom: 10,\n        zIndex: 9999,\n        position: \"fixed\",\n        inset: \"-1!important\",\n    },\n    paddingZero: {\n        padding: 0,\n    },\n    dialogContent: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: 500,\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n        padding: 0,\n        paddingTop: \"0!important\",\n    },\n    virtualList: {\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 56px)\",\n        [theme.breakpoints.up(\"md\")]: {\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n    },\n    expandIcon: {\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandIconExpanded: {\n        transform: \"rotate(180deg)\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: -1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n}));\n\nconst sorters = {\n    default: (a, b) => a.id - b.id,\n    reverse: (a, b) => b.id - a.id,\n};\n\nconst filters = {\n    default: (u) => true,\n    ongoing: (u) => u.status < Status.finished,\n};\n\nexport default function TaskList({\n    open,\n    onClose,\n    selectFile,\n    taskList,\n    onCancel,\n    uploadManager,\n    progress,\n    setUploaders,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const path = useSelector((state) => state.navigator.path);\n    const [expanded, setExpanded] = useState(true);\n    const [useAvgSpeed, setUseAvgSpeed] = useState(\n        Auth.GetPreferenceWithDefault(\"use_avg_speed\", true)\n    );\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [filter, setFilter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_filter\", \"default\")\n    );\n    const [sorter, setSorter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_sorter\", \"default\")\n    );\n    const [refreshList, setRefreshList] = useState(false);\n\n    const handleActionClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleActionClose = () => {\n        setAnchorEl(null);\n    };\n\n    const close = (e, reason) => {\n        if (reason !== \"backdropClick\") {\n            onClose();\n        } else {\n            setExpanded(false);\n        }\n    };\n    const handlePanelChange = (event, isExpanded) => {\n        setExpanded(isExpanded);\n    };\n\n    useMemo(() => {\n        if (open) {\n            setExpanded(true);\n        }\n    }, [taskList]);\n\n    const progressBar = useMemo(\n        () =>\n            progress.totalSize > 0 ? (\n                <Fade in={progress.totalSize > 0 && !expanded}>\n                    <div>\n                        <div\n                            style={{\n                                backgroundColor:\n                                    theme.palette.type === \"light\"\n                                        ? lighten(\n                                              theme.palette.primary.main,\n                                              0.2\n                                          )\n                                        : lighten(\n                                              theme.palette.primary.main,\n                                              0.2\n                                          ),\n                                width:\n                                    (progress.processedSize /\n                                        progress.totalSize) *\n                                        100 +\n                                    \"%\",\n                            }}\n                            className={classes.progress}\n                        />\n                    </div>\n                </Fade>\n            ) : null,\n        [progress, expanded, classes, theme]\n    );\n\n    const list = useMemo(() => {\n        const currentList = taskList\n            .filter(filters[filter])\n            .sort(sorters[sorter]);\n        if (currentList.length === 0) {\n            return <Nothing size={0.5} top={63} primary={t(\"taskListEmpty\")} />;\n        }\n\n        return (\n            <Virtuoso\n                style={{\n                    height: (fullScreen ? 500 : 73) * currentList.length,\n                }}\n                className={classes.virtualList}\n                increaseViewportBy={180}\n                data={currentList}\n                itemContent={(index, uploader) => (\n                    <UploadTask\n                        selectFile={selectFile}\n                        onClose={close}\n                        onCancel={onCancel}\n                        key={uploader.id}\n                        useAvgSpeed={useAvgSpeed}\n                        uploader={uploader}\n                        filter={filters[filter]}\n                        onRefresh={() => setRefreshList((r) => !r)}\n                    />\n                )}\n            />\n        );\n    }, [\n        classes,\n        taskList,\n        useAvgSpeed,\n        fullScreen,\n        filter,\n        sorter,\n        refreshList,\n    ]);\n\n    return (\n        <>\n            <MoreActions\n                deleteTask={onCancel}\n                onClose={handleActionClose}\n                uploadManager={uploadManager}\n                anchorEl={anchorEl}\n                useAvgSpeed={useAvgSpeed}\n                setUseAvgSpeed={(v) => {\n                    Auth.SetPreference(\"use_avg_speed\", v);\n                    setUseAvgSpeed(v);\n                }}\n                filter={filter}\n                sorter={sorter}\n                setFilter={(v) => {\n                    Auth.SetPreference(\"task_filter\", v);\n                    setFilter(v);\n                }}\n                setSorter={(v) => {\n                    Auth.SetPreference(\"task_sorter\", v);\n                    setSorter(v);\n                }}\n                cleanFinished={() =>\n                    setUploaders((u) => u.filter(filters[\"ongoing\"]))\n                }\n            />\n            <Dialog\n                classes={{\n                    container: classes.popup, // class name, e.g. `classes-nesting-root-x`\n                    root: classnames({\n                        [classes.rootOverwrite]: !fullScreen,\n                    }),\n                }}\n                className={classnames({\n                    [classes.dialog]: !fullScreen,\n                })}\n                fullScreen={fullScreen}\n                open={open}\n                onClose={close}\n                TransitionComponent={Transition}\n                disableEnforceFocus={!expanded}\n                hideBackdrop={!expanded}\n                disableBackdropClick={!expanded}\n                disableScrollLock={!expanded}\n            >\n                <Accordion\n                    expanded={expanded || fullScreen}\n                    onChange={handlePanelChange}\n                >\n                    <AppBar className={classes.appBar}>\n                        {progressBar}\n                        <Toolbar disableGutters className={classes.toolbar}>\n                            <Tooltip title={t(\"hideTaskList\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={close}\n                                    aria-label=\"Close\"\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                className={classes.flex}\n                            >\n                                {t(\"uploadTasks\")}\n                            </Typography>\n                            <Tooltip title={t(\"moreActions\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={handleActionClick}\n                                >\n                                    <MoreHoriz />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title={t(\"addNewFiles\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={() => selectFile(path)}\n                                >\n                                    <AddIcon />\n                                </IconButton>\n                            </Tooltip>\n                            {!fullScreen && (\n                                <Tooltip title={t(\"toggleTaskList\")}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        onClick={() => setExpanded(!expanded)}\n                                    >\n                                        <ExpandMoreIcon\n                                            className={classnames({\n                                                [classes.expandIconExpanded]: expanded,\n                                                [classes.expandIcon]: true,\n                                            })}\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                        </Toolbar>\n                    </AppBar>\n                    <AccordionDetails className={classes.paddingZero}>\n                        <DialogContent className={classes.dialogContent}>\n                            {list}\n                        </DialogContent>\n                    </AccordionDetails>\n                </Accordion>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { Typography } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: \"#fff\",\n            flexDirection: \"column\",\n        },\n    })\n);\n\nexport function DropFileBackground({ open }) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    return (\n        <Backdrop className={classes.backdrop} open={open}>\n            <div>\n                <UploadIcon style={{ fontSize: 80 }} />\n            </div>\n            <div>\n                <Typography variant={\"h4\"}>\n                    {t(\"uploader.dropFileHere\")}\n                </Typography>\n            </div>\n        </Backdrop>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport UploadManager, { SelectType } from \"./core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UploadButton from \"../Dial/Create\";\nimport pathHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\nimport { UploaderError } from \"./core/errors\";\nimport TaskList from \"./Popup/TaskList\";\nimport { Status } from \"./core/uploader/base\";\nimport { DropFileBackground } from \"../Placeholder/DropFile\";\nimport {\n    refreshFileList,\n    refreshStorage,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport Auth from \"../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nlet totalProgressCollector = null;\nlet lastProgressStart = -1;\nlet dragCounter = 0;\n\nexport default function Uploader() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const [uploaders, setUploaders] = useState([]);\n    const [taskListOpen, setTaskListOpen] = useState(false);\n    const [dropBgOpen, setDropBgOpen] = useState(0);\n    const [totalProgress, setTotalProgress] = useState({\n        totalSize: 0,\n        processedSize: 0,\n        total: 0,\n        processed: 0,\n    });\n    const search = useSelector((state) => state.explorer.search);\n    const policy = useSelector((state) => state.explorer.currentPolicy);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const path = useSelector((state) => state.navigator.path);\n    const fileSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFileSelector\n    );\n    const folderSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFolderSelector\n    );\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => dispatch(refreshFileList()), [\n        dispatch,\n    ]);\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\n        dispatch,\n    ]);\n\n    const enableUploader = useMemo(\n        () => pathHelper.isHomePage(location.pathname) && isLogin && !search,\n        [location.pathname, isLogin, search]\n    );\n\n    const taskAdded = (original = null) => (tasks) => {\n        if (original !== null) {\n            if (tasks.length !== 1 || tasks[0].key() !== original.key()) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileNotMatchError\"),\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        tasks.forEach((t) => t.start());\n\n        setTaskListOpen(true);\n        setUploaders((uploaders) => {\n            if (original !== null) {\n                uploaders = uploaders.filter((u) => u.key() !== original.key());\n            }\n\n            return [...uploaders, ...tasks];\n        });\n    };\n\n    const uploadManager = useMemo(() => {\n        return new UploadManager({\n            logLevel: \"INFO\",\n            concurrentLimit: parseInt(\n                Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\n            ),\n            dropZone: document.querySelector(\"body\"),\n            onToast: (type, msg) => {\n                ToggleSnackbar(\"top\", \"right\", msg, type);\n            },\n            onDropOver: (e) => {\n                dragCounter++;\n                setDropBgOpen((value) => !value);\n            },\n            onDropLeave: (e) => {\n                dragCounter--;\n                setDropBgOpen((value) => !value);\n            },\n            onDropFileAdded: taskAdded(),\n        });\n    }, []);\n\n    useEffect(() => {\n        uploadManager.setPolicy(policy, path);\n    }, [policy]);\n\n    useEffect(() => {\n        const unfinished = uploadManager.resumeTasks();\n        setUploaders((uploaders) => [...uploaders, ...unfinished]);\n        if (!totalProgressCollector) {\n            totalProgressCollector = setInterval(() => {\n                const progress = {\n                    totalSize: 0,\n                    processedSize: 0,\n                    total: 0,\n                    processed: 0,\n                };\n                setUploaders((uploaders) => {\n                    uploaders.forEach((u) => {\n                        if (u.id <= lastProgressStart) {\n                            return;\n                        }\n\n                        progress.totalSize += u.task.size;\n                        progress.total += 1;\n\n                        if (\n                            u.status === Status.finished ||\n                            u.status === Status.canceled ||\n                            u.status === Status.error\n                        ) {\n                            progress.processedSize += u.task.size;\n                            progress.processed += 1;\n                        }\n\n                        if (\n                            u.status === Status.added ||\n                            u.status === Status.initialized ||\n                            u.status === Status.queued ||\n                            u.status === Status.preparing ||\n                            u.status === Status.processing ||\n                            u.status === Status.finishing\n                        ) {\n                            progress.processedSize += u.progress\n                                ? u.progress.total.loaded\n                                : 0;\n                        }\n                    });\n\n                    if (\n                        progress.total > 0 &&\n                        progress.processed === progress.total\n                    ) {\n                        lastProgressStart = uploaders[uploaders.length - 1].id;\n                    }\n                    return uploaders;\n                });\n\n                if (\n                    progress.total > 0 &&\n                    progress.total === progress.processed\n                ) {\n                    RefreshFileList();\n                    RefreshStorage();\n                }\n\n                setTotalProgress(progress);\n            }, 2000);\n        }\n    }, []);\n\n    const selectFile = (path, type = SelectType.File, original = null) => {\n        setTaskListOpen(true);\n\n        // eslint-disable-next-line no-unreachable\n        uploadManager\n            .select(path, type)\n            .then(taskAdded(original))\n            .catch((e) => {\n                if (e instanceof UploaderError) {\n                    ToggleSnackbar(\"top\", \"right\", e.Message(), \"warning\");\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"unknownError\", { msg: e.message }),\n                        \"error\"\n                    );\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (fileSelectCounter > 0) {\n            selectFile(path);\n        }\n    }, [fileSelectCounter]);\n\n    useEffect(() => {\n        if (folderSelectCounter > 0) {\n            selectFile(path, SelectType.Directory);\n        }\n    }, [folderSelectCounter]);\n\n    const deleteTask = (filter) => {\n        setUploaders((uploaders) => uploaders.filter(filter));\n    };\n\n    return (\n        <>\n            {enableUploader && (\n                <>\n                    <DropFileBackground open={dropBgOpen > 0} />\n                    <UploadButton\n                        progress={totalProgress}\n                        taskListOpen={taskListOpen}\n                        selectFile={selectFile}\n                        Queued={uploaders.length}\n                        openFileList={() => setTaskListOpen(true)}\n                    />\n                    <TaskList\n                        progress={totalProgress}\n                        uploadManager={uploadManager}\n                        taskList={uploaders}\n                        open={taskListOpen}\n                        onCancel={deleteTask}\n                        selectFile={selectFile}\n                        onClose={() => setTaskListOpen(false)}\n                        setUploaders={setUploaders}\n                    />\n                </>\n            )}\n        </>\n    );\n}\n","import i18next from \"./i18n\";\n\nexport const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\",\n];\nexport const msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\",\n];\nexport const subtitleSuffix = [\"ass\", \"srt\", \"vrr\"];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\", \"wav\", \"flac\", \"m4a\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\", \"avi\", \"m3u8\", \"mov\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const epubSuffix = [\"epub\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    py: \"python\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\",\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\", \"m4a\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"xz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"],\n    epub: epubSuffix,\n};\nexport const policyTypeMap = {\n    local: \"本机\",\n    remote: \"从机\",\n    qiniu: \"七牛\",\n    upyun: \"又拍云\",\n    oss: \"阿里云 OSS\",\n    cos: \"腾讯云\",\n    onedrive: \"OneDrive\",\n    s3: \"Amazon S3\",\n};\nexport const isPreviewable = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    } else if (epubSuffix.indexOf(suffix) !== -1) {\n        return \"epub\";\n    }\n    return false;\n};\nexport const isTorrent = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix !== \"7z\" && mediaType[\"zip\"].indexOf(suffix) !== -1;\n};\n\nexport const encodingRequired = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\n    \"setting.queueing\",\n    \"setting.processing\",\n    \"setting.failed\",\n    \"setting.canceled\",\n    \"setting.finished\",\n];\nconst taskType = [\n    \"fileManager.compress\",\n    \"fileManager.decompress\",\n    \"setting.fileTransfer\",\n    \"setting.importFiles\",\n];\nconst taskProgress = [\n    \"setting.waiting\",\n    \"setting.compressing\",\n    \"setting.decompressing\",\n    \"setting.downloading\",\n    \"setting.transferring\",\n    \"setting.indexing\",\n    \"setting.listing\",\n];\n\nexport const getTaskStatus = (status: any) => {\n    return i18next.t(taskStatus[status]);\n};\n\nexport const getTaskType = (status: any) => {\n    return i18next.t(taskType[status]);\n};\n\nexport const getTaskProgress = (type: any, status: any) => {\n    if (type === 2) {\n        return i18next.t(\"setting.transferProgress\", {\n            num: status,\n        });\n    }\n    return i18next.t(taskProgress[status]);\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { askForOption } from \"../explorer/async\";\nimport i18next, { languages } from \"../../i18n\";\n\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title,\n    };\n};\n\nexport const closeContextMenu = () => {\n    return {\n        type: \"CLOSE_CONTEXT_MENU\",\n    };\n};\n\nexport const changeContextMenu = (type: string, open: boolean) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n\nexport const setOptionModal = (option: any) => {\n    return {\n        type: \"SET_OPTION_MODAL\",\n        option: option,\n    };\n};\n\nexport const openFileSelector = () => {\n    return {\n        type: \"OPEN_FILE_SELECTOR\",\n    };\n};\n\nexport const openFolderSelector = () => {\n    return {\n        type: \"OPEN_FOLDER_SELECTOR\",\n    };\n};\n\nexport const setPagination = (pagination) => {\n    return {\n        type: \"SET_PAGINATION\",\n        pagination: pagination,\n    };\n};\n\nexport const setShareInfo = (shareInfo) => {\n    return {\n        type: \"SET_SHARE_INFO\",\n        shareInfo: shareInfo,\n    };\n};\n\nexport const changePageSize = (\n    size: number\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const {\n            explorer: { dirList, fileList },\n            viewUpdate: { pagination },\n        } = getState();\n        const total = dirList.length + fileList.length;\n        let page = pagination.page;\n        if (pagination.page * size > total) {\n            page = Math.max(Math.ceil(total / size), 1);\n        } else if (size === -1) {\n            page = 1;\n        }\n        Auth.SetPreference(\"pagination\", size);\n        dispatch(\n            setPagination({\n                ...pagination,\n                size: size,\n                page: page,\n            })\n        );\n    };\n};\n\nexport const selectLanguage = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState) => {\n        let option: any;\n        let lng = \"\";\n        try {\n            const allOptions = languages.map((e) => {\n                return {\n                    key: e.code,\n                    name: e.displayName,\n                };\n            });\n            option = await dispatch(\n                askForOption(allOptions, i18next.t(\"setting.language\"))\n            );\n        } catch (e) {\n            console.log(e);\n            return;\n        }\n\n        lng = option.key;\n        await i18next.changeLanguage(lng);\n    };\n};\n","import dayjs from \"dayjs\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport utc from \"dayjs/plugin/utc\";\nimport Auth from \"../middleware/Auth\";\nimport i18next from \"../i18n\";\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nlet userTimezone = \"\";\ntry {\n    userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n} catch (e) {\n    console.log(e);\n}\n\nif (!userTimezone) {\n    userTimezone = \"Asia/Shanghai\";\n}\n\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\nexport let timeZone = preferTimeZone ? preferTimeZone : userTimezone;\n\nexport function refreshTimeZone() {\n    timeZone = Auth.GetPreference(\"timeZone\");\n    timeZone = timeZone ? timeZone : userTimezone;\n}\n\nexport function formatLocalTime(time) {\n    return i18next.t(\"intlDateTime\", {\n        ns: \"common\",\n        val: dayjs(time).tz(timeZone).toDate(),\n        formatParams: {\n            val: {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\",\n            },\n        },\n    });\n}\n\nexport function validateTimeZone(name) {\n    try {\n        dayjs().tz(name).format();\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox,\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\nimport { MenuBook } from \"@material-ui/icons\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon,\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon,\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon,\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon,\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox,\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox,\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox,\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText,\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn,\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox,\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore,\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android,\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon,\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp,\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo,\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython,\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC,\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp,\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript,\n    },\n    epub: {\n        color: \"#81b315\",\n        icon: MenuBook,\n    },\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = (props) => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach((k) => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color,\n                    }}\n                >\n                    <IconComponent\n                        className={props.iconClassName}\n                        style={{\n                            color: theme.palette.background.paper,\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color,\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction NoAuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/home\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default NoAuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        fontSize: \"160px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n    },\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={60}\n        width={240}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"100%\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import React, {\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../middleware/Api\";\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Placeholder from \"../component/Placeholder/Captcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\nimport { toggleSnackbar } from \"../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\n    { captchaRef, setLoading },\n    ref\n) {\n    const { t } = useTranslation();\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then((response) => {\n                setCaptchaData(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.captchaError\", { message: error.message }),\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        ref.current = refreshCaptcha;\n        refreshCaptcha();\n    }, []);\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"captcha\">{t(\"login.captcha\")}</InputLabel>\n                <Input\n                    name=\"captcha\"\n                    onChange={(e) => setCaptcha(e.target.value)}\n                    type=\"text\"\n                    id=\"captcha\"\n                    value={captcha}\n                    autoComplete\n                />\n            </FormControl>{\" \"}\n            <div\n                className={classes.captchaImageContainer}\n                title={t(\"login.clickToRefresh\")}\n            >\n                {captchaData === null && (\n                    <Placeholder />\n                )}\n                {captchaData !== null && (\n                    <img\n                        className={classes.captchaImage}\n                        src={captchaData}\n                        alt=\"captcha\"\n                        onClick={refreshCaptcha}\n                    />\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function Normal() {\n            return (\n                <NormalCaptcha\n                    captchaRef={captchaParamsRef}\n                    ref={captchaRefreshRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, captchaRefreshRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge,\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\",\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName,\n})(ReCAPTCHA);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FormControl } from \"@material-ui/core\";\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\n\nconst Recaptcha = ({ captchaRef, setLoading }) => {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n\n    const reCaptchaKey = useSelector(\n        (state) => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    useEffect(() => setLoading(false), []);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <div>\n                    <ReCaptcha\n                        style={{\n                            display: \"inline-block\",\n                        }}\n                        sitekey={reCaptchaKey}\n                        onChange={(value) => setCaptcha(value)}\n                        id=\"captcha\"\n                        name=\"captcha\"\n                    />\n                </div>\n            </FormControl>{\" \"}\n        </div>\n    );\n};\n\nexport default function useRecaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function RecaptchaRender() {\n            return (\n                <Recaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React, { forwardRef, useCallback, useRef } from \"react\";\nimport Script from \"react-load-script\";\nimport { useSelector } from \"react-redux\";\n\nconst TCaptcha = forwardRef(function TCaptcha(\n    { captchaRef, setLoading, isValidateRef, submitRef },\n    ref\n) {\n    const appid = useSelector(\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\n    );\n    const onLoad = () => {\n        try {\n            ref.current = new window.TencentCaptcha(appid, function (res) {\n                if (res.ret === 0) {\n                    captchaRef.current.ticket = res.ticket;\n                    captchaRef.current.randstr = res.randstr;\n\n                    isValidateRef.current.isValidate = true;\n                    submitRef.current.submit();\n                    console.log(submitRef);\n                } else {\n                    submitRef.current.setLoading(false);\n                }\n            });\n        } catch (e) {\n            console.error(e);\n        }\n        setLoading(false);\n    };\n    return (\n        <Script\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\n            onLoad={onLoad}\n        />\n    );\n});\n\nexport default function useTCaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: false,\n    });\n    const captchaParamsRef = useRef({\n        ticket: \"\",\n        randstr: \"\",\n    });\n    const submitRef = useRef({\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        submit: () => {},\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        setLoading: () => {},\n    });\n\n    const captchaRef = useRef();\n\n    const CaptchaRender = useCallback(\n        function TCaptchaRender() {\n            return (\n                <TCaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                    isValidateRef={isValidate}\n                    submitRef={submitRef}\n                    ref={captchaRef}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\n    );\n\n    return {\n        isValidate: isValidate,\n        validate: (submit, setLoading) => {\n            submitRef.current.submit = submit;\n            submitRef.current.setLoading = setLoading;\n            captchaRef.current.show();\n        },\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useNormalCaptcha from \"./normal\";\nimport useRecaptcha from \"./recaptcha\";\nimport useTCaptcha from \"./tcaptcha\";\n\nexport const useStyle = makeStyles((theme) => ({\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        alignItems: 'center',\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            display: \"block\",\n        },\n    },\n    captchaImageContainer: {\n        cursor: 'pointer',\n        marginLeft: \"1rem\",\n        [theme.breakpoints.down(\"sm\")]: {\n            marginLeft: 0,\n        },\n    },\n    captchaImage: {\n        borderRadius: 4,\n    },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\nexport const defaultValidate = (submit, setLoading) => {};\n\nexport const useCaptcha = () => {\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\n\n    const [captchaLoading, setCaptchaLoading] = useState(true);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const captchaRefreshRef = useRef(() => {});\n\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\n    const recaptcha = useRecaptcha(setCaptchaLoading);\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\n\n    switch (captchaType) {\n        case \"normal\":\n            return { ...normal, captchaRefreshRef, captchaLoading };\n        case \"recaptcha\":\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\n        case \"tcaptcha\":\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\n        default:\n            return { ...normal, captchaRefreshRef, captchaLoading };\n    }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport {\n    applyThemes,\n    setSessionStatus,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const { t } = useTranslation();\n\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled\n    );\n    const title = useSelector((state) => state.siteConfig.title);\n    const authn = useSelector((state) => state.siteConfig.authn);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\n        dispatch,\n    ]);\n    const SetSessionStatus = useCallback(\n        (status) => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n    }, [location]);\n\n    const afterLogin = (data) => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", t(\"login.success\"), \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = (e) => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.browserNotSupport\"),\n                \"warning\"\n            );\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then((response) => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function (listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey,\n                });\n            })\n            .then((assertion) => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && loginCaptcha) {\n            validate(() => login(e), setLoading);\n            return;\n        }\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const twoFALogin = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode,\n        })\n            .then((response) => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.title\", { title })}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        {t(\"login.email\")}\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"password\">\n                                        {t(\"login.password\")}\n                                    </InputLabel>\n                                    <Input\n                                        name=\"password\"\n                                        onChange={(e) => setPwd(e.target.value)}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && <CaptchaRender />}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={\n                                        loading ||\n                                        (loginCaptcha ? captchaLoading : false)\n                                    }\n                                    className={classes.submit}\n                                >\n                                    {t(\"login.signIn\")}\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        {t(\"login.email\")}\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    {t(\"login.continue\")}\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link component={RouterLink} to={\"/forget\"}>\n                                    {t(\"login.forgetPassword\")}\n                                </Link>\n                            </div>\n                            <div>\n                                {registerEnabled && (\n                                    <Link component={RouterLink} to={\"/signup\"}>\n                                        {t(\"login.signUpAccount\")}\n                                    </Link>\n                                )}\n                            </div>\n                        </div>\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        {t(\"login.useFIDO2\")}\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        {t(\"login.usePassword\")}\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {t(\"login.2FA\")}\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"code\">\n                                {t(\"login.input2FACode\")}\n                            </InputLabel>\n                            <Input\n                                id=\"code\"\n                                type=\"number\"\n                                name=\"code\"\n                                onChange={(event) =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            {t(\"login.continue\")}\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import Highlighter from \"react-highlight-words\";\nimport { trimPrefix } from \"../Uploader/core/utils\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    highlight: {\n        backgroundColor: theme.palette.warning.light,\n    },\n}));\n\nexport default function FileName({ name }) {\n    const classes = useStyles();\n    const search = useSelector((state) => state.explorer.search);\n    if (!search) {\n        return name;\n    }\n\n    return (\n        <Highlighter\n            highlightClassName={classes.highlight}\n            searchWords={trimPrefix(search.keywords, \"keywords/\").split(\" \")}\n            autoEscape={true}\n            textToHighlight={name}\n        />\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { Folder } from \"@material-ui/icons\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected,\n                    },\n                    classes.button\n                )}\n            >\n                <div\n                    onClick={this.props.onIconClick}\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected,\n                    })}\n                >\n                    {!isSelected && (\n                        <>\n                            {this.props.isFolder && <Folder />}\n                            {!this.props.isFolder && (\n                                <TypeIcon fileName={this.props.file.name} />\n                            )}\n                        </>\n                    )}\n                    {isSelected && (\n                        <Grow in={isSelected}>\n                            <CheckCircleRoundedIcon\n                                className={classes.checkIcon}\n                            />\n                        </Grow>\n                    )}\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                        variant=\"body2\"\n                    >\n                        <FileName name={this.props.file.name} />\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    container: {},\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"6px 6px 0 0\",\n        backgroundColor: theme.palette.background.default,\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"5px 5px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\",\n    },\n    iconBig: {\n        fontSize: 50,\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    noDrag: {\n        userDrag: \"none\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        shareInfo: state.viewUpdate.shareInfo,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false,\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false,\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected,\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.pic !== \"\" &&\n                        !this.state.showPicIcon &&\n                        this.props.file.pic !== \" \" &&\n                        this.props.file.pic !== \"null,null\" && (\n                            <div className={classes.preview}>\n                                <LazyLoadImage\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: this.state.loading,\n                                            [classes.picPreview]: !this.state\n                                                .loading,\n                                        },\n                                        classes.noDrag\n                                    )}\n                                    src={\n                                        baseURL +\n                                        (isSharePage && this.props.shareInfo\n                                            ? \"/share/thumb/\" +\n                                              this.props.shareInfo.key +\n                                              \"/\" +\n                                              this.props.file.id +\n                                              \"?path=\" +\n                                              encodeURIComponent(\n                                                  this.props.file.path\n                                              )\n                                            : \"/file/thumb/\" +\n                                              this.props.file.id)\n                                    }\n                                    afterLoad={() =>\n                                        this.setState({ loading: false })\n                                    }\n                                    beforeLoad={() =>\n                                        this.setState({ loading: true })\n                                    }\n                                    onError={() =>\n                                        this.setState({ showPicIcon: true })\n                                    }\n                                />\n                                <ContentLoader\n                                    height={150}\n                                    width={170}\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: !this.state.loading,\n                                        },\n                                        classes.loadingAnimation\n                                    )}\n                                >\n                                    <rect\n                                        x=\"0\"\n                                        y=\"0\"\n                                        width=\"100%\"\n                                        height=\"150\"\n                                    />\n                                </ContentLoader>\n                            </div>\n                        )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && <Divider />}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                onClick={this.props.onIconClick}\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected,\n                                })}\n                            >\n                                {!isSelected && (\n                                    <TypeIcon fileName={this.props.file.name} />\n                                )}\n                                {isSelected && (\n                                    <Grow in={isSelected}>\n                                        <CheckCircleRoundedIcon\n                                            className={classes.checkIcon}\n                                        />\n                                    </Grow>\n                                )}\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]: !isSelected,\n                                    [classes.shareFix]: this.props.share,\n                                })}\n                            >\n                                <FileName name={this.props.file.name} />\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    makeStyles,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function Folder({ folder, isActive, onIconClick }) {\n    const selected = useSelector((state) => state.explorer.selected);\n    const classes = useStyles();\n    const isMobile = statusHelper.isMobile();\n    const isSelected =\n        selected.findIndex((value) => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive,\n                },\n                classes.button\n            )}\n        >\n            <div\n                onClick={onIconClick}\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected,\n                })}\n            >\n                {!isSelected && <FolderIcon />}\n                {isSelected && (\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\n                )}\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected,\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Folder from \"../Folder\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\",\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\",\n    },\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    if (object.type === \"dir\") {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} isFolder />\n            </div>\n        );\n    }\n    if (object.type === \"file\" && viewMethod === \"icon\") {\n        return (\n            <div className={classes.dragging}>\n                <FileIcon file={object} />\n            </div>\n        );\n    }\n    if (\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\n        viewMethod === \"list\"\n    ) {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} />\n            </div>\n        );\n    }\n};\n\nconst Preview = (props) => {\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`,\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React, { useMemo } from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nimport { useSelector } from \"react-redux\";\n\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n};\n\nfunction getItemStyles(\n    initialOffset,\n    currentOffset,\n    pointerOffset,\n    viewMethod\n) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\",\n        };\n    }\n    let { x, y } = currentOffset;\n    if (viewMethod === \"list\") {\n        x += pointerOffset.x - initialOffset.x;\n        y += pointerOffset.y - initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        opacity: 0.5,\n        transform,\n        WebkitTransform: transform,\n    };\n}\nconst CustomDragLayer = (props) => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset,\n        pointerOffset,\n    } = useDragLayer((monitor) => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        pointerOffset: monitor.getInitialClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const image = useMemo(() => {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }, [itemType, item]);\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    pointerOffset,\n                    viewMethod\n                )}\n            >\n                {image}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { FolderUpload, MagnetOn, FilePlus } from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    batchGetSource,\n    openPreview,\n    setSelectedTarget,\n    startBatchDownload,\n    startDownload,\n    toggleObjectInfoSidebar,\n} from \"../../redux/explorer/action\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCompressDialog,\n    openCopyDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    openTorrentDownloadDialog,\n    refreshFileList,\n    setNavigatorLoadingStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport {\n    openFileSelector,\n    openFolderSelector,\n} from \"../../redux/viewUpdate/action\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = () => ({\n    propover: {},\n    divider: {\n        marginTop: 4,\n        marginBottom: 4,\n    },\n});\n\nconst StyledListItemIcon = withStyles({\n    root: {\n        minWidth: 38,\n    },\n})(ListItemIcon);\n\nconst mapStateToProps = (state) => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        withSourceEnabled: state.explorer.selectProps.withSourceEnabled,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownloadDialog());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        openPreview: (share) => {\n            dispatch(openPreview(share));\n        },\n        toggleObjectInfoSidebar: (open) => {\n            dispatch(toggleObjectInfoSidebar(open));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        openFileSelector: () => {\n            dispatch(openFileSelector());\n        },\n        openFolderSelector: () => {\n            dispatch(openFolderSelector());\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n        batchGetSource: () => {\n            dispatch(batchGetSource());\n        },\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = (e) => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.startBatchDownload(this.props.share);\n    };\n\n    openDownload = () => {\n        this.props.startDownload(this.props.share, this.props.selected[0]);\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            pathJoin([this.props.path, this.props.selected[0].name])\n        );\n    };\n\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\n    renderMenuItems = (items) => {\n        const res = [];\n        let key = 0;\n\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\n            let visibleCount = 0;\n            items[position].forEach((item) => {\n                if (item.condition) {\n                    res.push(\n                        <MenuItem dense key={key} onClick={item.onClick}>\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <Typography variant=\"inherit\">\n                                {item.text}\n                            </Typography>\n                        </MenuItem>\n                    );\n                    key++;\n                    visibleCount++;\n                }\n            });\n            if (visibleCount > 0 && position != \"bottom\") {\n                res.push(\n                    <Divider key={key} className={this.props.classes.divider} />\n                );\n                key++;\n            }\n        });\n\n        return res;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const emptyMenuList = {\n            top: [\n                {\n                    condition: true,\n                    onClick: () => {\n                        this.props.refreshFileList();\n                        this.props.changeContextMenu(\n                            this.props.menuType,\n                            false\n                        );\n                    },\n                    icon: <RefreshIcon />,\n                    text: \"刷新\",\n                },\n            ],\n            center: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openFileSelector(),\n                    icon: <UploadIcon />,\n                    text: \"上传文件\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openFolderSelector(),\n                    icon: <FolderUpload />,\n                    text: \"上传目录\",\n                },\n                {\n                    condition: user.group.allowRemoteDownload,\n                    onClick: () => this.props.openRemoteDownloadDialog(),\n                    icon: <DownloadIcon />,\n                    text: \"离线下载\",\n                },\n            ],\n            bottom: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFolderDialog(),\n                    icon: <NewFolderIcon />,\n                    text: \"创建文件夹\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFileDialog(),\n                    icon: <FilePlus />,\n                    text: \"创建文件\",\n                },\n            ],\n        };\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                dense\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false\n                                    );\n                                }}\n                            >\n                                <StyledListItemIcon>\n                                    <RefreshIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.refresh\")}\n                                </Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFileSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <UploadIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.uploadFiles\")}\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFolderSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <FolderUpload />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.uploadFolder\")}\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.newRemoteDownloads\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <NewFolderIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.newFolder\")}\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <FilePlus />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.newFile\")}\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <div>\n                                    <MenuItem dense onClick={this.enterFolder}>\n                                        <StyledListItemIcon>\n                                            <OpenFolderIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.enter\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openPreview()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <OpenIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.open\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.openDownload(this.props.share)\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DownloadIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.download\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple ||\n                                this.props.withFolder) && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.openArchiveDownload()}\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.batchDownload\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {isHomePage &&\n                                user.group.sourceBatch > 0 &&\n                                this.props.withSourceEnabled && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.batchGetSource()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <LinkIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {this.props.isMultiple ||\n                                            (this.props.withFolder &&\n                                                !this.props.withFile)\n                                                ? t(\n                                                      \"fileManager.getSourceLinkInBatch\"\n                                                  )\n                                                : t(\n                                                      \"fileManager.getSourceLink\"\n                                                  )}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <MagnetOn />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\n                                                \"fileManager.createRemoteDownloadForTorrent\"\n                                            )}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <Unarchive />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.decompress\")}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <Archive />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.compress\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <StyledListItemIcon>\n                                        <ShareIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.createShareLink\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.toggleObjectInfoSidebar(true)\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <InfoOutlined />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.viewDetails\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <Divider className={classes.divider} />\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <RenameIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.rename\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {!this.props.search && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <FileCopyIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.copy\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {!this.props.search && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <MoveIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.move\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        dense\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DeleteIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.delete\")}\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired,\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(ContextMenuCompoment))));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport {\n    fade,\n    TableCell,\n    TableRow,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport pathHelper from \"../../utils/page\";\nimport statusHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary,\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\",\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    tableRow: {\n        padding: \"10px 16px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    active: {\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <TableRow\n                ref={this.props.pref}\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: this.props.isActive,\n                })}\n            >\n                <TableCell\n                    ref={this.props.dref}\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        <div\n                            onClick={\n                                this.props.file.type !== \"up\"\n                                    ? this.props.onIconClick\n                                    : null\n                            }\n                        >\n                            {!isSelected && icon}\n                            {isSelected && (\n                                <Grow in={isSelected}>\n                                    <CheckCircleRoundedIcon\n                                        className={classNames(\n                                            classes.checkIcon,\n                                            classes.icon\n                                        )}\n                                    />\n                                </Grow>\n                            )}\n                        </div>\n                        <FileName name={this.props.file.name} />\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {formatLocalTime(this.props.file.date)}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nimport classNames from \"classnames\";\nimport TableItem from \"../TableRow\";\nexport default function FolderDropWarpper({\n    isListView,\n    folder,\n    onIconClick,\n    contextMenu,\n    handleClick,\n    handleDoubleClick,\n    className,\n    pref,\n}) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n    const isActive = canDrop && isOver;\n    if (!isListView) {\n        return (\n            <div ref={drop}>\n                <Folder\n                    folder={folder}\n                    onIconClick={onIconClick}\n                    isActive={isActive}\n                />\n            </div>\n        );\n    }\n    return (\n        <TableItem\n            pref={pref}\n            dref={drop}\n            className={className}\n            onIconClick={onIconClick}\n            contextMenu={contextMenu}\n            handleClick={handleClick}\n            handleDoubleClick={handleDoubleClick}\n            file={folder}\n            isActive={isActive}\n        />\n    );\n}\n","import { useRef } from \"react\";\nimport { throttle } from \"lodash\";\n\nconst useDragScrolling = () => {\n    const isScrolling = useRef(false);\n    const target = document.querySelector(\"#explorer-container\");\n\n    const goDown = () => {\n        target.scrollTop += 10;\n\n        const { offsetHeight, scrollTop, scrollHeight } = target;\n        const isScrollEnd = offsetHeight + scrollTop >= scrollHeight;\n\n        if (isScrolling.current && !isScrollEnd) {\n            window.requestAnimationFrame(goDown);\n        }\n    };\n\n    const goUp = () => {\n        target.scrollTop -= 10;\n\n        if (isScrolling.current && target.scrollTop > 0) {\n            window.requestAnimationFrame(goUp);\n        }\n    };\n\n    const onDragOver = (event) => {\n        const isMouseOnTop = event.clientY < 100;\n        const isMouseOnDown = window.innerHeight - event.clientY < 100;\n\n        if (!isScrolling.current && (isMouseOnTop || isMouseOnDown)) {\n            isScrolling.current = true;\n\n            if (isMouseOnTop) {\n                window.requestAnimationFrame(goUp);\n            }\n\n            if (isMouseOnDown) {\n                window.requestAnimationFrame(goDown);\n            }\n        } else if (!isMouseOnTop && !isMouseOnDown) {\n            isScrolling.current = false;\n        }\n    };\n\n    const throttleOnDragOver = throttle(onDragOver, 300);\n\n    const addEventListenerForWindow = () => {\n        window.addEventListener(\"dragover\", throttleOnDragOver, false);\n    };\n\n    const removeEventListenerForWindow = () => {\n        window.removeEventListener(\"dragover\", throttleOnDragOver, false);\n        isScrolling.current = false;\n    };\n\n    return {\n        addEventListenerForWindow,\n        removeEventListenerForWindow,\n    };\n};\n\nexport default useDragScrolling;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useLocation } from \"react-router-dom\";\nimport { pathBack } from \"../../utils\";\nimport {\n    changeContextMenu,\n    dragAndDrop,\n    navigateTo,\n    openLoadingDialog,\n    openPreview,\n    selectFile,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport useDragScrolling from \"./DnD/Scrolling\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\",\n    },\n    fixFlex: {\n        minWidth: 0,\n    },\n    dragging: {\n        opacity: 0.4,\n    },\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector((state) => state.navigator.path);\n    const shareInfo = useSelector((state) => state.viewUpdate.shareInfo);\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector((state) => state.navigator.path);\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        (text) => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n    const OpenPreview = useCallback((share) => dispatch(openPreview(share)), [\n        dispatch,\n    ]);\n    const StartDownload = useCallback(\n        (share, file) => dispatch(StartDownload(share, file)),\n        [dispatch]\n    );\n\n    const classes = useStyles();\n\n    const contextMenu = (e) => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex((value) => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const SelectFile = (e) => {\n        dispatch(selectFile(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n    const handleClick = (e) => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n            return;\n        }\n\n        SelectFile(e);\n        if (\n            props.file.type === \"dir\" &&\n            !e.ctrlKey &&\n            !e.metaKey &&\n            !e.shiftKey\n        ) {\n            enterFolder();\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n\n        OpenPreview(shareInfo);\n    };\n\n    const handleIconClick = (e) => {\n        e.stopPropagation();\n        if (!e.shiftKey) {\n            e.ctrlKey = true;\n        }\n        SelectFile(e);\n        return false;\n    };\n\n    const {\n        addEventListenerForWindow,\n        removeEventListenerForWindow,\n    } = useDragScrolling();\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod,\n        },\n        begin: () => {\n            addEventListenerForWindow();\n        },\n        end: (item, monitor) => {\n            removeEventListenerForWindow();\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <>\n                {props.file.type === \"dir\" && (\n                    <DropWarpper\n                        isListView={true}\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type !== \"dir\" && (\n                    <TableItem\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        file={props.file}\n                    />\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging,\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper\n                        isListView={false}\n                        onIconClick={handleIconClick}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon\n                        onIconClick={handleIconClick}\n                        ref={drag}\n                        file={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon\n                        onIconClick={handleIconClick}\n                        file={props.file}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport explorer, {\n    changeContextMenu,\n    openRemoveDialog,\n    setSelectedTarget,\n} from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { usePagination } from \"../../hooks/pagination\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\",\n    },\n    root: {\n        padding: \"10px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 113px)\",\n        },\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 113px)\",\n        },\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\",\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\",\n    },\n    errorBox: {\n        padding: theme.spacing(4),\n    },\n    errorMsg: {\n        marginTop: \"10px\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    flexFix: {\n        minWidth: 0,\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    gridContainer: {\n        [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns:\n                \"repeat(auto-fill,minmax(180px,1fr))!important\",\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            gridTemplateColumns:\n                \"repeat(auto-fill,minmax(220px,1fr))!important\",\n        },\n        display: \"grid!important\",\n    },\n    gridItem: {\n        flex: \"1 1 220px!important\",\n    },\n}));\n\nconst keyMap = {\n    DELETE_FILE: \"del\",\n    SELECT_ALL_SHOWED: `${isMac() ? \"command\" : \"ctrl\"}+a`,\n    SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+shift+a`,\n    DESELECT_ALL: \"esc\",\n};\n\nexport default function Explorer({ share }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const selected = useSelector((state) => state.explorer.selected);\n    const search = useSelector((state) => state.explorer.search);\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\n    const path = useSelector((state) => state.navigator.path);\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\n    const navigatorErrorMsg = useSelector(\n        (state) => state.viewUpdate.navigatorErrorMsg\n    );\n    const navigatorError = useSelector(\n        (state) => state.viewUpdate.navigatorError\n    );\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n\n    const OpenRemoveDialog = useCallback(() => dispatch(openRemoveDialog()), [\n        dispatch,\n    ]);\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n    const ChangeContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(explorer.actions.changeSortMethod(method)),\n        [dispatch]\n    );\n    const SelectAll = useCallback(\n        () => dispatch(explorer.actions.selectAll()),\n        [dispatch]\n    );\n\n    const { dirList, fileList, startIndex } = usePagination();\n\n    const handlers = {\n        DELETE_FILE: () => {\n            if (selected.length > 0 && !share) {\n                OpenRemoveDialog();\n            }\n        },\n        SELECT_ALL_SHOWED: (e) => {\n            e.preventDefault();\n            if (selected.length >= dirList.length + fileList.length) {\n                SetSelectedTarget([]);\n            } else {\n                SetSelectedTarget([...dirList, ...fileList]);\n            }\n        },\n        SELECT_ALL: (e) => {\n            e.preventDefault();\n            SelectAll();\n        },\n        DESELECT_ALL: (e) => {\n            e.preventDefault();\n            SetSelectedTarget([]);\n        },\n    };\n\n    useEffect(\n        () =>\n            configure({\n                ignoreTags: [\"input\", \"select\", \"textarea\"],\n            }),\n        []\n    );\n\n    const contextMenu = (e) => {\n        e.preventDefault();\n        if (!search && !pathHelper.isSharePage(location.pathname)) {\n            if (!loading) {\n                ChangeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    const ClickAway = (e) => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            SetSelectedTarget([]);\n        }\n    };\n\n    const classes = useStyles();\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const showView =\n        !loading && (dirList.length !== 0 || fileList.length !== 0);\n\n    const listView = useMemo(\n        () => (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"namePos\" ||\n                                    sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    sortMethod === \"namePos\" ? \"asc\" : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\"\n                                    );\n                                }}\n                            >\n                                {t(\"name\")}\n                                {sortMethod === \"namePos\" ||\n                                sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"sizePos\" ||\n                                    sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    sortMethod === \"sizePos\" ? \"asc\" : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\"\n                                    );\n                                }}\n                            >\n                                {t(\"size\")}\n                                {sortMethod === \"sizePos\" ||\n                                sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"modifyTimePos\" ||\n                                    sortMethod === \"modifyTimeRev\"\n                                }\n                                direction={\n                                    sortMethod === \"modifyTimePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"modifyTimePos\"\n                                            ? \"modifyTimeRev\"\n                                            : \"modifyTimePos\"\n                                    );\n                                }}\n                            >\n                                {t(\"lastModified\")}\n                                {sortMethod === \"modifyTimePos\" ||\n                                sortMethod === \"modifyTimeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: t(\"backToParentFolder\"),\n                            }}\n                        />\n                    )}\n                    {dirList.map((value, index) => (\n                        <ObjectIcon\n                            key={value.id}\n                            file={value}\n                            index={startIndex + index}\n                        />\n                    ))}\n                    {fileList.map((value, index) => (\n                        <ObjectIcon\n                            key={value.id}\n                            file={value}\n                            index={startIndex + dirList.length + index}\n                        />\n                    ))}\n                </TableBody>\n            </Table>\n        ),\n        [dirList, fileList, path, sortMethod, ChangeSortMethod, classes]\n    );\n\n    const normalView = useMemo(\n        () => (\n            <div className={classes.flexFix}>\n                {dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            {t(\"folders\")}\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    className={classes.gridItem}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={startIndex + index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            {t(\"files\")}\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {fileList.map((value, index) => (\n                                <Grid\n                                    className={classes.gridItem}\n                                    key={value.id}\n                                    item\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={\n                                            startIndex + dirList.length + index\n                                        }\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        ),\n        [dirList, fileList, classes]\n    );\n\n    const view = viewMethod === \"list\" ? listView : normalView;\n\n    return (\n        <div\n            onContextMenu={contextMenu}\n            onClick={ClickAway}\n            className={classNames(\n                {\n                    [classes.root]: viewMethod !== \"list\",\n                    [classes.rootTable]: viewMethod === \"list\",\n                    [classes.rootShare]: share,\n                },\n                classes.button\n            )}\n        >\n            <GlobalHotKeys handlers={handlers} allowChanges keyMap={keyMap} />\n            <ContextMenu share={share} />\n            <ImgPreivew />\n            {navigatorError && (\n                <Paper elevation={1} className={classes.errorBox}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        {t(\"listError\")}\n                    </Typography>\n                    <Typography\n                        color={\"textSecondary\"}\n                        className={classes.errorMsg}\n                    >\n                        {navigatorErrorMsg.message}\n                    </Typography>\n                </Paper>\n            )}\n\n            {loading && !navigatorError && (\n                <div className={classes.loading}>\n                    <CircularProgress />\n                </div>\n            )}\n\n            {!search &&\n                isHomePage &&\n                dirList.length === 0 &&\n                fileList.length === 0 &&\n                !loading &&\n                !navigatorError && (\n                    <Nothing\n                        primary={t(\"dropFileHere\")}\n                        secondary={t(\"orClickUploadButton\")}\n                    />\n                )}\n            {((search &&\n                dirList.length === 0 &&\n                fileList.length === 0 &&\n                !loading &&\n                !navigatorError) ||\n                (dirList.length === 0 &&\n                    fileList.length === 0 &&\n                    !loading &&\n                    !navigatorError &&\n                    !isHomePage)) && <Nothing primary={t(\"nothingFound\")} />}\n            {showView && view}\n        </div>\n    );\n}\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst paginate = (array, page_size, page_number) =>\n    page_size === -1\n        ? array\n        : array.slice((page_number - 1) * page_size, page_number * page_size);\n\nexport function usePagination() {\n    const files = useSelector((state) => state.explorer.fileList);\n    const folders = useSelector((state) => state.explorer.dirList);\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\n\n    const { dirList, fileList, startIndex } = useMemo(() => {\n        const all = paginate(\n            [...folders, ...files],\n            pagination.size,\n            pagination.page\n        );\n        const dirList = [];\n        const fileList = [];\n        all.forEach((v) =>\n            v.type === \"dir\" ? dirList.push(v) : fileList.push(v)\n        );\n        const startIndex = pagination.size * (pagination.page - 1);\n        return { dirList, fileList, startIndex };\n    }, [folders, files, pagination]);\n    return { dirList, fileList, startIndex };\n}\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    button: {\n        textTransform: \"none\",\n    },\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder,\n                    },\n                };\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive,\n                    },\n                    classes.button\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light,\n    },\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder,\n                },\n            });\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive,\n            })}\n            onClick={(e) => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach((element) => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport explorer, {\n    drawerToggleAction,\n    navigateTo,\n    navigateUp,\n    openCompressDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openShareDialog,\n    refreshFileList,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n} from \"../../../redux/explorer\";\nimport { fixUrlHash, setGetParameter } from \"../../../utils/index\";\nimport {\n    Divider,\n    ListItemIcon,\n    Menu,\n    MenuItem,\n    withStyles,\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport SubActions from \"./SubActions\";\nimport { setCurrentPolicy } from \"../../../redux/explorer/action\";\nimport { list } from \"../../../services/navigate\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        search: state.explorer.search,\n        sortMethod: state.viewUpdate.sortMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: (list) => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: (target) => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        setCurrentPolicy: (policy) => {\n            dispatch(setCurrentPolicy(policy));\n        },\n    };\n};\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst styles = (theme) => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\",\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\",\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\",\n    },\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\",\n    },\n});\n\nclass NavigatorComponent extends Component {\n    search = undefined;\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\"),\n        });\n        const newPath = path !== null ? path : this.props.path;\n        list(\n            newPath,\n            this.props.share,\n            this.search ? this.search.keywords : \"\",\n            this.search ? this.search.searchPath : \"\"\n        )\n            .then((response) => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                if (!this.search) {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n                if (response.data.policy) {\n                    this.props.setCurrentPolicy({\n                        id: response.data.policy.id,\n                        name: response.data.policy.name,\n                        type: response.data.policy.type,\n                        maxSize: response.data.policy.max_size,\n                        allowedSuffix: response.data.policy.file_type,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = (path) => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.search !== nextProps.search) {\n            this.search = nextProps.search;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = (force) => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = (e) => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    performAction = (e) => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\n            },\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    {t(\"fileManager.refresh\")}\n                </MenuItem>\n                {!this.props.search && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            {t(\"fileManager.share\")}\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                {t(\"fileManager.compress\")}\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            {t(\"fileManager.newFolder\")}\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            {t(\"fileManager.newFile\")}\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare,\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={(e) => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title={t(\"fileManager.showFullPath\")}\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={(e) =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={(e) =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        <SubActions isSmall />\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(NavigatorComponent))));\n\nexport default Navigator;\n","import React from \"react\";\nimport { BulletList } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"100%\",\n        // padding: 40,\n        // [theme.breakpoints.down(\"md\")]: {\n        //     width: \"100%\",\n        //     padding: 10\n        // }\n    },\n}));\n\nconst MyLoader = (props) => (\n    <BulletList\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction ListLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default ListLoading;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Clear, Folder } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { setSideBar } from \"../../../redux/explorer/action\";\nimport TypeIcon from \"../TypeIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../../middleware/Api\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TimeAgo from \"timeago-react\";\nimport ListLoading from \"../../Placeholder/ListLoading\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { navigateTo, toggleSnackbar } from \"../../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxShadow:\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    header: {\n        display: \"flex\",\n        padding: theme.spacing(3),\n        placeContent: \"space-between\",\n    },\n    fileIcon: { width: 33, height: 33 },\n    fileIconSVG: { fontSize: 20 },\n    folderIcon: {\n        color: theme.palette.text.secondary,\n        width: 33,\n        height: 33,\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        wordBreak: \"break-all\",\n        flexGrow: 2,\n    },\n    closeIcon: {\n        placeSelf: \"flex-start\",\n        marginTop: 2,\n    },\n    propsContainer: {\n        padding: theme.spacing(3),\n    },\n    propsLabel: {\n        color: theme.palette.text.secondary,\n        padding: theme.spacing(1),\n    },\n    propsTime: {\n        color: theme.palette.text.disabled,\n        padding: theme.spacing(1),\n    },\n    propsValue: {\n        padding: theme.spacing(1),\n        wordBreak: \"break-all\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SideDrawer() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\n    const selected = useSelector((state) => state.explorer.selected);\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const search = useSelector((state) => state.explorer.search);\n    const [target, setTarget] = useState(null);\n    const [details, setDetails] = useState(null);\n    const loadProps = (object) => {\n        API.get(\n            \"/object/property/\" +\n                object.id +\n                \"?trace_root=\" +\n                (search ? \"true\" : \"false\") +\n                \"&is_folder=\" +\n                (object.type === \"dir\").toString()\n        )\n            .then((response) => {\n                setDetails(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        setDetails(null);\n        if (sideBarOpen) {\n            if (selected.length !== 1) {\n                SetSideBar(false);\n            } else {\n                setTarget(selected[0]);\n                loadProps(selected[0]);\n            }\n        }\n    }, [selected, sideBarOpen]);\n\n    const classes = useStyles();\n    const propsItem = [\n        {\n            label: t(\"fileManager.size\"),\n            value: (d, target) =>\n                sizeToString(d.size) +\n                t(\"fileManager.bytes\", { bytes: d.size.toLocaleString() }),\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.storagePolicy\"),\n            value: (d, target) => d.policy,\n            show: (d) => d.type === \"file\",\n        },\n        {\n            label: t(\"fileManager.childFolders\"),\n            value: (d, target) =>\n                t(\"fileManager.childCount\", {\n                    num: d.child_folder_num.toLocaleString(),\n                }),\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: t(\"fileManager.childFiles\"),\n            value: (d, target) =>\n                t(\"fileManager.childCount\", {\n                    num: d.child_file_num.toLocaleString(),\n                }),\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: t(\"fileManager.parentFolder\"),\n            // eslint-disable-next-line react/display-name\n            value: (d, target) => {\n                const path = d.path === \"\" ? target.path : d.path;\n                const name = filename(path);\n                return (\n                    <Tooltip title={path}>\n                        <Link\n                            href={\"javascript:void\"}\n                            onClick={() => NavigateTo(path)}\n                        >\n                            {name === \"\" ? t(\"fileManager.rootFolder\") : name}\n                        </Link>\n                    </Tooltip>\n                );\n            },\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.modifiedAt\"),\n            value: (d, target) => formatLocalTime(d.updated_at),\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.createdAt\"),\n            value: (d) => formatLocalTime(d.created_at),\n            show: (d) => true,\n        },\n    ];\n    const content = (\n        <Grid container className={classes.propsContainer}>\n            {!details && <ListLoading />}\n            {details && (\n                <>\n                    {propsItem.map((item) => {\n                        if (item.show(target)) {\n                            return (\n                                <>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.propsLabel}\n                                    >\n                                        {item.label}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.propsValue}\n                                    >\n                                        {item.value(details, target)}\n                                    </Grid>\n                                </>\n                            );\n                        }\n                    })}\n                    {target.type === \"dir\" && (\n                        <Grid item xs={12} className={classes.propsTime}>\n                            <Trans\n                                i18nKey=\"fileManager.statisticAt\"\n                                components={[\n                                    <span key={0} />,\n                                    <TimeAgo\n                                        key={1}\n                                        datetime={details.query_date}\n                                        locale={t(\"timeAgoLocaleCode\", {\n                                            ns: \"common\",\n                                        })}\n                                    />,\n                                    <span key={2} />,\n                                ]}\n                            />\n                        </Grid>\n                    )}\n                </>\n            )}\n        </Grid>\n    );\n    return (\n        <>\n            <Hidden smUp>\n                <Dialog\n                    fullScreen\n                    open={sideBarOpen}\n                    TransitionComponent={Transition}\n                >\n                    {target && (\n                        <>\n                            <AppBar className={classes.appBar}>\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => SetSideBar(false)}\n                                        aria-label=\"close\"\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        {target.name}\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            {content}\n                        </>\n                    )}\n                </Dialog>\n            </Hidden>\n            <Hidden xsDown>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    open={sideBarOpen}\n                    anchor=\"right\"\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        {target && (\n                            <>\n                                <div className={classes.header}>\n                                    {target.type === \"dir\" && (\n                                        <Folder\n                                            className={classes.folderIcon}\n                                        />\n                                    )}\n                                    {target.type !== \"dir\" && (\n                                        <TypeIcon\n                                            isUpload\n                                            className={classes.fileIcon}\n                                            iconClassName={classes.fileIconSVG}\n                                            fileName={target.name}\n                                        />\n                                    )}\n                                    <div className={classes.fileName}>\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            {target.name}\n                                        </Typography>\n                                    </div>\n                                    <IconButton\n                                        onClick={() => SetSideBar(false)}\n                                        className={classes.closeIcon}\n                                        aria-label=\"close\"\n                                        size={\"small\"}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                </div>\n                            </>\n                        )}\n                        <Divider />\n                        {content}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </>\n    );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { PaginationItem } from \"@material-ui/lab\";\n\nexport default function CustomPaginationItem(props) {\n    const inputRef = useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (\n            isActive &&\n            props.onClick &&\n            props.type !== \"start-ellipsis\" &&\n            props.type !== \"end-ellipsis\"\n        ) {\n            console.log(\"ss\");\n            props.onClick();\n        }\n    }, [isActive, inputRef]);\n\n    if (\n        props.isMobile &&\n        (props.type === \"start-ellipsis\" ||\n            props.type === \"end-ellipsis\" ||\n            props.type === \"page\")\n    ) {\n        if (props.selected) {\n            return (\n                <div>\n                    {props.page} / {props.count}\n                </div>\n            );\n        }\n        return <></>;\n    }\n    return (\n        <div ref={inputRef}>\n            <PaginationItem ref={drop} {...props} />\n        </div>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Pagination } from \"@material-ui/lab\";\nimport CustomPaginationItem from \"./PaginationItem\";\nimport { setPagination } from \"../../redux/viewUpdate/action\";\nimport AutoHidden from \"../Dial/AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"fixed\",\n        bottom: 23,\n        /* left: 8px; */\n        background: theme.palette.background.paper,\n        borderRadius: 24,\n        boxShadow:\n            \" 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%)\",\n        padding: \"8px 4px 8px 4px\",\n        marginLeft: 20,\n    },\n    placeholder: {\n        marginTop: 80,\n    },\n}));\n\nexport default function PaginationFooter() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const files = useSelector((state) => state.explorer.fileList);\n    const folders = useSelector((state) => state.explorer.dirList);\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\n    const location = useLocation();\n\n    const SetPagination = useCallback((p) => dispatch(setPagination(p)), [\n        dispatch,\n    ]);\n\n    const handleChange = (event, value) => {\n        SetPagination({ ...pagination, page: value });\n    };\n\n    const count = useMemo(\n        () => Math.ceil((files.length + folders.length) / pagination.size),\n        [files, folders, pagination.size]\n    );\n\n    const isMobile = statusHelper.isMobile();\n    const isSharePage = statusHelper.isSharePage(location.pathname);\n\n    if (count > 1 && !loading) {\n        return (\n            <>\n                {!isMobile && !isSharePage && (\n                    <div className={classes.placeholder} />\n                )}\n                <AutoHidden\n                    enable\n                    element={\n                        isMobile || isSharePage\n                            ? null\n                            : document.querySelector(\"#explorer-container\")\n                    }\n                >\n                    <div className={classes.root}>\n                        <Pagination\n                            renderItem={(item) => (\n                                <CustomPaginationItem\n                                    count={count}\n                                    isMobile={isMobile}\n                                    {...item}\n                                />\n                            )}\n                            color=\"secondary\"\n                            count={count}\n                            page={pagination.page}\n                            onChange={handleChange}\n                        />\n                    </div>\n                </AutoHidden>\n            </>\n        );\n    }\n    return <div></div>;\n}\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\nimport SideDrawer from \"./Sidebar/SideDrawer\";\nimport classNames from \"classnames\";\nimport {\n    closeAllModals,\n    navigateTo,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport PaginationFooter from \"./Pagination\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"calc(100vh - 64px)\",\n        [theme.breakpoints.down(\"xs\")]: {\n            height: \"100%\",\n        },\n    },\n    rootShare: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        minHeight: 500,\n    },\n    explorer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflowY: \"auto\",\n        minHeight: 500,\n    },\n});\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSubTitle: (text) => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                className={classNames({\n                    [classes.rootShare]: this.props.share,\n                    [classes.root]: !this.props.share,\n                })}\n            >\n                <DndProvider backend={HTML5Backend}>\n                    <Modals share={this.props.share} />\n                    <Navigator\n                        isShare={this.props.isShare}\n                        share={this.props.share}\n                    />\n                    <div className={classes.explorer} id={\"explorer-container\"}>\n                        <Explorer share={this.props.share} />\n                        <PaginationFooter />\n                    </div>\n\n                    <DragLayer />\n                </DndProvider>\n                <SideDrawer />\n            </div>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileManager)));\n","import React from \"react\";\nimport {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function SelectMenu({\n    options,\n    anchorEl,\n    handleClose,\n    callback,\n    selected,\n    showIcon = true,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            {options.map((item) => (\n                <>\n                    <MenuItem\n                        style={{ whiteSpace: \"normal\" }}\n                        dense\n                        onClick={() => callback(item)}\n                    >\n                        {showIcon && (\n                            <ListItemIcon className={classes.icon}>\n                                {item.name !== selected ? (\n                                    <Icon />\n                                ) : (\n                                    <CheckIcon />\n                                )}\n                            </ListItemIcon>\n                        )}\n\n                        {item.name}\n                    </MenuItem>\n                </>\n            ))}\n        </Menu>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport { useHistory } from \"react-router-dom\";\nimport { basename, fileNameNoExt, isMobileSafari } from \"../../utils\";\nimport { list } from \"../../services/navigate\";\nimport { getViewerURL } from \"../../redux/explorer/action\";\nimport { subtitleSuffix, videoPreviewSuffix } from \"../../config\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport { Launch, PlaylistPlay, Subtitles } from \"@material-ui/icons\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport SelectMenu from \"./SelectMenu\";\nimport { getDownloadURL } from \"../../services/file\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Artplayer = React.lazy(() =>\n    import(\n        /* webpackChunkName: \"artplayer\" */ \"artplayer/examples/react/Artplayer\"\n    )\n);\n\nconst externalPlayers = [\n    {\n        name: \"PotPlayer\",\n        url: (source, title) => `potplayer://${source}`,\n    },\n    {\n        name: \"VLC\",\n        url: (source, title) => `vlc://${source}`,\n    },\n    {\n        name: \"IINA\",\n        url: (source, title) => `iina://weblink?url=${source}`,\n    },\n    {\n        name: \"nPlayer\",\n        url: (source, title) => `nplayer-${source}`,\n    },\n    {\n        name: \"MXPlayer (Free)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.ad;S.title=${title};end`,\n    },\n    {\n        name: \"MXPlayer (Pro)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.pro;S.title=${title};end`,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: \"4px\",\n        height: 600,\n    },\n    actions: {\n        marginTop: theme.spacing(2),\n    },\n    actionButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const { t } = useTranslation();\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const { title, path } = UseFileSubTitle(query, math, location);\n    const theme = useTheme();\n    const [art, setArt] = useState(null);\n    const history = useHistory();\n    const [files, setFiles] = useState([]);\n    const [subtitles, setSubtitles] = useState([]);\n    const [playlist, setPlaylist] = useState([]);\n    const [subtitleOpen, setSubtitleOpen] = useState(null);\n    const [subtitleSelected, setSubtitleSelected] = useState(\"\");\n    const [playlistOpen, setPlaylistOpen] = useState(null);\n    const [externalPlayerOpen, setExternalPlayerOpen] = useState(null);\n    const isShare = pathHelper.isSharePage(location.pathname);\n\n    useEffect(() => {\n        art &&\n            art.on(\"ready\", () => {\n                art.autoHeight = true;\n            });\n        return () => {\n            if (\n                art !== null &&\n                !isMobileSafari() &&\n                document.pictureInPictureEnabled &&\n                art.playing\n            ) {\n                art.pip = true;\n                art.query(\".art-video\").addEventListener(\n                    \"leavepictureinpicture\",\n                    () => {\n                        art.pause();\n                    },\n                    false\n                );\n            }\n        };\n    }, [art]);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (art !== null) {\n            const newURL = getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\")\n            );\n            if (newURL !== art.url) {\n                if (art.subtitle) {\n                    art.subtitle.show = false;\n                }\n                art.switchUrl(newURL);\n                if (path && path !== \"\") {\n                    list(\n                        basename(path),\n                        isShare ? { key: id } : null,\n                        \"\",\n                        \"\"\n                    ).then((res) => {\n                        setFiles(\n                            res.data.objects.filter((o) => o.type === \"file\")\n                        );\n                        setPlaylist(\n                            res.data.objects.filter(\n                                (o) =>\n                                    o.type === \"file\" &&\n                                    videoPreviewSuffix.indexOf(\n                                        o.name.split(\".\").pop().toLowerCase()\n                                    ) !== -1\n                            )\n                        );\n                    });\n                }\n            }\n        }\n    }, [art, id, location, path]);\n\n    const switchSubtitle = (f) => {\n        if (art !== null) {\n            const fileType = f.name.split(\".\").pop().toLowerCase();\n            art.subtitle.switch(\n                getPreviewURL(\n                    isShare,\n                    id,\n                    f.id,\n                    pathJoin([basename(query.get(\"share_path\")), f.name])\n                ),\n                {\n                    type: fileType,\n                }\n            );\n            art.subtitle.show = true;\n            setSubtitleSelected(f.name);\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"fileManager.subtitleSwitchTo\", {\n                    subtitle: f.name,\n                }),\n                \"info\"\n            );\n        }\n    };\n\n    useEffect(() => {\n        if (files.length > 0) {\n            const options = files.filter((f) => {\n                const fileType = f.name.split(\".\").pop().toLowerCase();\n                if (subtitleSuffix.indexOf(fileType) !== -1) {\n                    if (fileNameNoExt(f.name) === fileNameNoExt(title)) {\n                        switchSubtitle(f);\n                    }\n                    return true;\n                }\n                return false;\n            });\n            setSubtitles(options);\n        }\n    }, [files]);\n\n    const switchVideo = (file) => {\n        if (isShare) {\n            file.key = id;\n        }\n        if (isMobileSafari()) {\n            window.location.href = getViewerURL(\"video\", file, isShare);\n        } else {\n            history.push(getViewerURL(\"video\", file, isShare));\n        }\n    };\n\n    const setSubtitle = (sub) => {\n        setSubtitleOpen(null);\n        switchSubtitle(sub);\n    };\n\n    const startSelectSubTitle = (e) => {\n        if (subtitles.length === 0) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"fileManager.noSubtitleAvailable\"),\n                \"warning\"\n            );\n            return;\n        }\n        setSubtitleOpen(e.currentTarget);\n    };\n\n    const openInExternalPlayer = (player) => {\n        const current = { name: title };\n        current.id = query.get(\"id\");\n        current.path = basename(path);\n        if (isShare) {\n            current.key = id;\n        }\n\n        setExternalPlayerOpen(null);\n        getDownloadURL(current)\n            .then((response) => {\n                window.location.assign(player.url(response.data, title));\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <Suspense fallback={<TextLoading />}>\n                    <Artplayer\n                        option={{\n                            title: title,\n                            theme: theme.palette.secondary.main,\n                            flip: true,\n                            setting: true,\n                            playbackRate: true,\n                            aspectRatio: true,\n                            hotkey: true,\n                            pip: true,\n                            fullscreen: true,\n                            fullscreenWeb: true,\n                            autoHeight: true,\n                            whitelist: [\"*\"],\n                            moreVideoAttr: {\n                                \"webkit-playsinline\": true,\n                                playsInline: true,\n                            },\n                            lang: t(\"artPlayerLocaleCode\", { ns: \"common\" }),\n                        }}\n                        className={classes.player}\n                        getInstance={(a) => setArt(a)}\n                    />\n                </Suspense>\n            </Paper>\n            <div className={classes.actions}>\n                <Button\n                    onClick={startSelectSubTitle}\n                    className={classes.actionButton}\n                    startIcon={<Subtitles />}\n                    variant=\"outlined\"\n                >\n                    {t(\"fileManager.subtitle\")}\n                </Button>\n                {playlist.length >= 2 && (\n                    <Button\n                        onClick={(e) => setPlaylistOpen(e.currentTarget)}\n                        className={classes.actionButton}\n                        startIcon={<PlaylistPlay />}\n                        variant=\"outlined\"\n                    >\n                        {t(\"fileManager.playlist\")}\n                    </Button>\n                )}\n                <Button\n                    onClick={(e) => setExternalPlayerOpen(e.currentTarget)}\n                    className={classes.actionButton}\n                    startIcon={<Launch />}\n                    variant=\"outlined\"\n                >\n                    {t(\"fileManager.openInExternalPlayer\")}\n                </Button>\n            </div>\n            <SelectMenu\n                selected={subtitleSelected}\n                options={subtitles}\n                callback={setSubtitle}\n                anchorEl={subtitleOpen}\n                handleClose={() => setSubtitleOpen(null)}\n            />\n            <SelectMenu\n                selected={title}\n                options={playlist}\n                callback={switchVideo}\n                anchorEl={playlistOpen}\n                handleClose={() => setPlaylistOpen(null)}\n            />\n            <SelectMenu\n                showIcon={false}\n                options={externalPlayers}\n                callback={openInExternalPlayer}\n                anchorEl={externalPlayerOpen}\n                handleClose={() => setExternalPlayerOpen(null)}\n            />\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Avatar,\n    Card,\n    CardHeader,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n    cardAction: {\n        marginTop: 0,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const { t: tGlobal } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then((response) => {\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"listLoadingError\"), \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", t(\"enterKeywords\"), \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = (event) => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        {t(\"searchResult\")}\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                {t(\"createdAtDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                {t(\"createdAtAsc\")}\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                {t(\"downloadsDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                {t(\"downloadsAsc\")}\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                {t(\"viewsDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                {t(\"viewsAsc\")}\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.length === 0 && <Nothing primary={t(\"noRecords\")} />}\n                {shareList.map((value) => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                classes={{\n                                    action: classes.cardAction,\n                                }}\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={tGlobal(\"fileManager.open\")}\n                                    >\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : t(\"sourceNotFound\")\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : t(\"sourceNotFound\")}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        <Trans\n                                            i18nKey=\"share.sharedAt\"\n                                            components={[\n                                                <TimeAgo\n                                                    key={0}\n                                                    datetime={value.create_date}\n                                                    locale={tGlobal(\n                                                        \"timeAgoLocaleCode\",\n                                                        {\n                                                            ns: \"common\",\n                                                        }\n                                                    )}\n                                                />,\n                                            ]}\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\",\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = (pwd) => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = (id) => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter((value) => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1,\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.shareCanceled\"),\n                    \"success\"\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePermission = (id) => {\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\n        })\n            .then((response) => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePreviewOption = (id) => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\n        })\n            .then((response) => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1]\n        )\n            .then((response) => {\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.listLoadingError\"),\n                    \"error\"\n                );\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value,\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = (event) => {\n        this.setState({\n            orderBy: event.target.value,\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = (share) => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            {t(\"share.sharedFiles\")}\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    {t(\"share.createdAtDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    {t(\"share.createdAtAsc\")}\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    {t(\"share.downloadsDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    {t(\"share.downloadsAsc\")}\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    {t(\"share.viewsDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    {t(\"share.viewsAsc\")}\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} className={classes.gird}>\n                    {this.state.shareList.length === 0 && (\n                        <Nothing primary={t(\"share.noRecords\")} />\n                    )}\n                    {this.state.shareList.map((value) => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={6}\n                            md={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : t(\"share.sourceNotFound\")\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : t(\"share.sourceNotFound\")}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {formatLocalTime(value.create_date)}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label={t(\"share.expired\")}\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\",\n                                    }}\n                                >\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={t(\"fileManager.open\")}\n                                    >\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password)\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={t(\n                                                    \"share.changeToPublic\"\n                                                )}\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={t(\"share.viewPassword\")}\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={t(\"share.changeToPrivate\")}\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon\n                                                    fontSize={\"small\"}\n                                                />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? t(\"share.disablePreview\")\n                                                : t(\"share.enablePreview\")\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <ToggleIcon\n                                                on={value.preview}\n                                                onIcon={\n                                                    <EyeIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                                offIcon={\n                                                    <VisibilityOff\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={t(\"share.cancelShare\")}\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> {t(\"share.sharePassword\")} </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(MyShareCompoment))));\n\nexport default MyShare;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    content: {\n        padding: 0,\n    },\n}));\n\nexport default function SelectFileDialog(props) {\n    const { t } = useTranslation();\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = (index) => (event) => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\",\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map((v) => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"download.selectDownloadingFile\")}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                {files.map((v, k) => {\n                    return (\n                        <MenuItem key={k}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    );\n                })}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    scroll: {\n        overflowY: \"auto\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\nexport default function DownloadingCard(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\n    const { t: tGlobal } = useTranslation();\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter((v) => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = (index) => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map((v) => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\",\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\",\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex,\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles,\n                    },\n                });\n                ToggleSnackbar(\"top\", \"right\", t(\"taskFileDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? t(\"unknownTaskName\") : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"taskCanceled\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = (fileIndex) => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"operationSubmitted\"),\n                    \"success\"\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && (\n                        <div className={classes.scroll}>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {activeFiles().map((value) => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                                style={{\n                                                    background:\n                                                        \"linear-gradient(to right, \" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" 0%,\" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" 100%)\",\n                                                }}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"deleteThisFile\"\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                deleteFile(\n                                                                    value.index\n                                                                )\n                                                            }\n                                                            disabled={loading}\n                                                            size={\"small\"}\n                                                        >\n                                                            <HighlightOff />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/home?path=\" + encodeURIComponent(task.dst)\n                                )\n                            }\n                        >\n                            {t(\"openDstFolder\")}\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files,\n                                    ]);\n                                }}\n                            >\n                                {t(\"selectDownloadingFile\")}\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            {t(\"cancelTask\")}\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"updatedAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={task.update}\n                                        locale={tGlobal(\"timeAgoLocaleCode\", {\n                                            ns: \"common\",\n                                        })}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"uploaded\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"uploadSpeed\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"InfoHash\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\",\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={5}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"seederCount\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={5}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"seeding\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? t(\"isSeeding\")\n                                                : t(\"notSeeding\")}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"chunkSize\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"chunkNumbers\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n        textAlign: \"left\",\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    scroll: {\n        overflowY: \"auto\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function FinishedCard(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? t(\"unknownTaskName\") : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter((v) => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = (error) => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return t(\"transferFailed\");\n        }\n    };\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    {t(\"downloadFailed\", {\n                                        msg: props.task.error,\n                                    })}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                {t(\"canceledStatus\")}\n                                {props.task.error !== \"\" && (\n                                    <span>({props.task.error})</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 4 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.main,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"finishedStatus\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 0 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"transferring\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 1 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"transferring\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 2 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    color={\"error\"}\n                                    noWrap\n                                >\n                                    {getTaskError(props.task.task_error)}\n                                </Typography>\n                            )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && (\n                        <div className={classes.scroll}>\n                            <Table>\n                                <TableBody>\n                                    {activeFiles().map((value) => {\n                                        return (\n                                            <TableRow key={value.index}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(props.task.dst)\n                                )\n                            }\n                        >\n                            {t(\"openDstFolder\")}\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            {t(\"deleteRecord\")}\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"createdAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {formatLocalTime(props.task.create)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"updatedAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {formatLocalTime(props.task.update)}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\nimport { openRemoteDownloadDialog } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    actions: {\n        display: \"flex\",\n    },\n    title: {\n        marginTop: \"20px\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n    },\n    margin: {\n        marginTop: theme.spacing(2),\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n    previousDownloading = -1;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true,\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/downloading\")\n            .then((response) => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false,\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 *\n                            response.data.reduce(function (prev, current) {\n                                return prev.interval < current.interval\n                                    ? prev\n                                    : current;\n                            }).interval\n                    );\n                }\n\n                // 下载中条目变更时刷新已完成列表\n                if (response.data.length !== this.previousDownloading) {\n                    this.page = 0;\n                    this.setState({\n                        finishedList: [],\n                        continue: true,\n                    });\n                    this.loadMore();\n                }\n                this.previousDownloading = response.data.length;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then((response) => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data,\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"download.failedToLoad\"),\n                    \"error\"\n                );\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    {t(\"download.active\")}\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.length === 0 && (\n                    <Nothing primary={t(\"download.activeEmpty\")} />\n                )}\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    {t(\"download.finished\")}\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.length === 0 && (\n                        <Nothing primary={t(\"download.finishedEmpty\")} />\n                    )}\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        {t(\"download.loadMore\")}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withTranslation()(DownloadComponent)));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\",\n        },\n\n        marginTop: 30,\n    },\n}));\n\nconst MyLoader = (props) => {\n    return (\n        <Facebook\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n            className={props.className}\n        />\n    );\n};\n\nfunction PageLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n            }}\n        >\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Divider,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\"),\n        };\n    }\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"https://pan_api.114514cn.me/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={t(\"share.privateShareTitle\", {\n                            nick: this.props.share.creator.nick,\n                        })}\n                        subheader={formatLocalTime(\n                            this.props.share.create_date\n                        )}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label={t(\"share.enterPassword\")}\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            {t(\"share.continue\")}\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(LockedFileCompoment))));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24,\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\",\n    },\n    shareDes: {\n        marginTop: 12,\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n}));\n\nexport default function Creator(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return t(\"expireInXDays\", {\n                    num: Math.round(props.share.expire / (24 * 3600)),\n                });\n            }\n\n            return t(\"expireInXHours\", {\n                num: Math.round(props.share.expire / 3600),\n            });\n        }\n        return formatLocalTime(props.share.create_date);\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"https://pan_api.114514cn.me/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <Trans\n                        i18nKey=\"share.createdBy\"\n                        values={{\n                            nick: props.share.creator.nick,\n                        }}\n                        components={[\n                            <Link\n                                key={0}\n                                onClick={() => userProfile()}\n                                href={\"javascript:void(0)\"}\n                                color=\"inherit\"\n                            />,\n                        ]}\n                    />\n                )}\n                {!props.isFolder && (\n                    <Trans\n                        i18nKey=\"share.sharedBy\"\n                        values={{\n                            num: 1,\n                            nick: props.share.creator.nick,\n                        }}\n                        components={[\n                            <Link\n                                key={0}\n                                onClick={() => userProfile()}\n                                href={\"javascript:void(0)\"}\n                                color=\"inherit\"\n                            />,\n                        ]}\n                    />\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {t(\"statistics\", {\n                    views: props.share.views,\n                    downloads: props.share.downloads,\n                    time: getSecondDes(),\n                })}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport { isPreviewable } from \"../../config\";\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { startDownload } from \"../../redux/explorer/action\";\nimport { withTranslation } from \"react-i18next\";\n\nvhCheck();\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n        },\n        justifyContent: \"center\",\n        display: \"flex\",\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\",\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2,\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 12,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000,\n        },\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\",\n    },\n    fileName: {\n        marginLeft: 20,\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\",\n    },\n    downloadButton: {\n        marginLeft: 8,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false,\n    };\n\n    downloaded = false;\n\n    // TODO merge into react thunk\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.pleaseLogin\"),\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"audio\":\n                this.props.setSelectedTarget([\n                    {\n                        key: this.props.share.key,\n                        type: \"share\",\n                    },\n                ]);\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"epub\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/epub?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.cannotShare\"),\n                    \"warning\"\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = (callback) => (event) => {\n        callback(event);\n    };\n\n    download = () => {\n        this.props.startDownload(this.props.share, null);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    {t(\"share.preview\")}\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.download}\n                                disabled={this.state.loading}\n                            >\n                                {t(\"fileManager.download\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(SharedFileCompoment))));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    setShareUserPopover,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { setShareInfo } from \"../../redux/viewUpdate/action\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n    },\n    managerContainer: {\n        overflowY: \"auto\",\n    },\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: (e) => {\n            dispatch(setShareUserPopover(e));\n        },\n        setShareInfo: (s) => {\n            dispatch(setShareInfo(s));\n        },\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        this.props.setShareInfo(this.props.share);\n    }\n\n    componentWillUnmount() {\n        this.props.setShareInfo(null);\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = (e) => {\n        const ignore = e && e.clientY && e.clientY <= 64;\n        if (!pathHelper.isMobile() && !ignore) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map((value) => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\",\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function SharePreload() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(\n                    t(\"privateShareTitle\", { nick: share.creator.nick })\n                );\n                if (password !== \"\") {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"incorrectPassword\"),\n                        \"warning\"\n                    );\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then((response) => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={t(\"shareNotExist\")} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n    },\n\n    container: {\n        border: \"none\",\n        width: \"100%\",\n        height: \"calc(100vh - 64px)\",\n        marginBottom: -10,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [url, setURL] = useState(\"\");\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then((response) => {\n                setURL(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            {url !== \"\" && (\n                <iframe title={\"ms\"} className={classes.container} src={url} />\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Dialog, makeStyles } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1),\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: 250,\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24,\n    },\n    button: {\n        marginTop: 8,\n    },\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const { t } = useTranslation();\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\",\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = (name) => (e) => {\n        setValue({\n            ...value,\n            [name]: e.target.value,\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"navbar.addTagDialog.selectFolder\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label={t(\"setting.annotation\")}\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label={t(\"setting.rootFolder\")}\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                {t(\"navbar.addTagDialog.selectFolder\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    {t(\"ok\", { ns: \"common\" })}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\nimport Link from \"@material-ui/core/Link\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    copy: {\n        marginLeft: 10,\n    },\n}));\n\nexport default function WebDAV() {\n    const { t } = useTranslation();\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const copyToClipboard = (text) => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(text);\n            ToggleSnackbar(\"top\", \"center\", t(\"setting.copied\"), \"success\");\n        } else {\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"setting.pleaseManuallyCopy\"),\n                \"warning\"\n            );\n        }\n    };\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then((response) => {\n                setAccounts(response.data.accounts);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = (id) => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = (account) => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name,\n        })\n            .then((response) => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path,\n                    },\n                    ...accounts,\n                ]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                {t(\"navbar.connect\")}\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label={t(\"setting.webdavAccounts\")} />\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                {t(\"setting.webdavHint\", {\n                                    url: window.location.origin + \"/dav\",\n                                    name: user.user_name,\n                                })}\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>\n                                                {t(\"setting.annotation\")}\n                                            </TableCell>\n                                            <TableCell>\n                                                {t(\"login.password\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.rootFolder\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.createdAt\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.action\")}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Password}\n                                                    <Link\n                                                        className={classes.copy}\n                                                        onClick={() =>\n                                                            copyToClipboard(\n                                                                row.Password\n                                                            )\n                                                        }\n                                                        href={\"javascript:void\"}\n                                                    >\n                                                        {t(\"copy\", {\n                                                            ns: \"common\",\n                                                        })}\n                                                    </Link>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale={t(\n                                                            \"timeAgoLocaleCode\",\n                                                            {\n                                                                ns: \"common\",\n                                                            }\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                {accounts.length === 0 && (\n                                    <Nothing primary={t(\"setting.listEmpty\")} />\n                                )}\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                {t(\"setting.createNewAccount\")}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\",\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    noWrap: {\n        wordBreak: \"keepAll\",\n    },\n    footer: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function Tasks() {\n    const { t } = useTranslation();\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = (page) => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then((response) => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return `${res.msg}: ${res.error}`;\n        } catch (e) {\n            return t(\"uploader.unknownStatus\");\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                {t(\"navbar.taskQueue\")}\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">\n                                {t(\"setting.createdAt\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.taskType\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.taskStatus\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.lastProgress\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">\n                                {t(\"setting.errorDetails\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    {formatLocalTime(row.create_date)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {tasks.length === 0 && (\n                    <Nothing primary={t(\"setting.listEmpty\")} />\n                )}\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    Avatar,\n    Grid,\n    Paper,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tabs,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    userNav: {\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\",\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\",\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\",\n    },\n    th: {\n        minWidth: \"106px\",\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    tableLink: {\n        cursor: \"pointer\",\n    },\n    navigator: {\n        padding: theme.spacing(2),\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\",\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\",\n    },\n    infoContainer: {\n        marginTop: \"30px\",\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0,\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order\n        )\n            .then((response) => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper square>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"https://pan_api.114514cn.me/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label={t(\"setting.allShares\")} />\n                            <Tab label={t(\"setting.trendingShares\")} />\n                            <Tab label={t(\"setting.profile\")} />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.uid\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.nickname\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.group\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.totalShares\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.regTime\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>\n                                                    {t(\"setting.fileName\")}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    {t(\"setting.shareDate\")}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    {t(\n                                                        \"setting.downloadNumber\"\n                                                    )}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    {t(\"setting.viewNumber\")}\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[\" +\n                                                                      t(\n                                                                          \"share.expired\"\n                                                                      ) +\n                                                                      \"]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {formatLocalTime(\n                                                                row.create_date\n                                                            )}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\"\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(ProfileCompoment))));\n\nexport default Profile;\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n}));\n\nexport default function Authn(props) {\n    const { t } = useTranslation();\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = (id) => {\n        API.patch(\"/user/setting/authn\", {\n            id: id,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"setting.authenticatorRemoved\"),\n                    \"success\"\n                );\n                props.remove(id);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"setting.browserNotSupported\"),\n                \"warning\"\n            );\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then((response) => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey,\n                });\n            })\n            .then((credential) => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                props.add(response.data);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"setting.authenticatorAdded\"),\n                    \"success\"\n                );\n                return;\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>{t(\"setting.removedAuthenticator\")}</DialogTitle>\n                <DialogContent>\n                    {t(\"setting.removedAuthenticatorConfirm\")}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                {t(\"setting.hardwareAuthenticator\")}\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map((v) => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60,\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={t(\"setting.addNewAuthenticator\")}\n                        />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n    refreshTimeZone,\n    timeZone,\n    validateTimeZone,\n} from \"../../utils/datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function TimeZoneDialog(props) {\n    const { t } = useTranslation();\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const saveZoneInfo = () => {\n        if (!validateTimeZone(timeZoneValue)) {\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\n            return;\n        }\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\n        refreshTimeZone();\n        props.onClose();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"setting.timeZone\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <FormControl>\n                    <TextField\n                        label={t(\"setting.timeZoneCode\")}\n                        value={timeZoneValue}\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={timeZoneValue === \"\"}\n                        onClick={() => saveZoneInfo()}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch,\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport QRCode from \"qrcode-react\";\nimport {\n    Brightness3,\n    GitHub,\n    Home,\n    ListAlt,\n    PermContactCalendar,\n    Schedule,\n    Translate,\n} from \"@material-ui/icons\";\nimport Authn from \"./Authn\";\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\nimport TimeZoneDialog from \"../Modals/TimeZone\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, withTranslation } from \"react-i18next\";\nimport { selectLanguage } from \"../../redux/viewUpdate/action\";\nimport OptionSelector from \"../Modals/OptionSelector\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    infoText: {\n        marginRight: \"17px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            maxWidth: 100,\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n        },\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            maxWidth: 100,\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n        },\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\",\n        },\n    },\n    desText: {\n        marginTop: \"10px\",\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\",\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\",\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\",\n    },\n    paddingBottom: {\n        marginBottom: \"30px\",\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2),\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: (color) => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: (method) => {\n            dispatch(changeViewMethod(method));\n        },\n        selectLanguage: () => {\n            dispatch(selectLanguage());\n        },\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        changeTimeZone: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\",\n                },\n                options: [],\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: [],\n        },\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false,\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then((response) => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\",\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.avatarUpdated\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\",\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"nickChanged\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\",\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.avatarUpdated\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.settingSaved\"),\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage,\n                    },\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"login.passwordNotMatch\"),\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\",\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.passwordReset\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\",\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.themeColorChanged\"),\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\",\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd,\n            })\n            .then((response) => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then((response) => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\",\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.settingSaved\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor,\n                    },\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = (current) => {\n        const newMode =\n            current === null ? \"light\" : current === \"light\" ? \"dark\" : null;\n        this.props.toggleDaylightMode();\n        Auth.SetPreference(\"theme_mode\", newMode);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.profile\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"https://pan_api.114514cn.me/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary={t(\"setting.avatar\")} />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.uid\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.nickname\")} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"login.email\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.group\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.regTime\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {formatLocalTime(user.created_at)}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.privacyAndSecurity\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.profilePage\")}\n                                />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.accountPassword\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.2fa\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? t(\"setting.disabled\")\n                                            : t(\"setting.enabled\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={(credential) => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential,\n                                    ],\n                                },\n                            });\n                        }}\n                        remove={(id) => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter((v) => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials,\n                                },\n                            });\n                        }}\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.appearance\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.themeColor\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor} />\n                                    <div className={classes.secondColor} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.darkMode\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? t(\"setting.enabled\")\n                                                : t(\"setting.disabled\"))}\n                                        {dark === null &&\n                                            t(\"setting.syncWithSystem\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.fileList\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            t(\"fileManager.gridViewLarge\")}\n                                        {this.props.viewMethod === \"list\" &&\n                                            t(\"fileManager.listView\")}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" &&\n                                            t(\"fileManager.gridViewSmall\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() =>\n                                    this.setState({ changeTimeZone: true })\n                                }\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Schedule />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.timeZone\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {timeZone}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.webdavServer\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.userName\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.manageAccount\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        关于 Cloudreve\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub 仓库\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() => this.props.selectLanguage()}\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Translate />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.language\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <div className={classes.paddingBottom} />\n                </div>\n                <TimeZoneDialog\n                    onClose={() => this.setState({ changeTimeZone: false })}\n                    open={this.state.changeTimeZone}\n                />\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.avatar\")}</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={t(\"setting.uploadImage\")} />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary={t(\"setting.useGravatar\")}\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>{t(\"setting.changeNick\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label={t(\"setting.nickname\")}\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"login.resetPassword\")}</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"setting.originalPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"login.newPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"login.repeatNewPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor\n                            ? t(\"setting.disable2FA\")\n                            : t(\"setting.enable2FA\")}\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCode\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        {t(\"setting.2faDescription\")}\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        {t(\"setting.inputCurrent2FACode\")}\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label={t(\"login.input2FACode\")}\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor\n                                ? t(\"setting.disable2FA\")\n                                : t(\"setting.enable2FA\")}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.themeColor\")}</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.webdavServer\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.userName\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <OptionSelector />\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(UserSettingCompoment))));\n\nexport default UserSetting;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nfunction Register() {\n    const { t } = useTranslation();\n\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n\n    const title = useSelector((state) => state.siteConfig.title);\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const classes = useStyles();\n\n    const register = (e) => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.passwordNotMatch\"),\n                \"warning\"\n            );\n            return;\n        }\n\n        setLoading(true);\n        if (!isValidate.current.isValidate && regCaptcha) {\n            validate(() => register(e), setLoading);\n            return;\n        }\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"login.signUpSuccess\"),\n                        \"success\"\n                    );\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.sinUpTitle\", { title })}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">\n                                    {t(\"login.email\")}\n                                </InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">\n                                    {t(\"login.password\")}\n                                </InputLabel>\n                                <Input\n                                    name=\"password\"\n                                    onChange={handleInputChange(\"password\")}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">\n                                    {t(\"login.repeatPassword\")}\n                                </InputLabel>\n                                <Input\n                                    name=\"pwdRepeat\"\n                                    onChange={handleInputChange(\n                                        \"password_repeat\"\n                                    )}\n                                    type=\"password\"\n                                    id=\"pwdRepeat\"\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && <CaptchaRender />}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={\n                                    loading ||\n                                    (regCaptcha ? captchaLoading : false)\n                                }\n                                className={classes.submit}\n                            >\n                                {t(\"login.signUp\")}\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link component={RouterLink} to={\"/login\"}>\n                                    {t(\"login.backToSingIn\")}\n                                </Link>\n                            </div>\n                            <div>\n                                <Link component={RouterLink} to={\"/forget\"}>\n                                    {t(\"login.forgetPassword\")}\n                                </Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.activateTitle\")}\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            {t(\"login.activateDescription\")}\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const { t } = useTranslation();\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\n        )\n            .then((response) => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {t(\"login.activateSuccess\")}\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        {t(\"login.accountActivated\")}\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        {t(\"login.backToSingIn\")}\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const { t } = useTranslation();\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.passwordNotMatch\"),\n                \"warning\"\n            );\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.passwordReset\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {t(\"login.findMyPassword\")}\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">\n                            {t(\"login.newPassword\")}\n                        </InputLabel>\n                        <Input\n                            id=\"pwd\"\n                            type=\"password\"\n                            name=\"pwd\"\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">\n                            {t(\"login.repeatNewPassword\")}\n                        </InputLabel>\n                        <Input\n                            id=\"pwdRepeat\"\n                            type=\"password\"\n                            name=\"pwdRepeat\"\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {t(\"login.resetPassword\")}\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link component={RouterLink} to={\"/login\"}>\n                            {t(\"login.backToSingIn\")}\n                        </Link>\n                    </div>\n                    <div>\n                        {registerEnabled && (\n                            <Link component={RouterLink} to={\"/signup\"}>\n                                {t(\"login.signUpAccount\")}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction Reset() {\n    const { t } = useTranslation();\n\n    const [input, setInput] = useState({\n        email: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(\n        (state) => state.siteConfig.forgetCaptcha\n    );\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && forgetCaptcha) {\n            validate(() => submit(e), setLoading);\n            return;\n        }\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            ...captchaParamsRef.current,\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.resetEmailSent\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {t(\"login.findMyPassword\")}\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">\n                            {t(\"login.email\")}\n                        </InputLabel>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && <CaptchaRender />}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={\n                            loading || (forgetCaptcha ? captchaLoading : false)\n                        }\n                        className={classes.submit}\n                    >\n                        {t(\"login.sendMeAnEmail\")}\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link component={RouterLink} to={\"/login\"}>\n                            {t(\"login.backToSingIn\")}\n                        </Link>\n                    </div>\n                    <div>\n                        {registerEnabled && (\n                            <Link component={RouterLink} to={\"/signup\"}>\n                                {t(\"login.signUpAccount\")}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    List,\n    Slider,\n    withStyles,\n} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport PlayNext from \"@material-ui/icons/SkipNext\";\nimport PlayPrev from \"@material-ui/icons/SkipPrevious\";\nimport Pause from \"@material-ui/icons/Pause\";\nimport { Repeat, RepeatOne, Shuffle } from \"@material-ui/icons\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { audioPreviewSuffix } from \"../../config\";\nimport { baseURL } from \"../../middleware/Api\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    audioPreviewSetIsOpen,\n    audioPreviewSetPlaying,\n    showAudioPreview,\n} from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    list: {\n        //maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: \"relative\",\n        overflow: \"auto\",\n        maxHeight: 300,\n    },\n    slider_root: {\n        \"vertical-align\": \"middle\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.audioPreview.first,\n        other: state.explorer.audioPreview.other,\n        isOpen: state.explorer.audioPreview.isOpen,\n        playingName: state.explorer.audioPreview.playingName,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showAudioPreview: (first) => {\n            dispatch(showAudioPreview(first));\n        },\n        audioPreviewSetIsOpen: (first) => {\n            dispatch(audioPreviewSetIsOpen(first));\n        },\n        audioPreviewSetPlaying: (playingName, paused) => {\n            dispatch(audioPreviewSetPlaying(playingName, paused));\n        },\n    };\n};\n\nclass MusicPlayerComponent extends Component {\n    state = {\n        items: [],\n        currentIndex: 0,\n        //isOpen: false,\n        //isPlay:false,\n        currentTime: 0,\n        duration: 0,\n        progressText: \"00:00/00:00\",\n        looptype: 0,\n    };\n    myAudioRef = React.createRef();\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newItem = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newItem);\n                this.setState({\n                    currentIndex: firstOne,\n                    items: items,\n                    //isOpen: true,\n                });\n                this.props.audioPreviewSetIsOpen(true);\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (audioPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newItem = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newItem);\n                }\n            });\n            this.setState({\n                currentIndex: firstOne,\n                items: items,\n                //isOpen: true,\n            });\n            this.props.audioPreviewSetIsOpen(true);\n            this.props.showAudioPreview(explorer.initState.audioPreview.first);\n        }\n    };\n\n    handleItemClick = (currentIndex) => () => {\n        this.setState({\n            currentIndex: currentIndex,\n        });\n    };\n\n    handleClose = () => {\n        /*this.setState({\n            isOpen: false,\n        });*/\n        this.setState({\n            currentIndex: -1,\n        });\n        this.pause();\n        this.props.audioPreviewSetPlaying(null, false);\n        this.props.audioPreviewSetIsOpen(false);\n    };\n    backgroundPlay = () => {\n        this.props.audioPreviewSetIsOpen(false);\n    };\n\n    componentDidMount() {\n        if (this.myAudioRef.current) {\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentDidUpdate() {\n        if (this.myAudioRef.current) {\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentWillUnmount() {\n        this.unbindEvents(this.myAudioRef.current);\n    }\n\n    bindEvents = (ele) => {\n        if (ele) {\n            ele.addEventListener(\"canplay\", this.readyPlay);\n            ele.addEventListener(\"ended\", this.loopnext);\n            ele.addEventListener(\"timeupdate\", this.timeUpdate);\n        }\n    };\n\n    unbindEvents = (ele) => {\n        if (ele) {\n            ele.removeEventListener(\"canplay\", this.readyPlay);\n            ele.removeEventListener(\"ended\", this.loopnext);\n            ele.removeEventListener(\"timeupdate\", this.timeUpdate);\n        }\n    };\n\n    readyPlay = () => {\n        this.play();\n    };\n\n    formatTime = (s) => {\n        if (isNaN(s)) return \"00:00\";\n        const minute = Math.floor(s / 60);\n        const second = Math.floor(s % 60);\n        return (\n            `${minute}`.padStart(2, \"0\") + \":\" + `${second}`.padStart(2, \"0\")\n        );\n    };\n\n    timeUpdate = () => {\n        const currentTime = Math.floor(this.myAudioRef.current.currentTime); //this.myAudioRef.current.currentTime;//\n        this.setState({\n            currentTime: currentTime,\n            duration: this.myAudioRef.current.duration,\n            progressText:\n                this.formatTime(currentTime) +\n                \"/\" +\n                this.formatTime(this.myAudioRef.current.duration),\n        });\n    };\n\n    play = () => {\n        this.myAudioRef.current.play();\n        /*this.setState({\n            isPlay: true\n        });*/\n        this.props.audioPreviewSetPlaying(\n            this.state.items[this.state.currentIndex].intro,\n            false\n        );\n    };\n\n    pause = () => {\n        if (this.myAudioRef.current) {\n            this.myAudioRef.current.pause();\n        }\n        /*this.setState({\n            isPlay: false\n        })*/\n        this.props.audioPreviewSetPlaying(\n            this.state.items[this.state.currentIndex]?.intro,\n            true\n        );\n    };\n\n    playOrPaues = () => {\n        if (this.state.isPlay) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    };\n    changeLoopType = () => {\n        let lt = this.state.looptype + 1;\n        if (lt >= 3) {\n            lt = 0;\n        }\n        this.setState({\n            looptype: lt,\n        });\n    };\n    loopnext = () => {\n        let index = this.state.currentIndex;\n        if (this.state.looptype == 0) {\n            //all\n            index = index + 1;\n            if (index >= this.state.items.length) {\n                index = 0;\n            }\n        } else if (this.state.looptype == 1) {\n            //single\n            //index=index;\n        } else if (this.state.looptype == 2) {\n            //random\n            if (this.state.items.length <= 2) {\n                index = index + 1;\n                if (index >= this.state.items.length) {\n                    index = 0;\n                }\n            } else {\n                while (index == this.state.currentIndex) {\n                    index = Math.floor(Math.random() * this.state.items.length);\n                }\n            }\n        }\n        if (this.state.currentIndex == index) {\n            this.myAudioRef.current.currentTime = 0;\n            this.play();\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    prev = () => {\n        let index = this.state.currentIndex - 1;\n        if (index < 0) {\n            index = this.state.items.length - 1;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    next = () => {\n        let index = this.state.currentIndex + 1;\n        if (index >= this.state.items.length) {\n            index = 0;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    handleProgress = (e, newValue) => {\n        this.myAudioRef.current.currentTime = newValue;\n    };\n\n    render() {\n        const { currentIndex, items } = this.state;\n        const { isOpen, classes, t } = this.props;\n        return (\n            <Dialog\n                open={isOpen}\n                onClose={this.backgroundPlay}\n                aria-labelledby=\"form-dialog-title\"\n                maxWidth=\"xs\"\n                fullWidth\n                keepMounted\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"fileManager.musicPlayer\")}\n                </DialogTitle>\n                <DialogContent>\n                    <List className={classes.list} dense>\n                        {items.map((value, idx) => {\n                            const labelId = `label-${value.intro}`;\n                            return (\n                                <ListItem\n                                    key={value.src}\n                                    dense\n                                    button\n                                    onClick={this.handleItemClick(idx)}\n                                    selected={idx === currentIndex}\n                                >\n                                    <ListItemIcon>\n                                        {idx === currentIndex ? (\n                                            <PlayArrow />\n                                        ) : (\n                                            <MusicNote />\n                                        )}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        id={labelId}\n                                        primary={`${value.intro}`}\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                    <audio\n                        ref={this.myAudioRef}\n                        src={items[currentIndex]?.src}\n                    />\n                    <div style={{ \"padding-top\": 8 }} />\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs>\n                            <Slider\n                                classes={{ root: classes.slider_root }}\n                                value={this.state.currentTime}\n                                onChange={this.handleProgress}\n                                step={1}\n                                min={0}\n                                max={this.state.duration}\n                                aria-labelledby=\"continuous-slider\"\n                            />\n                        </Grid>\n                        <Grid item>{this.state.progressText}</Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        justifyContent=\"center\"\n                        justify=\"center\"\n                    >\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.changeLoopType}\n                            >\n                                {this.state.looptype === 0 ? (\n                                    <Repeat />\n                                ) : this.state.looptype === 1 ? (\n                                    <RepeatOne />\n                                ) : (\n                                    <Shuffle />\n                                )}\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.prev}\n                            >\n                                <PlayPrev />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.pause}\n                            >\n                                <Pause />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.play}\n                            >\n                                <PlayArrow />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.next}\n                            >\n                                <PlayNext />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose}>\n                        {t(\"fileManager.closeAndStop\")}\n                    </Button>\n                    <Button onClick={this.backgroundPlay}>\n                        {t(\"fileManager.playInBackground\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nMusicPlayerComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst MusicPlayer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(MusicPlayerComponent))));\n\nexport default MusicPlayer;\n","import React, { Suspense, useCallback, useMemo, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\n\nconst ReactReader = React.lazy(() =>\n    import(/* webpackChunkName: \"ReactReader\" */ \"react-reader\").then((m) => ({\n        default: m.ReactReader,\n    }))\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        height: \"calc(100vh - 64px)\",\n    },\n    paper: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function EpubViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const { path } = UseFileSubTitle(query, math, location);\n    const isShare = pathHelper.isSharePage(location.pathname);\n\n    const [currentLocation, setLocation] = useState(null);\n    const locationChanged = (epubcifi) => {\n        setLocation(epubcifi);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const fileUrl = useMemo(\n        () =>\n            getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\")\n            ),\n        [id, location, path]\n    );\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Suspense fallback={<TextLoading />}>\n                <ReactReader\n                    location={currentLocation}\n                    locationChanged={locationChanged}\n                    epubInitOptions={{\n                        openAs: \"epub\",\n                    }}\n                    showToc={false}\n                    className={classes.container}\n                    url={fileUrl}\n                />\n            </Suspense>\n        </div>\n    );\n}\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport NoAuthRoute from \"./middleware/NoAuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nimport MusicPlayer from \"./component/FileManager/MusicPlayer\";\nimport EpubViewer from \"./component/Viewer/Epub\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PDFViewer = React.lazy(() =>\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\n);\n\nexport default function App() {\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const { t } = useTranslation();\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main,\n                },\n            },\n            overrides: {\n                MuiButton: {\n                    root: {\n                        textTransform: \"none\",\n                    },\n                },\n                MuiTab: {\n                    root: {\n                        textTransform: \"none\",\n                    },\n                },\n            },\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0,\n        },\n        toolbar: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\",\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}epub`} isLogin={isLogin}>\n                                <EpubViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <AuthRoute\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <NoAuthRoute\n                                exact\n                                path={`${path}login`}\n                                isLogin={isLogin}\n                            >\n                                <LoginForm />\n                            </NoAuthRoute>\n\n                            <NoAuthRoute\n                                exact\n                                path={`${path}signup`}\n                                isLogin={isLogin}\n                            >\n                                <Register />\n                            </NoAuthRoute>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/epub(/)*`}>\n                                <EpubViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound\n                                    msg={t(\"pageNotFound\", { ns: \"common\" })}\n                                />\n                            </Route>\n                        </Switch>\n                    </main>\n                    <MusicPlayer />\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\nimport {\n    changeViewMethod,\n    setSiteConfig,\n    toggleSnackbar,\n} from \"../redux/explorer\";\nimport i18next from \"../i18n\";\n\nconst initUserConfig = (siteConfig) => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = (rawStore) => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n    return rawStore;\n};\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function (response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data)\n            );\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method)\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method)\n                    );\n                }\n            }\n        })\n        .catch(function (error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"errLoadingSiteConfig\", { ns: \"common\" }) +\n                        error.message,\n                    \"error\"\n                )\n            );\n        });\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { SortMethod } from \"../../types\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod: SortMethod;\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        torrentDownload: boolean;\n        getSource: string;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n        option?: {\n            options: {\n                open: boolean;\n                key: string;\n                name: string;\n                description?: string;\n            }[];\n            title: string;\n            callback: any;\n            onClose: any;\n        };\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n    pagination: {\n        page: number;\n        size: number;\n    };\n    openFileSelector: number;\n    openFolderSelector: number;\n    shareInfo: any;\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: Auth.GetPreferenceWithDefault(\"sort\", \"timePos\"),\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        torrentDownload: false,\n        getSource: \"\",\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\",\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\",\n    },\n    pagination: {\n        page: 1,\n        size: Auth.GetPreferenceWithDefault(\"pagination\", 100),\n    },\n    openFileSelector: 0,\n    openFolderSelector: 0,\n    shareInfo: null,\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open,\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method,\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status,\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg,\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true,\n                }),\n                contextOpen: false,\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor,\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor,\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    torrentDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: action.source,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text,\n                }),\n                contextOpen: false,\n            });\n        case \"CLOSE_CONTEXT_MENU\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    torrentDownload: false,\n                    getSource: \"\",\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false,\n                    option: undefined,\n                }),\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color,\n                },\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status,\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status,\n            };\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh,\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true,\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType,\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title,\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading,\n            };\n        case \"SET_OPTION_MODAL\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    option: action.option,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_FILE_SELECTOR\":\n            return {\n                ...state,\n                openFileSelector: state.openFileSelector + 1,\n                contextOpen: false,\n            };\n        case \"OPEN_FOLDER_SELECTOR\":\n            return {\n                ...state,\n                openFolderSelector: state.openFolderSelector + 1,\n                contextOpen: false,\n            };\n        case \"SET_PAGINATION\":\n            return {\n                ...state,\n                pagination: action.pagination,\n            };\n        case \"SET_SHARE_INFO\":\n            return {\n                ...state,\n                shareInfo: action.shareInfo,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\nimport { connectRouter } from \"connected-react-router\";\nimport i18next from \"../i18n\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path,\n        }),\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\",\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\",\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\",\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\",\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\",\n                },\n            },\n        },\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_type: \"normal\",\n        tcaptcha_captcha_app_id: \"\",\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true,\n    },\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\",\n                            },\n                        },\n                    },\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\",\n                        },\n                    },\n                },\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme],\n                    }),\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config,\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh,\n                }),\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/\" + i18next.t(\"fileManager.searchResult\"),\n                    refresh: !state.explorer.search\n                        ? state.navigator.refresh\n                        : !state.navigator.refresh,\n                }),\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (history) => (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({\n        viewUpdate,\n        explorer,\n        router: connectRouter(history),\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\n    return {\n        ...appState,\n        ...combinedState,\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\",\n    },\n    h2: {\n        margin: \"15px 0px\",\n    },\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        if (this.state.hasError) {\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>{t(\"renderError\")}</h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>{t(\"errorDetails\")}</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withTranslation([\"common\"])(withStyles(styles)(ErrorBoundary));\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nimport { createBrowserHistory } from \"history\";\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\nimport i18next from \"./i18n\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\n\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\nserviceWorker.register({\n    onUpdate: (registration) => {\n        alert(i18next.t(\"newVersionRefresh\", { ns: \"common\" }));\n        if (registration && registration.waiting) {\n            registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\n        }\n        window.location.reload();\n    },\n});\n\nexport const history = createBrowserHistory();\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nconst store = createStore(cloureveApp(history), reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <Suspense fallback={<PageLoading />}>\n        <ErrorBoundary>\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <Switch>\n                        <Route path=\"/admin\">\n                            <Admin />\n                        </Route>\n                        <Route exact path=\"\">\n                            <App />\n                        </Route>\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        </ErrorBoundary>\n    </Suspense>,\n    document.getElementById(\"root\")\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction,\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import React from \"react\";\nimport { PackageVariant } from \"mdi-material-ui\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    emptyContainer: {\n        bottom: \"0\",\n\n        color: theme.palette.action.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.action.disabled,\n    },\n    emptyInfoSmall: {\n        color: theme.palette.action.disabled,\n    },\n}));\n\nexport default function Nothing({ primary, secondary, top = 20, size = 1 }) {\n    const classes = useStyles();\n    return (\n        <div\n            style={{\n                margin: `${50 * size}px auto`,\n                paddingTop: top,\n            }}\n            className={classes.emptyContainer}\n        >\n            <PackageVariant\n                style={{\n                    fontSize: 160 * size,\n                }}\n            />\n            <div\n                style={{\n                    fontSize: 25 * size,\n                }}\n                className={classes.emptyInfoBig}\n            >\n                {primary}\n            </div>\n            {secondary !== \"\" && (\n                <div className={classes.emptyInfoSmall}>{secondary}</div>\n            )}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport {\n    IconButton,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MenuList,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconWhite: {\n        color: theme.palette.common.white,\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white,\n        },\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\",\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\",\n    },\n});\n\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        dirList: [],\n        selectedTarget: null,\n    };\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(!this.props.search ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = (toBeLoad) => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad)\n        )\n            .then((response) => {\n                const dirList = response.data.objects.filter((x) => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex((value) => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                if (toBeLoad === \"/\") {\n                    dirList.unshift({ name: \"/\", path: \"\" });\n                }\n                this.setState({\n                    presentPath: toBeLoad,\n                    dirList: dirList,\n                    selectedTarget: null,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            });\n    };\n\n    handleSelect = (index) => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.container}>\n                <MenuList className={classes.selector}>\n                    {this.state.presentPath !== \"/\" && (\n                        <MenuItem onClick={this.back}>\n                            <ListItemIcon>\n                                <UpIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"返回上一层\" />\n                        </MenuItem>\n                    )}\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected,\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.name}\n                                primaryTypographyProps={{\n                                    style: { whiteSpace: \"normal\" },\n                                }}\n                            />\n                            {value.name !== \"/\" && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index,\n                                        })}\n                                        onClick={() =>\n                                            this.enterFolder(\n                                                value.path === \"/\"\n                                                    ? value.path + value.name\n                                                    : value.path +\n                                                          \"/\" +\n                                                          value.name\n                                            )\n                                        }\n                                    >\n                                        <RightIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(PathSelectorCompoment));\n","import { useDispatch } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { changeSubTitle } from \"../redux/viewUpdate/action\";\nimport pathHelper from \"../utils/page\";\n\nexport default function UseFileSubTitle(query, math, location) {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState(\"\");\n    const [path, setPath] = useState(\"\");\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            setPath(query.get(\"p\"));\n            SetSubTitle(path[path.length - 1]);\n            setTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n            setTitle(query.get(\"name\"));\n            setPath(query.get(\"share_path\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    return { title, path };\n}\n"],"sourceRoot":""}